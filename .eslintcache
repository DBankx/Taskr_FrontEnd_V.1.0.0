[{"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts":"1","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderInfo.tsx":"2","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottomPlaceholder.tsx":"3","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\TaskrChatTab.tsx":"4","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx":"5","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\enumFunctions.tsx":"6","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx":"7","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts":"8","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatsPlaceholder.tsx":"9","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\TagLine.tsx":"10","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BillingInformation.tsx":"11","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx":"12","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\TaglineForm.tsx":"13","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPlaceholder.tsx":"14","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\RunnerOrders.tsx":"15","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\orderStore.tsx":"16","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\OrderDetails.tsx":"17","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderActivity.tsx":"18","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderInfoDetails.tsx":"19","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\notification.ts":"20","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx":"21","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotificationAlert.tsx":"22","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPage.tsx":"23","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\ActiveOrders.tsx":"24","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx":"25","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx":"26","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx":"27","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx":"28","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\Orders.tsx":"29","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\LocationFinder.tsx":"30","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTopPlaceholder.tsx":"31","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\copyStyle.ts":"32","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx":"33","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx":"34","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx":"35","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx":"36","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatBox.tsx":"37","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Review.tsx":"38","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\TaskStatus.tsx":"39","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx":"40","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BankAccountForm.tsx":"41","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\profileStore.tsx":"42","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx":"43","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx":"44","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx":"45","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\AccountBio.tsx":"46","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCardSlider.tsx":"47","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\TextMessage.tsx":"48","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx":"49","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\InboxPage.tsx":"50","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\OrdersPage.tsx":"51","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\ProfilePage.tsx":"52","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx":"53","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTop.tsx":"54","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx":"55","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ReviewSummary.tsx":"56","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidModalDetails.tsx":"57","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SocialsForm.tsx":"58","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SkillsForm.tsx":"59","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx":"60","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx":"61","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx":"62","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\PublicProfileStore.tsx":"63","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\chatStore.tsx":"64","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts":"65","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\ActiveTasks.tsx":"66","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\PayoutOrders.tsx":"67","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\CompletedOrders.tsx":"68","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx":"69","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePage.tsx":"70","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx":"71","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx":"72","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx":"73","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\taskStatus.ts":"74","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx":"75","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx":"76","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx":"77","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\deliveryTypes.ts":"78","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\ProfileSettingsPage.tsx":"79","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskPlaceholder.tsx":"80","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\ReceiverProfile.tsx":"81","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx":"82","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx":"83","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCard.tsx":"84","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTable.tsx":"85","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskAssignedDetails.tsx":"86","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidInfo.tsx":"87","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskBidItem.tsx":"88","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\ReviewForm.tsx":"89","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\PublicProfilePage.tsx":"90","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx":"91","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\ProfileReviews\\ProfileReviews.tsx":"92","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottom.tsx":"93","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\RunnerChatTab.tsx":"94","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Rater.tsx":"95","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageTopBox.tsx":"96","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileReviews.tsx":"97","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityTab.tsx":"98","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx":"99","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityForm.tsx":"100","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\reviews\\ReviewPane.tsx":"101","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx":"102","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx":"103","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatContainer.tsx":"104","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\MyProfile.tsx":"105","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\LanguageForm.tsx":"106","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx":"107","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx":"108","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\category.ts":"109","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePagePlaceholder.tsx":"110","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTab.tsx":"111","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx":"112","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskSection.tsx":"113","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getErrors.tsx":"114","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\account\\AccountTab.tsx":"115","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx":"116","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\cancelledOrders.tsx":"117","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\CancelledOrders.tsx":"118"},{"size":1240,"mtime":1614453777641,"results":"119","hashOfConfig":"120"},{"size":1116,"mtime":1615816956566,"results":"121","hashOfConfig":"120"},{"size":1666,"mtime":1613203032804,"results":"122","hashOfConfig":"120"},{"size":1463,"mtime":1613597120540,"results":"123","hashOfConfig":"120"},{"size":5343,"mtime":1611166930733,"results":"124","hashOfConfig":"120"},{"size":380,"mtime":1611148501315,"results":"125","hashOfConfig":"120"},{"size":347,"mtime":1610565679053,"results":"126","hashOfConfig":"120"},{"size":10076,"mtime":1615813725932,"results":"127","hashOfConfig":"120"},{"size":5700,"mtime":1613519383901,"results":"128","hashOfConfig":"120"},{"size":1111,"mtime":1611859887411,"results":"129","hashOfConfig":"120"},{"size":2111,"mtime":1615494734214,"results":"130","hashOfConfig":"120"},{"size":3403,"mtime":1614523987370,"results":"131","hashOfConfig":"120"},{"size":1621,"mtime":1611859810799,"results":"132","hashOfConfig":"120"},{"size":2052,"mtime":1613927637138,"results":"133","hashOfConfig":"120"},{"size":4294,"mtime":1615761370971,"results":"134","hashOfConfig":"120"},{"size":6823,"mtime":1615816337354,"results":"135","hashOfConfig":"120"},{"size":7892,"mtime":1615817093747,"results":"136","hashOfConfig":"120"},{"size":11630,"mtime":1615814935428,"results":"137","hashOfConfig":"120"},{"size":7413,"mtime":1615761786925,"results":"138","hashOfConfig":"120"},{"size":164,"mtime":1615053290690,"results":"139","hashOfConfig":"120"},{"size":101055,"mtime":1615139076779,"results":"140","hashOfConfig":"120"},{"size":2410,"mtime":1615053402938,"results":"141","hashOfConfig":"120"},{"size":5518,"mtime":1615053530905,"results":"142","hashOfConfig":"120"},{"size":4141,"mtime":1615761304607,"results":"143","hashOfConfig":"120"},{"size":873,"mtime":1612638913198,"results":"144","hashOfConfig":"120"},{"size":271,"mtime":1609353715022,"results":"145","hashOfConfig":"120"},{"size":3250,"mtime":1615666616457,"results":"146","hashOfConfig":"120"},{"size":234,"mtime":1609429211018,"results":"147","hashOfConfig":"120"},{"size":1840,"mtime":1615662018559,"results":"148","hashOfConfig":"120"},{"size":3904,"mtime":1611054324932,"results":"149","hashOfConfig":"120"},{"size":574,"mtime":1613116335194,"results":"150","hashOfConfig":"120"},{"size":318,"mtime":1611077557281,"results":"151","hashOfConfig":"120"},{"size":4622,"mtime":1613513375176,"results":"152","hashOfConfig":"120"},{"size":1038,"mtime":1609509530471,"results":"153","hashOfConfig":"120"},{"size":738,"mtime":1610275409302,"results":"154","hashOfConfig":"120"},{"size":964,"mtime":1609411308644,"results":"155","hashOfConfig":"120"},{"size":2652,"mtime":1614075470760,"results":"156","hashOfConfig":"120"},{"size":1587,"mtime":1615760628854,"results":"157","hashOfConfig":"120"},{"size":636,"mtime":1615666356362,"results":"158","hashOfConfig":"120"},{"size":3259,"mtime":1614522817603,"results":"159","hashOfConfig":"120"},{"size":6077,"mtime":1615493783220,"results":"160","hashOfConfig":"120"},{"size":8688,"mtime":1615494117505,"results":"161","hashOfConfig":"120"},{"size":3637,"mtime":1614715235004,"results":"162","hashOfConfig":"120"},{"size":248,"mtime":1609352810131,"results":"163","hashOfConfig":"120"},{"size":2363,"mtime":1612511548568,"results":"164","hashOfConfig":"120"},{"size":7329,"mtime":1611859840620,"results":"165","hashOfConfig":"120"},{"size":1779,"mtime":1613215523315,"results":"166","hashOfConfig":"120"},{"size":1475,"mtime":1613664673210,"results":"167","hashOfConfig":"120"},{"size":6925,"mtime":1611149664872,"results":"168","hashOfConfig":"120"},{"size":1217,"mtime":1613910425530,"results":"169","hashOfConfig":"120"},{"size":1455,"mtime":1614889198950,"results":"170","hashOfConfig":"120"},{"size":3609,"mtime":1614629995058,"results":"171","hashOfConfig":"120"},{"size":2386,"mtime":1613857862507,"results":"172","hashOfConfig":"120"},{"size":4182,"mtime":1613202306047,"results":"173","hashOfConfig":"120"},{"size":647,"mtime":1609418891029,"results":"174","hashOfConfig":"120"},{"size":1381,"mtime":1611684354728,"results":"175","hashOfConfig":"120"},{"size":6588,"mtime":1614454040395,"results":"176","hashOfConfig":"120"},{"size":6730,"mtime":1611859822550,"results":"177","hashOfConfig":"120"},{"size":3081,"mtime":1611859788799,"results":"178","hashOfConfig":"120"},{"size":4086,"mtime":1615666890617,"results":"179","hashOfConfig":"120"},{"size":16611,"mtime":1614878228403,"results":"180","hashOfConfig":"120"},{"size":2258,"mtime":1611786214717,"results":"181","hashOfConfig":"120"},{"size":2629,"mtime":1615758712998,"results":"182","hashOfConfig":"120"},{"size":5820,"mtime":1614884528377,"results":"183","hashOfConfig":"120"},{"size":425,"mtime":1607677411935,"results":"184","hashOfConfig":"120"},{"size":4695,"mtime":1613519497759,"results":"185","hashOfConfig":"120"},{"size":4290,"mtime":1615761360116,"results":"186","hashOfConfig":"120"},{"size":4304,"mtime":1615761352256,"results":"187","hashOfConfig":"120"},{"size":588,"mtime":1610965734551,"results":"188","hashOfConfig":"120"},{"size":1963,"mtime":1613981201231,"results":"189","hashOfConfig":"120"},{"size":1517,"mtime":1610351220877,"results":"190","hashOfConfig":"120"},{"size":2236,"mtime":1613832001162,"results":"191","hashOfConfig":"120"},{"size":4679,"mtime":1614422183756,"results":"192","hashOfConfig":"120"},{"size":87,"mtime":1611321195156,"results":"193","hashOfConfig":"120"},{"size":2485,"mtime":1609666422717,"results":"194","hashOfConfig":"120"},{"size":4188,"mtime":1613917675818,"results":"195","hashOfConfig":"120"},{"size":4466,"mtime":1610532359295,"results":"196","hashOfConfig":"120"},{"size":57,"mtime":1611149087400,"results":"197","hashOfConfig":"120"},{"size":2278,"mtime":1612943743947,"results":"198","hashOfConfig":"120"},{"size":4097,"mtime":1613326355252,"results":"199","hashOfConfig":"120"},{"size":1602,"mtime":1613853723712,"results":"200","hashOfConfig":"120"},{"size":3929,"mtime":1610816256671,"results":"201","hashOfConfig":"120"},{"size":2777,"mtime":1612599809177,"results":"202","hashOfConfig":"120"},{"size":2669,"mtime":1613328649705,"results":"203","hashOfConfig":"120"},{"size":4933,"mtime":1611482453899,"results":"204","hashOfConfig":"120"},{"size":2382,"mtime":1615666308199,"results":"205","hashOfConfig":"120"},{"size":3616,"mtime":1615667089685,"results":"206","hashOfConfig":"120"},{"size":2816,"mtime":1615667275275,"results":"207","hashOfConfig":"120"},{"size":3952,"mtime":1615737981834,"results":"208","hashOfConfig":"120"},{"size":2535,"mtime":1615759116173,"results":"209","hashOfConfig":"120"},{"size":1860,"mtime":1610307610747,"results":"210","hashOfConfig":"120"},{"size":1757,"mtime":1615760113551,"results":"211","hashOfConfig":"120"},{"size":1986,"mtime":1613121278494,"results":"212","hashOfConfig":"120"},{"size":1510,"mtime":1613831547278,"results":"213","hashOfConfig":"120"},{"size":691,"mtime":1611682176899,"results":"214","hashOfConfig":"120"},{"size":951,"mtime":1613853246435,"results":"215","hashOfConfig":"120"},{"size":1109,"mtime":1615759688926,"results":"216","hashOfConfig":"120"},{"size":1432,"mtime":1612971374189,"results":"217","hashOfConfig":"120"},{"size":2302,"mtime":1611485298934,"results":"218","hashOfConfig":"120"},{"size":5151,"mtime":1612970242407,"results":"219","hashOfConfig":"120"},{"size":1668,"mtime":1615760518698,"results":"220","hashOfConfig":"120"},{"size":2420,"mtime":1614673009332,"results":"221","hashOfConfig":"120"},{"size":2720,"mtime":1609262456322,"results":"222","hashOfConfig":"120"},{"size":1136,"mtime":1613641459235,"results":"223","hashOfConfig":"120"},{"size":1848,"mtime":1612646562080,"results":"224","hashOfConfig":"120"},{"size":3231,"mtime":1611859768658,"results":"225","hashOfConfig":"120"},{"size":1144,"mtime":1610306281019,"results":"226","hashOfConfig":"120"},{"size":5373,"mtime":1614518662575,"results":"227","hashOfConfig":"120"},{"size":133,"mtime":1611141765490,"results":"228","hashOfConfig":"120"},{"size":2423,"mtime":1613910108980,"results":"229","hashOfConfig":"120"},{"size":1261,"mtime":1612646507065,"results":"230","hashOfConfig":"120"},{"size":1010,"mtime":1610444548705,"results":"231","hashOfConfig":"120"},{"size":1126,"mtime":1613325377750,"results":"232","hashOfConfig":"120"},{"size":468,"mtime":1610361256727,"results":"233","hashOfConfig":"120"},{"size":2430,"mtime":1612895732709,"results":"234","hashOfConfig":"120"},{"size":1895,"mtime":1612882184524,"results":"235","hashOfConfig":"120"},{"size":4324,"mtime":1615816490091,"results":"236","hashOfConfig":"120"},{"size":4324,"mtime":1615816770348,"results":"237","hashOfConfig":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},"1bnsgpt",{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"249"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"240"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":98,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"255"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"288"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"341"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"341"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"249"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"255"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"249"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"249"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"255"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"288"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"288"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"255"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderInfo.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottomPlaceholder.tsx",["499"],"﻿import {Box, Divider, Skeleton} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst ProfileDetailsBottomPlaceholder = () => {\r\n    return (\r\n        <Box className=\"task__bid__form__card\">\r\n            <Box>\r\n                <Skeleton width=\"100px\" height=\"20px\" />\r\n                \r\n                <Box mt={5}>\r\n                <Skeleton mt={5} height=\"20px\" />\r\n                <Skeleton mt={5} height=\"20px\" />\r\n                <Skeleton mt={5} height=\"20px\" />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Divider mt={6} mb={6} />\r\n            \r\n            <Box>\r\n                <Skeleton width=\"100px\" height=\"20px\" />\r\n\r\n                <Box mt={5}>\r\n                    <Skeleton mt={5} height=\"20px\" />\r\n                    <Skeleton mt={5} height=\"20px\" />\r\n                    <Skeleton mt={5} height=\"20px\" />\r\n                </Box> \r\n            </Box>\r\n\r\n            <Divider mt={6} mb={6} />\r\n            \r\n            <Box>\r\n                <ul className=\"profile__skill__list\">\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                </ul>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProfileDetailsBottomPlaceholder;",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\TaskrChatTab.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\enumFunctions.tsx",["500","501","502","503","504","505"],"﻿export function getAllEnumKeys(enumType: any){\r\n    return Object.keys(enumType).filter(key => isNaN(Number(key)))\r\n}\r\nexport function getAllEnumValues(enumType: any) {\r\n    return getAllEnumKeys(enumType).map((key: any) => enumType[key])\r\n}\r\nexport function getAllEnumEntries(enumType: any) {\r\n    return getAllEnumKeys(enumType).map((key : any) => [key, enumType[key]])\r\n}   ",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts",["506","507","508","509","510","511","512"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatsPlaceholder.tsx",["513"],"﻿import {Box, StackDivider, HStack, Skeleton, SkeletonCircle, SimpleGrid, VStack, useMediaQuery} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst ChatsPlaceholder = () => {\r\n    const [isMobile] = useMediaQuery(\"(max-width: 600px)\");\r\n    return (\r\n        <Box className=\"container\">\r\n        <Box className=\"task__bid__form__card\">\r\n            <VStack\r\n                divider={<StackDivider borderColor=\"gray.200\" />}\r\n                spacing={9}\r\n                align=\"stretch\"\r\n            >\r\n                <Box>\r\n                <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                    {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                    <Box width=\"100%\">\r\n                        <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                            <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                            <Box width=\"100%\">\r\n                                <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                <Skeleton width=\"30%\" height=\"15px\" />\r\n                            </Box>\r\n                        </SimpleGrid>\r\n                    </Box>\r\n                    <Box height=\"inherit\">\r\n                        <Skeleton width=\"40px\" height=\"15px\" />\r\n                    </Box>\r\n                </HStack>\r\n                </Box>\r\n                <Box>\r\n                    <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                        {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                        <Box width=\"100%\">\r\n                            <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                                <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                                <Box width=\"100%\">\r\n                                    <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                    <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                    <Skeleton width=\"30%\" height=\"15px\" />\r\n                                </Box>\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                        <Box height=\"inherit\">\r\n                            <Skeleton width=\"40px\" height=\"15px\" />\r\n                        </Box>\r\n                    </HStack>\r\n                </Box>\r\n                <Box>\r\n                    <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                        {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                        <Box width=\"100%\">\r\n                            <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                                <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                                <Box width=\"100%\">\r\n                                    <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                    <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                    <Skeleton width=\"30%\" height=\"15px\" />\r\n                                </Box>\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                        <Box height=\"inherit\">\r\n                            <Skeleton width=\"40px\" height=\"15px\" />\r\n                        </Box>\r\n                    </HStack>\r\n                </Box>\r\n                <Box>\r\n                    <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                        {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                        <Box width=\"100%\">\r\n                            <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                                <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                                <Box width=\"100%\">\r\n                                    <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                    <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                    <Skeleton width=\"30%\" height=\"15px\" />\r\n                                </Box>\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                        <Box height=\"inherit\">\r\n                            <Skeleton width=\"40px\" height=\"15px\" />\r\n                        </Box>\r\n                    </HStack>\r\n                </Box>\r\n                <Box>\r\n                    <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                        {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                        <Box width=\"100%\">\r\n                            <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                                <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                                <Box width=\"100%\">\r\n                                    <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                    <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                    <Skeleton width=\"30%\" height=\"15px\" />\r\n                                </Box>\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                        <Box height=\"inherit\">\r\n                            <Skeleton width=\"40px\" height=\"15px\" />\r\n                        </Box>\r\n                    </HStack>\r\n                </Box>\r\n            </VStack>\r\n        </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatsPlaceholder;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\TagLine.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BillingInformation.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\TaglineForm.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPlaceholder.tsx",["514"],"﻿import {Box, SkeletonCircle, Skeleton, Divider, SimpleGrid} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst NotificationsPlaceholder = () => {\r\n    return (\r\n        <Box style={{width: \"inherit\"}}>\r\n                    <SimpleGrid alignItems=\"flex-start\" templateColumns=\"0.3fr 1.4fr\" className=\"notification__item\" spacing=\"10px\">\r\n                        <SkeletonCircle width=\"60px\" height=\"60px\" />\r\n                <div style={{width: \"100%\"}}>\r\n                    <Skeleton height=\"15px\" width=\"100%\" mb=\"1em\" />\r\n                    <Skeleton height=\"15px\" width=\"70%\" />\r\n                </div>\r\n                    </SimpleGrid>\r\n            <Divider />\r\n            <SimpleGrid alignItems=\"flex-start\" templateColumns=\"0.3fr 1.4fr\" className=\"notification__item\" spacing=\"10px\">\r\n                <SkeletonCircle width=\"60px\" height=\"60px\" />\r\n                <div style={{width: \"100%\"}}>\r\n                    <Skeleton height=\"15px\" width=\"100%\" mb=\"1em\" />\r\n                    <Skeleton height=\"15px\" width=\"70%\" />\r\n                </div>\r\n            </SimpleGrid>\r\n            <Divider />\r\n            <SimpleGrid alignItems=\"flex-start\" templateColumns=\"0.3fr 1.4fr\" className=\"notification__item\" spacing=\"10px\">\r\n                <SkeletonCircle width=\"60px\" height=\"60px\" />\r\n                <div style={{width: \"100%\"}}>\r\n                    <Skeleton height=\"15px\" width=\"100%\" mb=\"1em\" />\r\n                    <Skeleton height=\"15px\" width=\"70%\" />\r\n                </div>\r\n            </SimpleGrid>\r\n            <Divider />\r\n            <SimpleGrid alignItems=\"flex-start\" templateColumns=\"0.3fr 1.4fr\" className=\"notification__item\" spacing=\"10px\">\r\n                <SkeletonCircle width=\"60px\" height=\"60px\" />\r\n                <div style={{width: \"100%\"}}>\r\n                    <Skeleton height=\"15px\" width=\"100%\" mb=\"1em\" />\r\n                    <Skeleton height=\"15px\" width=\"70%\" />\r\n                </div>\r\n            </SimpleGrid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NotificationsPlaceholder;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\RunnerOrders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\orderStore.tsx",["515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\OrderDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderActivity.tsx",["537","538","539","540"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderInfoDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\notification.ts",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx",["541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotificationAlert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\ActiveOrders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx",["639"],"import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst InlineLoader = () => {\r\n    return (\r\n        <div className=\"spinner__inline\">\r\n            <Spinner size=\"xl\" color=\"brand.200\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InlineLoader;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\Orders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\LocationFinder.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTopPlaceholder.tsx",["640"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\copyStyle.ts",["641","642","643"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Review.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\TaskStatus.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BankAccountForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\profileStore.tsx",["644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {ITask} from \"../../infrastructure/models/task\";\r\nimport {profileRequest} from \"../api/agent\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\nimport {TaskStatus} from \"../../infrastructure/enums/taskStatus\";\r\nimport {ILanguage, IPrivateProfile, ISkill, ISocials,} from \"../../infrastructure/models/profile\";\r\nimport {toast} from \"react-toastify\";\r\nimport {CheckmarkIcon} from \"../../infrastructure/icons/Icons\";\r\nimport Alert from \"../common/Alert\";\r\nimport React from \"react\";\r\nimport {IPaginatedNotificationsResponse} from \"../../infrastructure/models/notification\";\r\nimport {NotificationStatus} from \"../../infrastructure/enums/notification\";\r\n\r\nexport class ProfileStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable profileActiveTasks : ITask[] | null = null;\r\n    @observable profileInactiveTasks : ITask[] | null = null; \r\n    @observable loadingInitial = false;\r\n    @observable privateProfile : IPrivateProfile | null = null;\r\n    @observable userNotifications : IPaginatedNotificationsResponse | null = null;\r\n    @observable loadingNotifications = false;\r\n    @observable watchList : ITask[] | null = null;\r\n    @action getProfileTasks = async (taskStatus: TaskStatus) => {\r\n        this.loadingInitial = true;\r\n        try{\r\n            const tasks = await profileRequest.getAllTasks(taskStatus);\r\n            runInAction(() => {\r\n                switch (taskStatus) {\r\n                    case TaskStatus.Active:\r\n                        this.profileActiveTasks = tasks;\r\n                        break;\r\n                    case TaskStatus.InActive:\r\n                        this.profileInactiveTasks = tasks;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.loadingInitial = false;\r\n            })\r\n        }catch (errors) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @observable getPrivateProfile = async () => {\r\n        this.loadingInitial = true;\r\n        try{\r\n           const profile = await profileRequest.getProfile();\r\n           runInAction(() => {\r\n               this.privateProfile = profile;\r\n               this.loadingInitial = false;\r\n           })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @observable addProfileSkills = async (values: ISkill) => {\r\n        try{\r\n            await profileRequest.addProfileSkills(values);\r\n            runInAction(() => {\r\n                this.privateProfile!.skillSet.unshift(values);\r\n                toast.success(<Alert type=\"success\" subject=\"Skills Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch (e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    @observable addProfileLanguages = async (values: ILanguage) => {\r\n        try{\r\n            await profileRequest.addProfileLanguages(values);\r\n            runInAction(() => {\r\n                this.privateProfile!.languages.unshift(values);\r\n                toast.success(<Alert type=\"success\" subject=\"Languages Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch (e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @observable updateProfile = async (values: any) => {\r\n        try{\r\n            await profileRequest.updateProfile(values);\r\n            runInAction(() => {\r\n                if(values.description){\r\n                    this.privateProfile!.bio = values.description;\r\n                }\r\n                if(values.tagline){\r\n                    this.privateProfile!.tagline = values.tagline;\r\n                }\r\n                \r\n\r\n                toast.success(<Alert type=\"success\" subject=\"Profile Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch(e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action updateSocials = async (values: ISocials) => {\r\n        try{\r\n            await profileRequest.updateSocials(values);\r\n            runInAction(() => {\r\n                if(values.twitter){\r\n                    this.privateProfile!.socials.twitter = values.twitter;\r\n                }\r\n                if(values.instagram){\r\n                    this.privateProfile!.socials.instagram = values.instagram;\r\n                }\r\n                if(values.facebook){\r\n                    this.privateProfile!.socials.facebook = values.facebook;\r\n                }\r\n                if(values.pinterest){\r\n                    this.privateProfile!.socials.pinterest = values.pinterest;\r\n                }\r\n\r\n                toast.success(<Alert type=\"success\" subject=\"Socials Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch(e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action getUserNotifications = async (status?: NotificationStatus) => {\r\n        this.loadingNotifications = true;\r\n        try{\r\n           const notifs = await profileRequest.getNotifications(status);\r\n           runInAction(() => {\r\n               this.userNotifications = notifs;\r\n               this.loadingNotifications = false;\r\n           })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingNotifications = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action readNotification = async (notificationId: string) => {\r\n        try{\r\n            await profileRequest.markNotificationAsRead(notificationId);\r\n            runInAction(() => {\r\n                const notif = this.userNotifications?.data.find(x => x.id == notificationId);\r\n                notif!.status = NotificationStatus.Read;\r\n            })\r\n        }catch (errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action deleteNotification = async (notificationId: string) => {\r\n        try{\r\n            await profileRequest.deleteNotification(notificationId);\r\n            runInAction(() => {\r\n               this.userNotifications!.data = this.userNotifications!.data.filter(x => x.id !== notificationId); \r\n            })\r\n        }catch (errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        } \r\n    }\r\n    \r\n    @action markAllNotificationsAsRead = async () => {\r\n        try{\r\n            await profileRequest.markAllNotificationsAsRead();\r\n            runInAction(() => {\r\n               this.userNotifications?.data.forEach((notification) => {\r\n                   notification.status = NotificationStatus.Read;\r\n               }) \r\n                this.rootStore.authStore.user!.hasUnReadNotifications = false;\r\n            })\r\n        }catch (errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action deleteAllNotifications = async () => {\r\n        try{\r\n            await profileRequest.deleteAllNotifications();\r\n            runInAction(() => {\r\n                this.userNotifications!.data = [];\r\n                this.rootStore.authStore.user!.hasUnReadNotifications = false;\r\n            })\r\n        }catch(errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action getWatchlist = async (sortBy: string) => {\r\n        this.loadingInitial = true;\r\n        try{\r\n            const watchlist = await profileRequest.getWatchlist(sortBy);\r\n            runInAction(() => {\r\n                this.watchList = watchlist;\r\n                this.loadingInitial = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingInitial = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action addBankAccount = async (values: any) => {\r\n        try {\r\n            await profileRequest.addBankAccount(values);\r\n            runInAction(() => {\r\n                this.privateProfile!.bankAccount = values;\r\n            })\r\n            toast.success(<Alert type=\"success\" subject=\"Bank account added Successfully\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n        } catch(e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx",["674"],"﻿import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Loader(){\r\n    return (\r\n        <div className=\"middle_position\">\r\n            <Spinner size=\"xl\" color=\"brand.100\"  />\r\n        </div>\r\n    )\r\n}",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\AccountBio.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCardSlider.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\TextMessage.tsx",["675","676","677","678","679"],"﻿import React, {useContext} from \"react\";\r\nimport {IMessage} from \"../../../../infrastructure/models/chat\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport { Box, HStack, Image } from \"@chakra-ui/react\";\r\nimport rootStoreContext from \"../../../../application/stores/rootstore\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\n\r\ninterface IProps{\r\n    message: IMessage\r\n}\r\n\r\nconst TextMessage : React.FC<IProps> = ({message}) => {\r\n    const {user} = useContext(rootStoreContext).authStore;\r\n    return (\r\n        <HStack style={{marginTop: \"1.5em\"}} justifyContent={user!.id === message.sender.id ? \"flex-end\" : \"flex-start\"}>\r\n            <Box>\r\n                <HStack spacing=\"8px\" alignItems=\"flex-end\">\r\n                    {user!.id !== message.sender.id && <Image src={message.sender.avatar} alt=\"sender-avatar\" className=\"avatar avatar__message\" />}\r\n        <Box className={`message__text ${user!.id === message.sender.id ? \"message__text__outgoing\" : \"message__text__incoming\"}`}>\r\n            {message.text}\r\n        </Box>\r\n                </HStack>\r\n                <small className=\"text__nt text__bold\" style={{textAlign: user!.id === message.sender.id ? \"right\" : \"left\", display: \"block\", marginLeft: user!.id !== message.sender.id ? \"38px\" : \"auto\" }}>{dayjs(message.sentAt).fromNow()}</small>\r\n            </Box>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default observer(TextMessage)","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\InboxPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\OrdersPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\ProfilePage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ReviewSummary.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidModalDetails.tsx",["680","681"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SocialsForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SkillsForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx",["682","683","684","685","686","687"],"﻿import {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    Input, InputGroup,\r\n    InputLeftElement,\r\n    NumberInput, NumberInputField,\r\n    SimpleGrid,\r\n    Stack,\r\n    Textarea\r\n} from \"@chakra-ui/react\";\r\nimport { Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, {lazy, Suspense, useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {StringParam, useQueryParams, NumberParam} from \"use-query-params\";\r\nimport SEO from \"../../application/appLayout/SEO\";\r\nimport {InfoIcon} from \"../../infrastructure/icons/Icons\";\r\nimport TaskFormImageUploader from \"./TaskFormImageUploader\";\r\nimport TaskFormUploadedImagesPreview from \"./TaskFormUploadedImagesPreview\";\r\nimport {DeliveryTypes} from \"../../infrastructure/enums/deliveryTypes\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport {ITaskSubmission} from \"../../infrastructure/models/task\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {history} from \"../../index\";\r\nimport {Category} from \"../../infrastructure/enums/category\";\r\n\r\nconst Preview = lazy(() => import(\"./Preview\"));\r\nconst LocationComponent = lazy(() => import(\"./LocationFinder\"));\r\n\r\nconst TaskDetailsForm = () => {\r\n    const [taskDetails] = useQueryParams({\r\n        title: StringParam,\r\n        category: NumberParam,\r\n        deliveryType: NumberParam\r\n    })\r\n\r\n    const [isPreviewOpen, setIsPreviewOpen] = useState(false);\r\n\r\n    const togglePreviewWindow = useCallback(() => {\r\n        setIsPreviewOpen(!isPreviewOpen)\r\n    }, [isPreviewOpen])\r\n    const closePreviewWindow = useCallback(() => {\r\n        setIsPreviewOpen(false)\r\n    }, [isPreviewOpen]);\r\n\r\n    useEffect(() =>\r\n        window.addEventListener('beforeunload', () => closePreviewWindow())\r\n    );\r\n\r\n   const {createTask} = useContext(rootStoreContext).taskStore;\r\n   \r\n    return (\r\n        <div className=\"container\">\r\n            <SEO title={`${taskDetails.title} for ${taskDetails.category}`} />\r\n            <div className=\"main\">\r\n                <div style={{margin: \"1em 0\"}}>\r\n                    <h1 className=\"text__darker text__bigger__md\">Post your task it&apos;s <span className=\"text__primary\">Fast</span> & <span className=\"text__primary\">Easy</span></h1>\r\n                </div>\r\n                \r\n                <Formik initialValues={{title: taskDetails.title!, id: uuid(), description: \"\", urgent: false, imageFiles: [], address: \"\", postCode: \"\", price: 0, deliveryDate: \"\", category: taskDetails.category!, deliveryType: taskDetails.deliveryType!}} onSubmit={(values: ITaskSubmission, action) => {\r\n                    const taskSubmissionData = new FormData();\r\n                    taskSubmissionData.append(\"id\", values.id);\r\n                    taskSubmissionData.append(\"title\", values.title);\r\n                    taskSubmissionData.append(\"description\", values.description);\r\n                    values.imageFiles.forEach((image) => {\r\n                        taskSubmissionData.append(\"imageFiles\", image);\r\n                    })\r\n                    taskSubmissionData.append(\"address\", values.address);\r\n                    taskSubmissionData.append(\"postCode\", values.postCode);\r\n                    taskSubmissionData.append(\"initialPrice\", values.price.toString());\r\n                    taskSubmissionData.append(\"deliveryDate\", new Date(values.deliveryDate).toUTCString());\r\n                    taskSubmissionData.append(\"category\", values.category.toString());\r\n                    \r\n                    createTask(taskSubmissionData).then(() => history.push(`/task/${values.id}`)).catch(() => action.setSubmitting(false));\r\n                }}>\r\n                    {({\r\n                       handleChange,\r\n                       handleBlur, \r\n                       handleSubmit,\r\n                       values,\r\n                       errors,\r\n                       touched,\r\n                        setFieldValue,\r\n                        setFieldError,\r\n                        isSubmitting\r\n                    }) => (\r\n                        \r\n                    \r\n                <form onSubmit={handleSubmit}>\r\n                    \r\n                <div className=\"form__box\">\r\n                  <div className=\"form__box__description\">\r\n                      <div className=\"numbered__box\">1</div>\r\n                      Task Details\r\n                  </div>\r\n                  <Divider mt={4} mb={4} />  \r\n                  <div className=\"form__field form__task\">\r\n                      <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"15px\", sm: \"8px\"}}>\r\n                          <p className=\"form__detail\">Task title:</p>\r\n                          <div style={{width: \"100%\"}}>\r\n                          <Textarea  name=\"title\" className=\"form__textarea form__textarea__no__label\" id=\"title\" rows={3} onChange={handleChange} onBlur={handleBlur} value={values.title} />\r\n                          {errors.title && touched.title && (\r\n                              <small className=\"form__error\">{errors.title}</small>\r\n                          )}\r\n                          </div>\r\n                      </Stack>\r\n                  </div>\r\n                    <div className=\"form__field form__task\">\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Selected Category:</p>\r\n                            <div style={{width: \"100%\"}}>\r\n                            <p className=\"text__darker\">{Category[taskDetails.category!]}</p>\r\n                            <span className=\"text__blue\">change</span>\r\n                            </div>\r\n                        </Stack>\r\n                    </div>\r\n\r\n                    <div className=\"form__field form__task\">\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Description:</p>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <Textarea name=\"description\" className=\"form__textarea form__textarea__no__label\" id=\"title\" rows={7} onChange={handleChange} onBlur={handleBlur} value={values.description} />\r\n                                {errors.description && touched.description ? (\r\n                                    <small className=\"form__error\">{errors.description}</small>\r\n                                ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Be as specific as you can about what needs doing</small>}\r\n                            </div>\r\n                        </Stack>\r\n                    </div>  \r\n\r\n                    <div className=\"form__field form__task\" style={{margin: \"2em 0\"}}>\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Urgency:<span style={{display: \"block\"}}>(Optional)</span></p>\r\n                                \r\n                            <div style={{width: \"100%\"}}>\r\n                                <Checkbox className=\"form__checkbox__bg\" size=\"lg\" colorScheme=\"green\" iconSize=\"2em\" spacing=\"1em\"><div className=\"urgent__label\">URGENT</div>\r\n                                </Checkbox>\r\n                                <div>\r\n                                <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Add an urgent label to let taskers know that you are looking for quick responses</small>\r\n                                </div>\r\n                                 </div>\r\n                        </Stack>\r\n                    </div>\r\n\r\n                    <div className=\"form__field form__task\" >\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Tags:<span style={{display: \"block\"}}>(Optional)</span></p>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <small className=\"text__dark__grey\">Increase your exposure. Enter up to 4 keywords taskers can use to search yout task.</small>\r\n                                \r\n                                <Stack style={{marginTop: \"1em\"}} direction=\"row\" spacing=\"20px\">\r\n                                    <Input style={{width: \"300px\"}} placeholder=\"Add a tag\" className=\"form__input\" />\r\n                                    <Button type=\"button\" style={{fontWeight: 500}} className=\"btn btn__sm btn__primary\">Add tag</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </Stack>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">2</div>\r\n                            Task Media (Optional)\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n                        \r\n                        <h1 className=\"title\">Add photos to imporve the interest on your task</h1>\r\n                        \r\n                        <p className=\"text__silent text__sm text__small__cut\">Add pictures that explain your task or pictures of what you want to be done. You can upload a maximum of 3 photos. The photos are stored in a cloudinary bucket and resize the image to the recommended 618px by 427px ratio. Drag an drop your photos into the given area below.</p>\r\n                        \r\n                        <SimpleGrid style={{margin: \"2em 0\", width: \"100%\"}} templateColumns={{xl: \"1fr 1fr\", lg: \"1fr 1fr\", md: \"1fr\", sm: \"1fr\"}}   spacing=\"20px\">\r\n                            <div>\r\n                        <TaskFormImageUploader setFieldValue={setFieldValue} />\r\n                            </div>\r\n                            <div>\r\n                        <TaskFormUploadedImagesPreview />\r\n                            </div>\r\n                        </SimpleGrid>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">3</div>\r\n                            Task Location\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n                        \r\n                        <div style={{marginBottom: \"1em\"}}>\r\n                            <p className=\"bold__label\">Delivery Type: <span className=\"text__darker\">{DeliveryTypes[taskDetails.deliveryType!]}</span></p>\r\n                            <p className=\"text__blue\">Change</p>\r\n                        </div>\r\n                        {taskDetails.deliveryType! === DeliveryTypes.InPerson ? (\r\n                            <Suspense fallback={<InlineLoader />}>\r\n                                <p className=\"text__darker\">Search and select your address</p>\r\n                                <LocationComponent addressErrors={errors.address} setFieldError={setFieldError} setFieldValue={setFieldValue} values={values} />\r\n                                <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>If you cannot see your address please select online as the delivery type then convey your real address to the runner on messages</small>\r\n                               \r\n                            </Suspense>\r\n                        ) : (\r\n                            <p className=\"text__darker\">This task will be delivered online</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">4</div>\r\n                            Budget & Dates\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n\r\n                        <div className=\"form__field form__task\">\r\n                            <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                                <p className=\"form__detail\">Budget:</p>\r\n                                <div style={{width: \"100%\"}}>\r\n                                    <InputGroup>\r\n                                        <InputLeftElement\r\n                                            pointerEvents=\"none\"\r\n                                            fontSize=\"1.2em\"\r\n                                            className=\"query__price__placeholder__green\"\r\n                                        >\r\n                                            $\r\n                                        </InputLeftElement>\r\n                                        <NumberInput  clampValueOnBlur={false}  size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                                            <NumberInputField name=\"price\" error={!!errors.price && touched.price} value={values.price} onChange={handleChange} onBlur={handleBlur}  className=\"task__price__input\" />\r\n                                        </NumberInput>\r\n                                    </InputGroup> \r\n                                    {errors.price && touched.price ? (\r\n                                        <small className=\"form__error\">{errors.price}</small>\r\n                                    ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Your budget signifies the max amount you can pay, runners will start bidding from that price.</small>}\r\n                                </div>\r\n                            </Stack>\r\n                        </div>\r\n\r\n                        <div className=\"form__field form__task\">\r\n                            <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                                <p className=\"form__detail\">Delivery Date:</p>\r\n                                <div style={{width: \"100%\"}}>\r\n                                    <Input className=\"form__input\" type=\"date\" value={values.deliveryDate} onChange={handleChange} onBlur={handleBlur} name=\"deliveryDate\" min={new Date().toISOString().split(\"T\")[0]} />\r\n                                    {errors.deliveryDate && touched.deliveryDate ? (\r\n                                        <small className=\"form__error\">{errors.deliveryDate}</small>\r\n                                    ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Your task ends on the given date and you will have to re-activate it and set a new date</small>}\r\n                                </div>\r\n                            </Stack>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div style={{margin: \"1em 0\", lineHeight: \"12px\"}}>\r\n                        <small className=\"text__darker text__small__cut\">By listing your task on taskr, you are agreeing to our <span className=\"text__blue\">terms of use, privacy policy</span> and <span className=\"text__blue\">site policies</span>.</small>\r\n                        <small className=\"text__darker text__small__cut\" style={{display: \"block\"}}>Please do not post duplicate tasks.</small>\r\n                    </div>\r\n\r\n                    <Stack direction=\"row\" spacing=\"20px\">\r\n                    <Button isLoading={isSubmitting} className=\"btn btn__primary btn__nm btn__bg btn__shadow \" type=\"submit\">List your task</Button>\r\n                        <Button type=\"button\" className=\"btn btn__white btn__nm btn__bg \" onClick={togglePreviewWindow}>Preview</Button>\r\n                    </Stack>\r\n                </form>\r\n                    )}\r\n                </Formik>\r\n                \r\n            </div>\r\n            {isPreviewOpen && (\r\n                <Suspense fallback={<InlineLoader />}>\r\n                <Preview closeWindow={closePreviewWindow}>\r\n                    apple\r\n                </Preview>\r\n                </Suspense>\r\n            )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(TaskDetailsForm);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\PublicProfileStore.tsx",["688","689","690"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\chatStore.tsx",["691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {IChat} from \"../../infrastructure/models/chat\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\nimport {ChatRequest} from \"../api/agent\";\r\nimport {HubConnection, HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport class ChatStore{\r\n    rootStore: RootStore;\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable loadingChats = false;\r\n    @observable chatsAsTaskr : IChat[] | null = null;\r\n    @observable chatsAsRunner : IChat[] | null = null;\r\n    @observable loadingChat = false;\r\n    @observable chat : IChat | null = null;\r\n    @observable.ref hubConnection: HubConnection | null = null;\r\n    @observable chatTarget = \"\";\r\n    @observable deletingChat = false;\r\n\r\n    // creating a new hub connnection\r\n    @action createHubConnection = (chatId: string) => {\r\n        this.hubConnection = new HubConnectionBuilder().withUrl(\"https://localhost:44351/message\", {\r\n            // pass the token from the user store to the server hub\r\n            accessTokenFactory: () => this.rootStore.authStore.token!\r\n        }).configureLogging(LogLevel.Information).build();\r\n\r\n        // start the connection\r\n        this.hubConnection.start().then(() => console.log(this.hubConnection!.state)).then(() => {\r\n            // connect to the activity group using the id\r\n            console.log(\"Attempting to join group\");\r\n            this.hubConnection!.invoke(\"AddToChat\", chatId);\r\n        }).catch(error => console.log(\"error establishing connection\", error));\r\n\r\n        this.hubConnection.on(\"ReceiveMessage\", message => {\r\n            runInAction(() => {\r\n                this.chat!.messages.push(message);\r\n            })\r\n            document.getElementById(\"messagesEnd\")!.scrollIntoView({ behavior: \"smooth\" });\r\n        })\r\n\r\n        this.hubConnection.on(\"Send\", message => {\r\n            toast.info(message);\r\n        })\r\n    }\r\n\r\n    @action stopHubConnection = () => {\r\n        this.hubConnection!.invoke(\"RemoveFromChat\", this.chat!.id).then(() =>\r\n            this.hubConnection!.stop()).then(() => console.log(\"Connection stopped\")).catch((err) => console.log(err))\r\n    }\r\n    \r\n    @action sendMessage = async (values: any) => {\r\n        const messageData = {\r\n            text: values.text,\r\n            receiverId: this.chat!.taskrId === this.rootStore.authStore.user!.id ? this.chat!.runner.id : this.chat!.taskr.id,\r\n            chatId: this.chat!.id\r\n        };\r\n        try{\r\n            const message = await this.hubConnection!.invoke(\"SendMessage\", messageData);\r\n            console.log(message);\r\n        }catch (e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    \r\n    @action getAllChats = async (predicate: string) => {\r\n        this.loadingChats = true;\r\n        try{\r\n            const chats = await ChatRequest.getAllChats(predicate);\r\n            runInAction(() => {\r\n                switch (predicate){\r\n                    case \"AsTaskr\":\r\n                        this.chatsAsTaskr = chats;\r\n                        break;\r\n                    case \"AsRunner\":\r\n                        this.chatsAsRunner = chats;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.loadingChats = false;\r\n            })\r\n        }catch (e) {\r\n           runInAction(() => this.loadingChats = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action getChatById = async (chatId: string) => {\r\n        this.loadingChat = true;\r\n        try{\r\n            const chat = await ChatRequest.getChatById(chatId);\r\n            runInAction(() => {\r\n                this.chat = chat;\r\n                this.loadingChat = false;\r\n            })\r\n            return this.chat;\r\n        }catch (e) {\r\n           runInAction(() => this.loadingChat = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action startChatWithUser = async (jobId: string, taskrId: string, values: any) => {\r\n        try{\r\n            await ChatRequest.createChat(jobId, taskrId, values);\r\n            runInAction(() => {\r\n                this.rootStore.taskStore.task!.isChatActive = true;\r\n            })\r\n        } catch (e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    @action sendChatToRunner = async (jobId: string, runnerId: string, values: any) => {\r\n        try{\r\n           const chat = await ChatRequest.sendChatToRunner(jobId, runnerId, values);\r\n            runInAction(() => {\r\n                this.rootStore.orderStore.order!.chat = chat; \r\n            })\r\n        } catch (e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    \r\n    @action deleteChat = async (chatId: string, predicate: string) => {\r\n        this.chatTarget = chatId;\r\n        this.deletingChat = true;\r\n        try{\r\n            await ChatRequest.deleteChat(chatId);\r\n            runInAction(() => {\r\n                switch (predicate){\r\n                    case \"taskr\":\r\n                        this.chatsAsTaskr = this.chatsAsTaskr!.filter(x => x.id !== chatId);\r\n                        break;\r\n                    case \"runner\":\r\n                        this.chatsAsRunner = this.chatsAsRunner!.filter(x => x.id !== chatId);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.deletingChat = false;\r\n            })\r\n        }catch (e) {\r\n           runInAction(() => this.deletingChat = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts",["720"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\ActiveTasks.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\PayoutOrders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\CompletedOrders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePage.tsx",["721","722"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Box, SimpleGrid, useMediaQuery} from \"@chakra-ui/react\";\r\nimport rootStoreContext from \"../../../application/stores/rootstore\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport MessageBox from \"./MessageBox\";\r\nimport ReceiverProfile from \"./ReceiverProfile\";\r\nimport {Link} from \"react-router-dom\";\r\nimport MessagePagePlaceholder from \"./MessagePagePlaceholder\";\r\nimport SEO from \"../../../application/appLayout/SEO\";\r\n\r\nconst MessagePage : React.FC<RouteComponentProps<{chatId: string}>> = ({match}) => {\r\n    const [isMobile] = useMediaQuery(\"(max-width: 600px)\");\r\n    const {chat, loadingChat, getChatById, createHubConnection, stopHubConnection} = useContext(rootStoreContext).chatStore;\r\n    const {user} = useContext(rootStoreContext).authStore;\r\n    \r\n    useEffect(() => {\r\n            getChatById(match.params.chatId).then((response) => createHubConnection(response!.id));\r\n            return () => stopHubConnection();\r\n    }, [match.params.chatId, getChatById, createHubConnection, stopHubConnection])\r\n    \r\n    return (\r\n        <Box className=\"container\">\r\n            <SEO title=\"My inbox\" />\r\n            <Box className=\"main\">\r\n                {!isMobile && <Link className=\"text__blue\" to=\"/inbox\">&#60; Back to my inbox</Link>}\r\n                {loadingChat || chat == null ? <MessagePagePlaceholder /> : \r\n                    <Box style={{marginTop: isMobile ? \"1em\" : \"2em\"}}>\r\n                    <SimpleGrid templateColumns={{xl: \"2fr 0.8fr\", lg: \"2fr 1fr\"}} spacing=\"20px\" >\r\n                    <MessageBox chat={chat} />\r\n                        {!isMobile && <ReceiverProfile user={chat.taskr.id === user!.id ? chat.runner : chat.taskr} /> }\r\n                </SimpleGrid>\r\n                    </Box>\r\n                        }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default observer(MessagePage);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx",["723"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport QueryActions from \"./QueryActions\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport QueryBody from \"./QueryBody\";\r\nimport {StringParam, useQueryParams} from \"use-query-params\";\r\n\r\nconst QueryPage = () => {\r\n    const {loadingInitial, tasks, getAllJobs, taskQueryValues, setTasksQueryParams} = useContext(rootStoreContext).taskStore;\r\n    const [queryParams] = useQueryParams({\r\n        title: StringParam,\r\n        city: StringParam\r\n    }) \r\n    \r\n    setTasksQueryParams(queryParams.title!);\r\n    useEffect(() => {\r\n        getAllJobs();\r\n    }, [getAllJobs, taskQueryValues, queryParams])\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main\">\r\n                <div>\r\n                <h1 className=\"text__lg\">Results for {`\"${queryParams.title}\"`}</h1>\r\n                    <div className=\"query__body\">\r\n                    <QueryActions />\r\n                        {loadingInitial || tasks === null ? <InlineLoader /> : (\r\n                            <div>\r\n                                <QueryBody tasks={tasks} taskQueryValues={taskQueryValues}/>\r\n                            </div>\r\n                        )}                   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(QueryPage);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx",["724","725","726","727","728","729","730","731","732","733"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable} from \"mobx\";\r\nimport React from \"react\";\r\nimport {HubConnection, HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\";\r\nimport {INotification} from \"../../infrastructure/models/notification\";\r\nimport {toast} from \"react-toastify\";\r\nimport NotificationAlert from \"../common/NotificationAlert\";\r\n\r\n//-----------------------------------------------\r\n// General store for application\r\n//------------------------------------------------\r\n\r\nexport class AppStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable.ref notificationHubConnection : HubConnection | null = null;\r\n    @observable appLoaded = false;\r\n    @observable uploadedTaskFormFiles : any[] = [];\r\n    \r\n    \r\n    @action createNotificationHubConnection = () => {\r\n        this.notificationHubConnection = new HubConnectionBuilder().withUrl(\"https://localhost:44351/notif\", {\r\n            accessTokenFactory : () => this.rootStore.authStore.token!\r\n        }).configureLogging(LogLevel.Information).withAutomaticReconnect().build();\r\n        \r\n        // start the connection\r\n        this.notificationHubConnection.start().then(() => console.log(this.notificationHubConnection!.state))\r\n        \r\n        this.notificationHubConnection.on(\"ReceiveNotification\", (notification: INotification) => {\r\n            this.rootStore.authStore.user!.hasUnReadNotifications = true;\r\n                toast(<NotificationAlert data={notification} />, {\r\n                    position: \"top-right\",\r\n                    className: \"notification\",\r\n                    hideProgressBar: true,\r\n                })\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n   \r\n    \r\n    @action stopHubConnection = () => {\r\n        this.notificationHubConnection!.stop().catch((err) => console.log(err));\r\n    }\r\n    \r\n    @action setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n    \r\n    @action setPreviewImages = (files: any) => {\r\n        this.uploadedTaskFormFiles = files;\r\n    }\r\n    \r\n   @action removePreviewImages = () => {\r\n        this.uploadedTaskFormFiles = [];\r\n   } \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx",["734","735","736","737","738","739","740","741"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {IBid, IBidSubmission} from \"../../infrastructure/models/bid\";\r\nimport {toast} from \"react-toastify\";\r\nimport {CheckmarkIcon, CloseIcon} from \"../../infrastructure/icons/Icons\";\r\nimport Alert from \"../common/Alert\";\r\nimport React from \"react\";\r\nimport {BidRequest} from \"../api/agent\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\nimport {BidStatus} from \"../../infrastructure/enums/bid\";\r\nimport {IOrder} from \"../../infrastructure/models/order\";\r\n\r\nexport class BidStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n   @observable bid: IBid | null = null;\r\n   @observable bids: IBid[] | null = null; \r\n   @observable loadingInitialBids = false; \r\n   @observable loadingBid = false;\r\n   @observable markingBidAsSeen = false;\r\n   @observable order: IOrder | null = null;\r\n   @observable acceptingBid = false;\r\n    \r\n    // Actions\r\n    @action createBid = async (values: IBidSubmission, jobId: string) => {\r\n        try{\r\n            const bid = await BidRequest.placeBid(values, jobId);\r\n            runInAction(() => {\r\n                this.bid = bid;\r\n                if(this.rootStore.taskStore.task) {\r\n                    this.rootStore.taskStore.task.bidsCount += 1;\r\n                    this.rootStore.taskStore.task.isBidActive = true;\r\n                }\r\n                if(this.rootStore.bidStore.bids){\r\n                    // find if a bid by the user exists\r\n                    const userBid = this.rootStore.bidStore.bids.find((bid) => bid.userName === this.rootStore.authStore.user!.username);\r\n                    if(userBid){\r\n                        userBid.price = bid.price;\r\n                        userBid.createdAt = bid.createdAt;\r\n                    } else {\r\n                        this.rootStore.bidStore.bids.unshift(bid);\r\n                    }\r\n                }\r\n                toast.success(<Alert type=\"success\" subject=\"Success\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"Successfully placed a bid\" />);\r\n            })\r\n        }catch(error){\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Error occurred while submitting bid\" />);\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action getTaskBids = async (taskId: string) => {\r\n        this.loadingInitialBids = true;\r\n        try{\r\n            const taskBids = await BidRequest.getAllTaskBids(taskId);\r\n            runInAction(() => {\r\n                this.bids = taskBids;\r\n                this.loadingInitialBids = false;\r\n            })\r\n        }catch (error) {\r\n            runInAction(() => this.loadingInitialBids = false);\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Problem loading task bids\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action getBidById = async (bidId: string) => {\r\n        this.loadingBid = true;\r\n        try{\r\n            const bid = await BidRequest.getBidById(bidId);\r\n            runInAction(() => {\r\n                this.bid = bid;\r\n                this.loadingBid = false;\r\n            })\r\n        }catch(errors){\r\n            runInAction(() => this.loadingBid = false);\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    \r\n    @action markBidAsSeen = async (bidId: string) => {\r\n        this.markingBidAsSeen = true;\r\n        try{\r\n            await BidRequest.markBidAsSeen(bidId);\r\n            runInAction(() => {\r\n                this.bid!.status = BidStatus.Seen;\r\n                if(this.bids){\r\n                    const bid = this.bids.find(x => x.id === bidId);\r\n                    bid!.status = BidStatus.Seen;\r\n                }\r\n                this.markingBidAsSeen = false;\r\n            })\r\n        } catch(errors){\r\n            runInAction(() => this.markingBidAsSeen = false);\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action acceptBidAndPay = async (bidId: string, jobId: string) => {\r\n        this.acceptingBid = true;\r\n        try{\r\n            const order = await BidRequest.AcceptBidAndPay(bidId, jobId);\r\n            runInAction(() => {\r\n                this.order = order;\r\n                this.acceptingBid = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.acceptingBid = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\taskStatus.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\deliveryTypes.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\ProfileSettingsPage.tsx",["742","743","744"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport { Box, SimpleGrid, Tabs, TabList, TabPanels, TabPanel, Tab } from \"@chakra-ui/react\";\r\nimport AccountTab from \"./account/AccountTab\";\r\nimport rootStoreContext from \"../../../application/stores/rootstore\";\r\nimport Loader from \"../../../application/appLayout/FullPageSpinner\";\r\nimport BillingInformation from \"./billing/BillingInformation\";\r\nimport SecurityTab from \"./security/SecurityTab\";\r\n\r\nconst ProfileSettingsPage = () => {\r\n    const {user} = useContext(rootStoreContext).authStore;\r\n    const {privateProfile, getPrivateProfile, loadingInitial} = useContext(rootStoreContext).profileStore;\r\n    useEffect(() => {\r\n        if(privateProfile === null){\r\n            getPrivateProfile();\r\n        }\r\n    }, [getPrivateProfile, privateProfile])\r\n    if(loadingInitial || privateProfile === null) return <Loader />\r\n    return (\r\n        <Box className=\"settings__container\">\r\n            <Box className=\"main\">\r\n                <Tabs isLazy>\r\n                <SimpleGrid templateColumns={{xl: \"0.5fr 2fr\", lg: \"0.5fr 2fr\", md: \"0.8fr 2fr\", sm: \"1fr\"}} spacing=\"2em\">\r\n             <Box>\r\n                 <TabList className=\"settings__tab__list\">\r\n                     <Tab>Account</Tab>\r\n                     <Tab>Billing Information</Tab>\r\n                     <Tab>Security</Tab>\r\n                     <Tab>Other</Tab>\r\n                 </TabList>\r\n             </Box>\r\n                    <Box>\r\n                      <TabPanels>\r\n                          <TabPanel className=\"settings__tab__panel\"><AccountTab user={user!} privateProfile={privateProfile} /></TabPanel>\r\n                          <TabPanel className=\"settings__tab__panel\"><BillingInformation user={user!} privateProfile={privateProfile} /></TabPanel>\r\n                          <TabPanel className=\"settings__tab__panel\"><SecurityTab user={user!} privateProfile={privateProfile} /></TabPanel>\r\n                          <TabPanel className=\"settings__tab__panel\">apple</TabPanel>\r\n                      </TabPanels>  \r\n                    </Box>\r\n                </SimpleGrid>\r\n                </Tabs>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default observer(ProfileSettingsPage);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskPlaceholder.tsx",["745"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\ReceiverProfile.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCard.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTable.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskAssignedDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidInfo.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskBidItem.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\ReviewForm.tsx",["746","747"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\PublicProfilePage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\ProfileReviews\\ProfileReviews.tsx",["748"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottom.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\RunnerChatTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Rater.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageTopBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileReviews.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\reviews\\ReviewPane.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx",["749"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatContainer.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\MyProfile.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\LanguageForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx",["750"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx",["751","752","753","754","755","756"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\category.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePagePlaceholder.tsx",["757"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskSection.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getErrors.tsx",["758","759"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\account\\AccountTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\cancelledOrders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\CancelledOrders.tsx",[],{"ruleId":"760","severity":1,"message":"761","line":4,"column":41,"nodeType":"762","messageId":"763","endLine":4,"endColumn":46},{"ruleId":"760","severity":1,"message":"761","line":1,"column":8,"nodeType":"764","messageId":"763","endLine":1,"endColumn":46},{"ruleId":"760","severity":1,"message":"765","line":1,"column":32,"nodeType":"766","messageId":"767","endLine":1,"endColumn":45},{"ruleId":"760","severity":1,"message":"761","line":4,"column":8,"nodeType":"764","messageId":"763","endLine":4,"endColumn":48},{"ruleId":"760","severity":1,"message":"765","line":4,"column":34,"nodeType":"766","messageId":"767","endLine":4,"endColumn":47},{"ruleId":"760","severity":1,"message":"761","line":7,"column":8,"nodeType":"764","messageId":"763","endLine":7,"endColumn":49},{"ruleId":"760","severity":1,"message":"765","line":7,"column":35,"nodeType":"766","messageId":"767","endLine":7,"endColumn":48},{"ruleId":"760","severity":1,"message":"768","line":79,"column":22,"nodeType":"766","messageId":"767","endLine":79,"endColumn":33},{"ruleId":"760","severity":1,"message":"768","line":118,"column":21,"nodeType":"766","messageId":"767","endLine":118,"endColumn":32},{"ruleId":"760","severity":1,"message":"768","line":138,"column":22,"nodeType":"766","messageId":"767","endLine":138,"endColumn":33},{"ruleId":"760","severity":1,"message":"761","line":160,"column":17,"nodeType":"762","messageId":"763","endLine":160,"endColumn":65},{"ruleId":"760","severity":1,"message":"768","line":160,"column":50,"nodeType":"766","messageId":"767","endLine":160,"endColumn":61},{"ruleId":"760","severity":1,"message":"768","line":166,"column":58,"nodeType":"766","messageId":"767","endLine":166,"endColumn":69},{"ruleId":"760","severity":1,"message":"768","line":182,"column":17,"nodeType":"766","messageId":"767","endLine":182,"endColumn":28},{"ruleId":"760","severity":1,"message":"761","line":4,"column":26,"nodeType":"762","messageId":"763","endLine":4,"endColumn":31},{"ruleId":"760","severity":1,"message":"761","line":4,"column":34,"nodeType":"762","messageId":"763","endLine":4,"endColumn":39},{"ruleId":"760","severity":1,"message":"761","line":26,"column":31,"nodeType":"762","messageId":"763","endLine":26,"endColumn":61},{"ruleId":"760","severity":1,"message":"761","line":35,"column":36,"nodeType":"762","messageId":"763","endLine":35,"endColumn":66},{"ruleId":"760","severity":1,"message":"761","line":49,"column":28,"nodeType":"762","messageId":"763","endLine":49,"endColumn":56},{"ruleId":"760","severity":1,"message":"761","line":82,"column":32,"nodeType":"762","messageId":"763","endLine":82,"endColumn":62},{"ruleId":"769","severity":1,"message":"770","line":88,"column":20,"nodeType":"771","messageId":"772","endLine":88,"endColumn":50,"suggestions":"773"},{"ruleId":"760","severity":1,"message":"761","line":100,"column":34,"nodeType":"762","messageId":"763","endLine":100,"endColumn":64},{"ruleId":"769","severity":1,"message":"770","line":105,"column":17,"nodeType":"771","messageId":"772","endLine":105,"endColumn":28,"suggestions":"774"},{"ruleId":"769","severity":1,"message":"770","line":106,"column":17,"nodeType":"771","messageId":"772","endLine":106,"endColumn":28,"suggestions":"775"},{"ruleId":"760","severity":1,"message":"761","line":116,"column":29,"nodeType":"762","messageId":"763","endLine":116,"endColumn":59},{"ruleId":"769","severity":1,"message":"770","line":121,"column":17,"nodeType":"771","messageId":"772","endLine":121,"endColumn":28,"suggestions":"776"},{"ruleId":"760","severity":1,"message":"761","line":131,"column":28,"nodeType":"762","messageId":"763","endLine":131,"endColumn":58},{"ruleId":"769","severity":1,"message":"770","line":136,"column":17,"nodeType":"771","messageId":"772","endLine":136,"endColumn":28,"suggestions":"777"},{"ruleId":"760","severity":1,"message":"761","line":146,"column":28,"nodeType":"762","messageId":"763","endLine":146,"endColumn":58},{"ruleId":"769","severity":1,"message":"770","line":151,"column":17,"nodeType":"771","messageId":"772","endLine":151,"endColumn":28,"suggestions":"778"},{"ruleId":"769","severity":1,"message":"770","line":152,"column":17,"nodeType":"771","messageId":"772","endLine":152,"endColumn":28,"suggestions":"779"},{"ruleId":"760","severity":1,"message":"761","line":162,"column":25,"nodeType":"762","messageId":"763","endLine":162,"endColumn":64},{"ruleId":"760","severity":1,"message":"768","line":162,"column":32,"nodeType":"766","messageId":"767","endLine":162,"endColumn":43},{"ruleId":"769","severity":1,"message":"770","line":167,"column":31,"nodeType":"771","messageId":"772","endLine":167,"endColumn":61},{"ruleId":"769","severity":1,"message":"770","line":169,"column":26,"nodeType":"771","messageId":"772","endLine":169,"endColumn":37,"suggestions":"780"},{"ruleId":"769","severity":1,"message":"770","line":174,"column":17,"nodeType":"771","messageId":"772","endLine":174,"endColumn":28,"suggestions":"781"},{"ruleId":"760","severity":1,"message":"761","line":182,"column":27,"nodeType":"762","messageId":"763","endLine":182,"endColumn":57},{"ruleId":"769","severity":1,"message":"770","line":187,"column":17,"nodeType":"771","messageId":"772","endLine":187,"endColumn":28,"suggestions":"782"},{"ruleId":"769","severity":1,"message":"770","line":144,"column":60,"nodeType":"771","messageId":"772","endLine":144,"endColumn":65,"suggestions":"783"},{"ruleId":"769","severity":1,"message":"770","line":148,"column":105,"nodeType":"771","messageId":"772","endLine":148,"endColumn":110,"suggestions":"784"},{"ruleId":"769","severity":1,"message":"770","line":155,"column":100,"nodeType":"771","messageId":"772","endLine":155,"endColumn":105,"suggestions":"785"},{"ruleId":"769","severity":1,"message":"770","line":168,"column":105,"nodeType":"771","messageId":"772","endLine":168,"endColumn":110,"suggestions":"786"},{"ruleId":"760","severity":1,"message":"761","line":4,"column":8,"nodeType":"764","messageId":"763","endLine":4,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":4,"column":26,"nodeType":"766","messageId":"767","endLine":4,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":12,"column":8,"nodeType":"764","messageId":"763","endLine":12,"endColumn":41},{"ruleId":"760","severity":1,"message":"787","line":12,"column":30,"nodeType":"766","messageId":"767","endLine":12,"endColumn":40},{"ruleId":"760","severity":1,"message":"761","line":64,"column":8,"nodeType":"764","messageId":"763","endLine":64,"endColumn":39},{"ruleId":"760","severity":1,"message":"787","line":64,"column":28,"nodeType":"766","messageId":"767","endLine":64,"endColumn":38},{"ruleId":"760","severity":1,"message":"761","line":111,"column":8,"nodeType":"764","messageId":"763","endLine":111,"endColumn":38},{"ruleId":"760","severity":1,"message":"787","line":111,"column":27,"nodeType":"766","messageId":"767","endLine":111,"endColumn":37},{"ruleId":"760","severity":1,"message":"761","line":160,"column":8,"nodeType":"764","messageId":"763","endLine":160,"endColumn":43},{"ruleId":"760","severity":1,"message":"787","line":160,"column":32,"nodeType":"766","messageId":"767","endLine":160,"endColumn":42},{"ruleId":"760","severity":1,"message":"761","line":208,"column":8,"nodeType":"764","messageId":"763","endLine":208,"endColumn":44},{"ruleId":"760","severity":1,"message":"787","line":208,"column":33,"nodeType":"766","messageId":"767","endLine":208,"endColumn":43},{"ruleId":"760","severity":1,"message":"761","line":220,"column":8,"nodeType":"764","messageId":"763","endLine":220,"endColumn":43},{"ruleId":"760","severity":1,"message":"787","line":220,"column":32,"nodeType":"766","messageId":"767","endLine":220,"endColumn":42},{"ruleId":"760","severity":1,"message":"761","line":228,"column":8,"nodeType":"764","messageId":"763","endLine":228,"endColumn":36},{"ruleId":"760","severity":1,"message":"787","line":228,"column":25,"nodeType":"766","messageId":"767","endLine":228,"endColumn":35},{"ruleId":"760","severity":1,"message":"761","line":325,"column":8,"nodeType":"764","messageId":"763","endLine":325,"endColumn":41},{"ruleId":"760","severity":1,"message":"787","line":325,"column":30,"nodeType":"766","messageId":"767","endLine":325,"endColumn":40},{"ruleId":"760","severity":1,"message":"761","line":334,"column":8,"nodeType":"764","messageId":"763","endLine":334,"endColumn":41},{"ruleId":"760","severity":1,"message":"787","line":334,"column":30,"nodeType":"766","messageId":"767","endLine":334,"endColumn":40},{"ruleId":"760","severity":1,"message":"761","line":342,"column":8,"nodeType":"764","messageId":"763","endLine":342,"endColumn":39},{"ruleId":"760","severity":1,"message":"787","line":342,"column":28,"nodeType":"766","messageId":"767","endLine":342,"endColumn":38},{"ruleId":"760","severity":1,"message":"761","line":391,"column":8,"nodeType":"764","messageId":"763","endLine":391,"endColumn":40},{"ruleId":"760","severity":1,"message":"787","line":391,"column":29,"nodeType":"766","messageId":"767","endLine":391,"endColumn":39},{"ruleId":"760","severity":1,"message":"761","line":399,"column":8,"nodeType":"764","messageId":"763","endLine":399,"endColumn":45},{"ruleId":"760","severity":1,"message":"787","line":399,"column":34,"nodeType":"766","messageId":"767","endLine":399,"endColumn":44},{"ruleId":"760","severity":1,"message":"761","line":407,"column":8,"nodeType":"764","messageId":"763","endLine":407,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":407,"column":26,"nodeType":"766","messageId":"767","endLine":407,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":463,"column":8,"nodeType":"764","messageId":"763","endLine":463,"endColumn":38},{"ruleId":"760","severity":1,"message":"787","line":463,"column":27,"nodeType":"766","messageId":"767","endLine":463,"endColumn":37},{"ruleId":"760","severity":1,"message":"761","line":471,"column":8,"nodeType":"764","messageId":"763","endLine":471,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":471,"column":26,"nodeType":"766","messageId":"767","endLine":471,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":522,"column":8,"nodeType":"764","messageId":"763","endLine":522,"endColumn":45},{"ruleId":"760","severity":1,"message":"787","line":522,"column":34,"nodeType":"766","messageId":"767","endLine":522,"endColumn":44},{"ruleId":"760","severity":1,"message":"761","line":561,"column":8,"nodeType":"764","messageId":"763","endLine":561,"endColumn":44},{"ruleId":"760","severity":1,"message":"787","line":561,"column":33,"nodeType":"766","messageId":"767","endLine":561,"endColumn":43},{"ruleId":"760","severity":1,"message":"761","line":600,"column":8,"nodeType":"764","messageId":"763","endLine":600,"endColumn":44},{"ruleId":"760","severity":1,"message":"787","line":600,"column":33,"nodeType":"766","messageId":"767","endLine":600,"endColumn":43},{"ruleId":"760","severity":1,"message":"761","line":649,"column":8,"nodeType":"764","messageId":"763","endLine":649,"endColumn":38},{"ruleId":"760","severity":1,"message":"787","line":649,"column":27,"nodeType":"766","messageId":"767","endLine":649,"endColumn":37},{"ruleId":"760","severity":1,"message":"761","line":657,"column":8,"nodeType":"764","messageId":"763","endLine":657,"endColumn":36},{"ruleId":"760","severity":1,"message":"787","line":657,"column":25,"nodeType":"766","messageId":"767","endLine":657,"endColumn":35},{"ruleId":"760","severity":1,"message":"761","line":701,"column":8,"nodeType":"764","messageId":"763","endLine":701,"endColumn":41},{"ruleId":"760","severity":1,"message":"787","line":701,"column":30,"nodeType":"766","messageId":"767","endLine":701,"endColumn":40},{"ruleId":"760","severity":1,"message":"761","line":761,"column":8,"nodeType":"764","messageId":"763","endLine":761,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":761,"column":26,"nodeType":"766","messageId":"767","endLine":761,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":808,"column":8,"nodeType":"764","messageId":"763","endLine":808,"endColumn":38},{"ruleId":"760","severity":1,"message":"787","line":808,"column":27,"nodeType":"766","messageId":"767","endLine":808,"endColumn":37},{"ruleId":"760","severity":1,"message":"761","line":816,"column":8,"nodeType":"764","messageId":"763","endLine":816,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":816,"column":26,"nodeType":"766","messageId":"767","endLine":816,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":824,"column":8,"nodeType":"764","messageId":"763","endLine":824,"endColumn":42},{"ruleId":"760","severity":1,"message":"787","line":824,"column":31,"nodeType":"766","messageId":"767","endLine":824,"endColumn":41},{"ruleId":"760","severity":1,"message":"761","line":868,"column":8,"nodeType":"764","messageId":"763","endLine":868,"endColumn":49},{"ruleId":"760","severity":1,"message":"787","line":868,"column":38,"nodeType":"766","messageId":"767","endLine":868,"endColumn":48},{"ruleId":"760","severity":1,"message":"761","line":922,"column":8,"nodeType":"764","messageId":"763","endLine":922,"endColumn":41},{"ruleId":"760","severity":1,"message":"787","line":922,"column":30,"nodeType":"766","messageId":"767","endLine":922,"endColumn":40},{"ruleId":"760","severity":1,"message":"761","line":930,"column":8,"nodeType":"764","messageId":"763","endLine":930,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":930,"column":26,"nodeType":"766","messageId":"767","endLine":930,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":1039,"column":8,"nodeType":"764","messageId":"763","endLine":1039,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":1039,"column":26,"nodeType":"766","messageId":"767","endLine":1039,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":1080,"column":16,"nodeType":"764","messageId":"763","endLine":1080,"endColumn":46},{"ruleId":"760","severity":1,"message":"787","line":1080,"column":35,"nodeType":"766","messageId":"767","endLine":1080,"endColumn":45},{"ruleId":"760","severity":1,"message":"761","line":1088,"column":8,"nodeType":"764","messageId":"763","endLine":1088,"endColumn":38},{"ruleId":"760","severity":1,"message":"787","line":1088,"column":27,"nodeType":"766","messageId":"767","endLine":1088,"endColumn":37},{"ruleId":"760","severity":1,"message":"761","line":1152,"column":8,"nodeType":"764","messageId":"763","endLine":1152,"endColumn":36},{"ruleId":"760","severity":1,"message":"787","line":1152,"column":25,"nodeType":"766","messageId":"767","endLine":1152,"endColumn":35},{"ruleId":"760","severity":1,"message":"761","line":1208,"column":8,"nodeType":"764","messageId":"763","endLine":1208,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":1208,"column":26,"nodeType":"766","messageId":"767","endLine":1208,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":1274,"column":8,"nodeType":"764","messageId":"763","endLine":1274,"endColumn":38},{"ruleId":"760","severity":1,"message":"787","line":1274,"column":27,"nodeType":"766","messageId":"767","endLine":1274,"endColumn":37},{"ruleId":"760","severity":1,"message":"761","line":1282,"column":8,"nodeType":"764","messageId":"763","endLine":1282,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":1282,"column":26,"nodeType":"766","messageId":"767","endLine":1282,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":1290,"column":8,"nodeType":"764","messageId":"763","endLine":1290,"endColumn":40},{"ruleId":"760","severity":1,"message":"787","line":1290,"column":29,"nodeType":"766","messageId":"767","endLine":1290,"endColumn":39},{"ruleId":"760","severity":1,"message":"761","line":1338,"column":8,"nodeType":"764","messageId":"763","endLine":1338,"endColumn":42},{"ruleId":"760","severity":1,"message":"787","line":1338,"column":31,"nodeType":"766","messageId":"767","endLine":1338,"endColumn":41},{"ruleId":"760","severity":1,"message":"761","line":1408,"column":8,"nodeType":"764","messageId":"763","endLine":1408,"endColumn":38},{"ruleId":"760","severity":1,"message":"787","line":1408,"column":27,"nodeType":"766","messageId":"767","endLine":1408,"endColumn":37},{"ruleId":"760","severity":1,"message":"761","line":1416,"column":8,"nodeType":"764","messageId":"763","endLine":1416,"endColumn":42},{"ruleId":"760","severity":1,"message":"787","line":1416,"column":31,"nodeType":"766","messageId":"767","endLine":1416,"endColumn":41},{"ruleId":"760","severity":1,"message":"761","line":1463,"column":8,"nodeType":"764","messageId":"763","endLine":1463,"endColumn":41},{"ruleId":"760","severity":1,"message":"787","line":1463,"column":30,"nodeType":"766","messageId":"767","endLine":1463,"endColumn":40},{"ruleId":"760","severity":1,"message":"761","line":1471,"column":8,"nodeType":"764","messageId":"763","endLine":1471,"endColumn":43},{"ruleId":"760","severity":1,"message":"787","line":1471,"column":32,"nodeType":"766","messageId":"767","endLine":1471,"endColumn":42},{"ruleId":"760","severity":1,"message":"761","line":1483,"column":8,"nodeType":"764","messageId":"763","endLine":1483,"endColumn":44},{"ruleId":"760","severity":1,"message":"787","line":1483,"column":33,"nodeType":"766","messageId":"767","endLine":1483,"endColumn":43},{"ruleId":"760","severity":1,"message":"761","line":1491,"column":8,"nodeType":"764","messageId":"763","endLine":1491,"endColumn":44},{"ruleId":"760","severity":1,"message":"787","line":1491,"column":33,"nodeType":"766","messageId":"767","endLine":1491,"endColumn":43},{"ruleId":"760","severity":1,"message":"761","line":1501,"column":8,"nodeType":"764","messageId":"763","endLine":1501,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":1501,"column":26,"nodeType":"766","messageId":"767","endLine":1501,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":1590,"column":8,"nodeType":"764","messageId":"763","endLine":1590,"endColumn":43},{"ruleId":"760","severity":1,"message":"787","line":1590,"column":32,"nodeType":"766","messageId":"767","endLine":1590,"endColumn":42},{"ruleId":"760","severity":1,"message":"761","line":1655,"column":8,"nodeType":"764","messageId":"763","endLine":1655,"endColumn":39},{"ruleId":"760","severity":1,"message":"787","line":1655,"column":28,"nodeType":"766","messageId":"767","endLine":1655,"endColumn":38},{"ruleId":"760","severity":1,"message":"761","line":1663,"column":8,"nodeType":"764","messageId":"763","endLine":1663,"endColumn":36},{"ruleId":"760","severity":1,"message":"787","line":1663,"column":25,"nodeType":"766","messageId":"767","endLine":1663,"endColumn":35},{"ruleId":"760","severity":1,"message":"761","line":1730,"column":8,"nodeType":"764","messageId":"763","endLine":1730,"endColumn":37},{"ruleId":"760","severity":1,"message":"787","line":1730,"column":26,"nodeType":"766","messageId":"767","endLine":1730,"endColumn":36},{"ruleId":"760","severity":1,"message":"761","line":4,"column":22,"nodeType":"762","messageId":"763","endLine":4,"endColumn":27},{"ruleId":"760","severity":1,"message":"761","line":4,"column":38,"nodeType":"762","messageId":"763","endLine":4,"endColumn":43},{"ruleId":"760","severity":1,"message":"761","line":3,"column":16,"nodeType":"764","messageId":"763","endLine":3,"endColumn":57},{"ruleId":"760","severity":1,"message":"788","line":3,"column":36,"nodeType":"766","messageId":"789","endLine":3,"endColumn":45},{"ruleId":"760","severity":1,"message":"790","line":3,"column":47,"nodeType":"766","messageId":"789","endLine":3,"endColumn":56},{"ruleId":"760","severity":1,"message":"761","line":29,"column":31,"nodeType":"762","messageId":"763","endLine":29,"endColumn":64},{"ruleId":"760","severity":1,"message":"761","line":53,"column":37,"nodeType":"762","messageId":"763","endLine":53,"endColumn":48},{"ruleId":"760","severity":1,"message":"761","line":68,"column":36,"nodeType":"762","messageId":"763","endLine":68,"endColumn":61},{"ruleId":"769","severity":1,"message":"770","line":72,"column":17,"nodeType":"771","messageId":"772","endLine":72,"endColumn":37,"suggestions":"791"},{"ruleId":"760","severity":1,"message":"761","line":81,"column":39,"nodeType":"762","messageId":"763","endLine":81,"endColumn":67},{"ruleId":"769","severity":1,"message":"770","line":85,"column":17,"nodeType":"771","messageId":"772","endLine":85,"endColumn":37,"suggestions":"792"},{"ruleId":"760","severity":1,"message":"761","line":94,"column":33,"nodeType":"762","messageId":"763","endLine":94,"endColumn":55},{"ruleId":"760","severity":1,"message":"768","line":94,"column":40,"nodeType":"766","messageId":"767","endLine":94,"endColumn":51},{"ruleId":"769","severity":1,"message":"770","line":99,"column":21,"nodeType":"771","messageId":"772","endLine":99,"endColumn":41,"suggestions":"793"},{"ruleId":"769","severity":1,"message":"770","line":102,"column":21,"nodeType":"771","messageId":"772","endLine":102,"endColumn":41,"suggestions":"794"},{"ruleId":"760","severity":1,"message":"761","line":114,"column":29,"nodeType":"762","messageId":"763","endLine":114,"endColumn":56},{"ruleId":"769","severity":1,"message":"770","line":119,"column":21,"nodeType":"771","messageId":"772","endLine":119,"endColumn":41,"suggestions":"795"},{"ruleId":"769","severity":1,"message":"770","line":122,"column":21,"nodeType":"771","messageId":"772","endLine":122,"endColumn":41,"suggestions":"796"},{"ruleId":"769","severity":1,"message":"770","line":125,"column":21,"nodeType":"771","messageId":"772","endLine":125,"endColumn":41,"suggestions":"797"},{"ruleId":"769","severity":1,"message":"770","line":128,"column":21,"nodeType":"771","messageId":"772","endLine":128,"endColumn":41,"suggestions":"798"},{"ruleId":"760","severity":1,"message":"761","line":139,"column":36,"nodeType":"762","messageId":"763","endLine":139,"endColumn":74},{"ruleId":"760","severity":1,"message":"761","line":154,"column":32,"nodeType":"762","messageId":"763","endLine":154,"endColumn":65},{"ruleId":"769","severity":1,"message":"770","line":159,"column":17,"nodeType":"771","messageId":"772","endLine":159,"endColumn":23,"suggestions":"799"},{"ruleId":"760","severity":1,"message":"761","line":167,"column":34,"nodeType":"762","messageId":"763","endLine":167,"endColumn":67},{"ruleId":"769","severity":1,"message":"770","line":171,"column":16,"nodeType":"771","messageId":"772","endLine":171,"endColumn":39,"suggestions":"800"},{"ruleId":"769","severity":1,"message":"770","line":171,"column":47,"nodeType":"771","messageId":"772","endLine":171,"endColumn":70,"suggestions":"801"},{"ruleId":"760","severity":1,"message":"761","line":179,"column":42,"nodeType":"762","messageId":"763","endLine":179,"endColumn":53},{"ruleId":"769","severity":1,"message":"770","line":186,"column":17,"nodeType":"771","messageId":"772","endLine":186,"endColumn":47,"suggestions":"802"},{"ruleId":"760","severity":1,"message":"761","line":194,"column":38,"nodeType":"762","messageId":"763","endLine":194,"endColumn":49},{"ruleId":"769","severity":1,"message":"770","line":198,"column":17,"nodeType":"771","messageId":"772","endLine":198,"endColumn":40,"suggestions":"803"},{"ruleId":"769","severity":1,"message":"770","line":199,"column":17,"nodeType":"771","messageId":"772","endLine":199,"endColumn":47,"suggestions":"804"},{"ruleId":"760","severity":1,"message":"761","line":207,"column":28,"nodeType":"762","messageId":"763","endLine":207,"endColumn":53},{"ruleId":"760","severity":1,"message":"761","line":222,"column":30,"nodeType":"762","messageId":"763","endLine":222,"endColumn":52},{"ruleId":"760","severity":1,"message":"768","line":222,"column":37,"nodeType":"766","messageId":"767","endLine":222,"endColumn":48},{"ruleId":"769","severity":1,"message":"770","line":226,"column":17,"nodeType":"771","messageId":"772","endLine":226,"endColumn":37,"suggestions":"805"},{"ruleId":"760","severity":1,"message":"761","line":4,"column":16,"nodeType":"764","messageId":"763","endLine":4,"endColumn":33},{"ruleId":"769","severity":1,"message":"770","line":19,"column":62,"nodeType":"771","messageId":"772","endLine":19,"endColumn":67,"suggestions":"806"},{"ruleId":"769","severity":1,"message":"770","line":22,"column":22,"nodeType":"771","messageId":"772","endLine":22,"endColumn":27,"suggestions":"807"},{"ruleId":"769","severity":1,"message":"770","line":23,"column":42,"nodeType":"771","messageId":"772","endLine":23,"endColumn":47,"suggestions":"808"},{"ruleId":"769","severity":1,"message":"770","line":27,"column":75,"nodeType":"771","messageId":"772","endLine":27,"endColumn":80,"suggestions":"809"},{"ruleId":"769","severity":1,"message":"770","line":27,"column":156,"nodeType":"771","messageId":"772","endLine":27,"endColumn":161,"suggestions":"810"},{"ruleId":"769","severity":1,"message":"770","line":24,"column":34,"nodeType":"771","messageId":"772","endLine":24,"endColumn":79},{"ruleId":"769","severity":1,"message":"770","line":109,"column":46,"nodeType":"771","messageId":"772","endLine":109,"endColumn":53,"suggestions":"811"},{"ruleId":"769","severity":1,"message":"770","line":61,"column":48,"nodeType":"771","messageId":"772","endLine":61,"endColumn":66},{"ruleId":"769","severity":1,"message":"770","line":61,"column":193,"nodeType":"771","messageId":"772","endLine":61,"endColumn":214},{"ruleId":"769","severity":1,"message":"770","line":61,"column":230,"nodeType":"771","messageId":"772","endLine":61,"endColumn":255},{"ruleId":"769","severity":1,"message":"770","line":113,"column":67,"nodeType":"771","messageId":"772","endLine":113,"endColumn":88},{"ruleId":"769","severity":1,"message":"770","line":191,"column":117,"nodeType":"771","messageId":"772","endLine":191,"endColumn":142},{"ruleId":"769","severity":1,"message":"770","line":194,"column":26,"nodeType":"771","messageId":"772","endLine":194,"endColumn":51},{"ruleId":"760","severity":1,"message":"761","line":23,"column":39,"nodeType":"762","messageId":"763","endLine":23,"endColumn":64},{"ruleId":"760","severity":1,"message":"761","line":41,"column":37,"nodeType":"762","messageId":"763","endLine":41,"endColumn":62},{"ruleId":"760","severity":1,"message":"761","line":56,"column":30,"nodeType":"762","messageId":"763","endLine":56,"endColumn":74},{"ruleId":"760","severity":1,"message":"761","line":26,"column":35,"nodeType":"762","messageId":"763","endLine":26,"endColumn":54},{"ruleId":"769","severity":1,"message":"770","line":29,"column":39,"nodeType":"771","messageId":"772","endLine":29,"endColumn":70},{"ruleId":"769","severity":1,"message":"770","line":33,"column":59,"nodeType":"771","messageId":"772","endLine":33,"endColumn":78,"suggestions":"812"},{"ruleId":"769","severity":1,"message":"770","line":36,"column":13,"nodeType":"771","messageId":"772","endLine":36,"endColumn":32,"suggestions":"813"},{"ruleId":"769","severity":1,"message":"770","line":41,"column":17,"nodeType":"771","messageId":"772","endLine":41,"endColumn":27,"suggestions":"814"},{"ruleId":"769","severity":1,"message":"770","line":43,"column":13,"nodeType":"771","messageId":"772","endLine":43,"endColumn":52,"suggestions":"815"},{"ruleId":"760","severity":1,"message":"761","line":51,"column":33,"nodeType":"762","messageId":"763","endLine":51,"endColumn":38},{"ruleId":"769","severity":1,"message":"770","line":52,"column":9,"nodeType":"771","messageId":"772","endLine":52,"endColumn":28,"suggestions":"816"},{"ruleId":"769","severity":1,"message":"770","line":52,"column":54,"nodeType":"771","messageId":"772","endLine":52,"endColumn":64,"suggestions":"817"},{"ruleId":"769","severity":1,"message":"770","line":53,"column":13,"nodeType":"771","messageId":"772","endLine":53,"endColumn":32,"suggestions":"818"},{"ruleId":"760","severity":1,"message":"761","line":56,"column":27,"nodeType":"762","messageId":"763","endLine":56,"endColumn":49},{"ruleId":"760","severity":1,"message":"768","line":56,"column":34,"nodeType":"766","messageId":"767","endLine":56,"endColumn":45},{"ruleId":"769","severity":1,"message":"770","line":59,"column":25,"nodeType":"771","messageId":"772","endLine":59,"endColumn":35,"suggestions":"819"},{"ruleId":"769","severity":1,"message":"770","line":59,"column":48,"nodeType":"771","messageId":"772","endLine":59,"endColumn":78,"suggestions":"820"},{"ruleId":"769","severity":1,"message":"770","line":59,"column":84,"nodeType":"771","messageId":"772","endLine":59,"endColumn":94,"suggestions":"821"},{"ruleId":"769","severity":1,"message":"770","line":59,"column":107,"nodeType":"771","messageId":"772","endLine":59,"endColumn":117,"suggestions":"822"},{"ruleId":"769","severity":1,"message":"770","line":60,"column":21,"nodeType":"771","messageId":"772","endLine":60,"endColumn":31,"suggestions":"823"},{"ruleId":"769","severity":1,"message":"770","line":63,"column":35,"nodeType":"771","messageId":"772","endLine":63,"endColumn":54,"suggestions":"824"},{"ruleId":"760","severity":1,"message":"761","line":70,"column":27,"nodeType":"762","messageId":"763","endLine":70,"endColumn":55},{"ruleId":"760","severity":1,"message":"761","line":94,"column":27,"nodeType":"762","messageId":"763","endLine":94,"endColumn":52},{"ruleId":"760","severity":1,"message":"761","line":110,"column":33,"nodeType":"762","messageId":"763","endLine":110,"endColumn":87},{"ruleId":"760","severity":1,"message":"768","line":110,"column":72,"nodeType":"766","messageId":"767","endLine":110,"endColumn":83},{"ruleId":"769","severity":1,"message":"770","line":114,"column":17,"nodeType":"771","messageId":"772","endLine":114,"endColumn":47,"suggestions":"825"},{"ruleId":"760","severity":1,"message":"761","line":122,"column":32,"nodeType":"762","messageId":"763","endLine":122,"endColumn":87},{"ruleId":"760","severity":1,"message":"768","line":122,"column":72,"nodeType":"766","messageId":"767","endLine":122,"endColumn":83},{"ruleId":"769","severity":1,"message":"770","line":126,"column":17,"nodeType":"771","messageId":"772","endLine":126,"endColumn":49,"suggestions":"826"},{"ruleId":"760","severity":1,"message":"761","line":135,"column":26,"nodeType":"762","messageId":"763","endLine":135,"endColumn":70},{"ruleId":"769","severity":1,"message":"770","line":143,"column":45,"nodeType":"771","messageId":"772","endLine":143,"endColumn":63,"suggestions":"827"},{"ruleId":"769","severity":1,"message":"770","line":146,"column":46,"nodeType":"771","messageId":"772","endLine":146,"endColumn":65,"suggestions":"828"},{"ruleId":"760","severity":1,"message":"761","line":3,"column":25,"nodeType":"762","messageId":"763","endLine":3,"endColumn":57},{"ruleId":"769","severity":1,"message":"770","line":18,"column":85,"nodeType":"771","messageId":"772","endLine":18,"endColumn":94,"suggestions":"829"},{"ruleId":"769","severity":1,"message":"770","line":31,"column":80,"nodeType":"771","messageId":"772","endLine":31,"endColumn":85,"suggestions":"830"},{"ruleId":"769","severity":1,"message":"770","line":16,"column":25,"nodeType":"771","messageId":"772","endLine":16,"endColumn":43},{"ruleId":"760","severity":1,"message":"761","line":25,"column":47,"nodeType":"762","messageId":"763","endLine":25,"endColumn":52},{"ruleId":"769","severity":1,"message":"770","line":27,"column":40,"nodeType":"771","messageId":"772","endLine":27,"endColumn":71},{"ruleId":"769","severity":1,"message":"770","line":31,"column":71,"nodeType":"771","messageId":"772","endLine":31,"endColumn":102,"suggestions":"831"},{"ruleId":"769","severity":1,"message":"770","line":34,"column":13,"nodeType":"771","messageId":"772","endLine":34,"endColumn":43,"suggestions":"832"},{"ruleId":"760","severity":1,"message":"761","line":47,"column":33,"nodeType":"762","messageId":"763","endLine":47,"endColumn":38},{"ruleId":"769","severity":1,"message":"770","line":48,"column":9,"nodeType":"771","messageId":"772","endLine":48,"endColumn":40,"suggestions":"833"},{"ruleId":"760","severity":1,"message":"761","line":51,"column":28,"nodeType":"762","messageId":"763","endLine":51,"endColumn":33},{"ruleId":"760","severity":1,"message":"761","line":55,"column":32,"nodeType":"762","messageId":"763","endLine":55,"endColumn":47},{"ruleId":"760","severity":1,"message":"834","line":55,"column":33,"nodeType":"766","messageId":"767","endLine":55,"endColumn":43},{"ruleId":"760","severity":1,"message":"761","line":59,"column":34,"nodeType":"762","messageId":"763","endLine":59,"endColumn":39},{"ruleId":"760","severity":1,"message":"761","line":29,"column":25,"nodeType":"762","messageId":"763","endLine":29,"endColumn":73},{"ruleId":"769","severity":1,"message":"770","line":40,"column":97,"nodeType":"771","messageId":"772","endLine":40,"endColumn":127,"suggestions":"835"},{"ruleId":"760","severity":1,"message":"761","line":56,"column":27,"nodeType":"762","messageId":"763","endLine":56,"endColumn":52},{"ruleId":"760","severity":1,"message":"761","line":71,"column":26,"nodeType":"762","messageId":"763","endLine":71,"endColumn":50},{"ruleId":"760","severity":1,"message":"761","line":87,"column":29,"nodeType":"762","messageId":"763","endLine":87,"endColumn":53},{"ruleId":"769","severity":1,"message":"770","line":92,"column":17,"nodeType":"771","messageId":"772","endLine":92,"endColumn":26,"suggestions":"836"},{"ruleId":"769","severity":1,"message":"770","line":95,"column":21,"nodeType":"771","messageId":"772","endLine":95,"endColumn":25,"suggestions":"837"},{"ruleId":"760","severity":1,"message":"761","line":106,"column":31,"nodeType":"762","messageId":"763","endLine":106,"endColumn":70},{"ruleId":"769","severity":1,"message":"770","line":34,"column":88,"nodeType":"771","messageId":"772","endLine":34,"endColumn":93},{"ruleId":"769","severity":1,"message":"770","line":35,"column":96,"nodeType":"771","messageId":"772","endLine":35,"endColumn":101},{"ruleId":"769","severity":1,"message":"770","line":36,"column":89,"nodeType":"771","messageId":"772","endLine":36,"endColumn":94},{"ruleId":"760","severity":1,"message":"761","line":4,"column":32,"nodeType":"762","messageId":"763","endLine":4,"endColumn":37},{"ruleId":"769","severity":1,"message":"770","line":31,"column":37,"nodeType":"771","messageId":"772","endLine":31,"endColumn":42,"suggestions":"838"},{"ruleId":"769","severity":1,"message":"770","line":34,"column":97,"nodeType":"771","messageId":"772","endLine":34,"endColumn":102,"suggestions":"839"},{"ruleId":"760","severity":1,"message":"761","line":10,"column":24,"nodeType":"762","messageId":"763","endLine":10,"endColumn":45},{"ruleId":"760","severity":1,"message":"761","line":4,"column":24,"nodeType":"762","messageId":"763","endLine":4,"endColumn":29},{"ruleId":"760","severity":1,"message":"761","line":6,"column":18,"nodeType":"762","messageId":"763","endLine":6,"endColumn":23},{"ruleId":"760","severity":1,"message":"761","line":32,"column":26,"nodeType":"762","messageId":"763","endLine":32,"endColumn":37},{"ruleId":"760","severity":1,"message":"761","line":47,"column":35,"nodeType":"762","messageId":"763","endLine":47,"endColumn":132},{"ruleId":"760","severity":1,"message":"761","line":55,"column":27,"nodeType":"762","messageId":"763","endLine":55,"endColumn":48},{"ruleId":"760","severity":1,"message":"761","line":73,"column":25,"nodeType":"762","messageId":"763","endLine":73,"endColumn":50},{"ruleId":"760","severity":1,"message":"761","line":98,"column":27,"nodeType":"762","messageId":"763","endLine":98,"endColumn":52},{"ruleId":"760","severity":1,"message":"761","line":128,"column":26,"nodeType":"762","messageId":"763","endLine":128,"endColumn":61},{"ruleId":"760","severity":1,"message":"761","line":4,"column":32,"nodeType":"762","messageId":"763","endLine":4,"endColumn":37},{"ruleId":"760","severity":1,"message":"761","line":6,"column":8,"nodeType":"764","messageId":"763","endLine":6,"endColumn":41},{"ruleId":"760","severity":1,"message":"840","line":6,"column":29,"nodeType":"766","messageId":"767","endLine":6,"endColumn":40},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","Argument 'enumType' should be typed with a non-any type.","Identifier","anyTypedArg","Argument 'values' should be typed with a non-any type.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["841"],["842"],["843"],["844"],["845"],["846"],["847"],["848"],["849"],["850"],["851"],["852"],["853"],["854"],"Argument 'props' should be typed with a non-any type.","Argument 'sourceDoc' should be typed.","missingArgType","Argument 'targetDoc' should be typed.",["855"],["856"],["857"],["858"],["859"],["860"],["861"],["862"],["863"],["864"],["865"],["866"],["867"],["868"],["869"],["870"],["871"],["872"],["873"],["874"],["875"],["876"],["877"],["878"],["879"],["880"],["881"],["882"],["883"],["884"],["885"],["886"],["887"],["888"],["889"],["890"],["891"],["892"],["893"],["894"],["895"],["896"],["897"],"Argument 'files' should be typed with a non-any type.",["898"],["899"],["900"],["901"],["902"],"Argument 'errors' should be typed with a non-any type.",{"messageId":"903","fix":"904","desc":"905"},{"messageId":"903","fix":"906","desc":"905"},{"messageId":"903","fix":"907","desc":"905"},{"messageId":"903","fix":"908","desc":"905"},{"messageId":"903","fix":"909","desc":"905"},{"messageId":"903","fix":"910","desc":"905"},{"messageId":"903","fix":"911","desc":"905"},{"messageId":"903","fix":"912","desc":"905"},{"messageId":"903","fix":"913","desc":"905"},{"messageId":"903","fix":"914","desc":"905"},{"messageId":"903","fix":"915","desc":"905"},{"messageId":"903","fix":"916","desc":"905"},{"messageId":"903","fix":"917","desc":"905"},{"messageId":"903","fix":"918","desc":"905"},{"messageId":"903","fix":"919","desc":"905"},{"messageId":"903","fix":"920","desc":"905"},{"messageId":"903","fix":"921","desc":"905"},{"messageId":"903","fix":"922","desc":"905"},{"messageId":"903","fix":"923","desc":"905"},{"messageId":"903","fix":"924","desc":"905"},{"messageId":"903","fix":"925","desc":"905"},{"messageId":"903","fix":"926","desc":"905"},{"messageId":"903","fix":"927","desc":"905"},{"messageId":"903","fix":"928","desc":"905"},{"messageId":"903","fix":"929","desc":"905"},{"messageId":"903","fix":"930","desc":"905"},{"messageId":"903","fix":"931","desc":"905"},{"messageId":"903","fix":"932","desc":"905"},{"messageId":"903","fix":"933","desc":"905"},{"messageId":"903","fix":"934","desc":"905"},{"messageId":"903","fix":"935","desc":"905"},{"messageId":"903","fix":"936","desc":"905"},{"messageId":"903","fix":"937","desc":"905"},{"messageId":"903","fix":"938","desc":"905"},{"messageId":"903","fix":"939","desc":"905"},{"messageId":"903","fix":"940","desc":"905"},{"messageId":"903","fix":"941","desc":"905"},{"messageId":"903","fix":"942","desc":"905"},{"messageId":"903","fix":"943","desc":"905"},{"messageId":"903","fix":"944","desc":"905"},{"messageId":"903","fix":"945","desc":"905"},{"messageId":"903","fix":"946","desc":"905"},{"messageId":"903","fix":"947","desc":"905"},{"messageId":"903","fix":"948","desc":"905"},{"messageId":"903","fix":"949","desc":"905"},{"messageId":"903","fix":"950","desc":"905"},{"messageId":"903","fix":"951","desc":"905"},{"messageId":"903","fix":"952","desc":"905"},{"messageId":"903","fix":"953","desc":"905"},{"messageId":"903","fix":"954","desc":"905"},{"messageId":"903","fix":"955","desc":"905"},{"messageId":"903","fix":"956","desc":"905"},{"messageId":"903","fix":"957","desc":"905"},{"messageId":"903","fix":"958","desc":"905"},{"messageId":"903","fix":"959","desc":"905"},{"messageId":"903","fix":"960","desc":"905"},{"messageId":"903","fix":"961","desc":"905"},{"messageId":"903","fix":"962","desc":"905"},{"messageId":"903","fix":"963","desc":"905"},{"messageId":"903","fix":"964","desc":"905"},{"messageId":"903","fix":"965","desc":"905"},{"messageId":"903","fix":"966","desc":"905"},"suggestOptionalChain",{"range":"967","text":"968"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"969","text":"968"},{"range":"970","text":"968"},{"range":"971","text":"968"},{"range":"972","text":"968"},{"range":"973","text":"968"},{"range":"974","text":"968"},{"range":"975","text":"968"},{"range":"976","text":"968"},{"range":"977","text":"968"},{"range":"978","text":"968"},{"range":"979","text":"968"},{"range":"980","text":"968"},{"range":"981","text":"968"},{"range":"982","text":"968"},{"range":"983","text":"968"},{"range":"984","text":"968"},{"range":"985","text":"968"},{"range":"986","text":"968"},{"range":"987","text":"968"},{"range":"988","text":"968"},{"range":"989","text":"968"},{"range":"990","text":"968"},{"range":"991","text":"968"},{"range":"992","text":"968"},{"range":"993","text":"968"},{"range":"994","text":"968"},{"range":"995","text":"968"},{"range":"996","text":"968"},{"range":"997","text":"968"},{"range":"998","text":"968"},{"range":"999","text":"968"},{"range":"1000","text":"968"},{"range":"1001","text":"968"},{"range":"1002","text":"968"},{"range":"1003","text":"968"},{"range":"1004","text":"968"},{"range":"1005","text":"968"},{"range":"1006","text":"968"},{"range":"1007","text":"968"},{"range":"1008","text":"968"},{"range":"1009","text":"968"},{"range":"1010","text":"968"},{"range":"1011","text":"968"},{"range":"1012","text":"968"},{"range":"1013","text":"968"},{"range":"1014","text":"968"},{"range":"1015","text":"968"},{"range":"1016","text":"968"},{"range":"1017","text":"968"},{"range":"1018","text":"968"},{"range":"1019","text":"968"},{"range":"1020","text":"968"},{"range":"1021","text":"968"},{"range":"1022","text":"968"},{"range":"1023","text":"968"},{"range":"1024","text":"968"},{"range":"1025","text":"968"},{"range":"1026","text":"968"},{"range":"1027","text":"968"},{"range":"1028","text":"968"},{"range":"1029","text":"968"},[3195,3196],"?",[3751,3752],[3810,3811],[4299,4300],[4807,4808],[5308,5309],[5369,5370],[5989,5990],[6169,6170],[6550,6551],[8333,8334],[8953,8954],[9547,9548],[10417,10418],[2899,2900],[3397,3398],[3930,3931],[4054,4055],[4619,4620],[4753,4754],[4890,4891],[5026,5027],[6170,6171],[6558,6559],[6589,6590],[7136,7137],[7495,7496],[7554,7555],[8388,8389],[642,643],[806,807],[976,977],[1213,1214],[1294,1295],[5957,5958],[1458,1459],[1625,1626],[1860,1861],[1953,1954],[2184,2185],[2220,2221],[2268,2269],[2519,2520],[2562,2563],[2578,2579],[2601,2602],[2643,2644],[2727,2728],[4386,4387],[4789,4790],[5299,5300],[5463,5464],[993,994],[1750,1751],[1342,1343],[1505,1506],[1895,1896],[1744,1745],[3762,3763],[3915,3916],[1257,1258],[1597,1598]]