[{"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts":"1","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx":"2","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\SEO.tsx":"3","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx":"4","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx":"5","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx":"6","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx":"7","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx":"8","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx":"9","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx":"10","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx":"11","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx":"12","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx":"13","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx":"14","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts":"15","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx":"16","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts":"17","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx":"18","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx":"19","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx":"20","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx":"21","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx":"22","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx":"23","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx":"24","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx":"25","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx":"26","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx":"27","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx":"28","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx":"29","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx":"30","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx":"31","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx":"32","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx":"33","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx":"34","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx":"35","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx":"36","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts":"37","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx":"38"},{"size":425,"mtime":1607677411935,"results":"39","hashOfConfig":"40"},{"size":2485,"mtime":1609666422717,"results":"41","hashOfConfig":"40"},{"size":1946,"mtime":1609219959650,"results":"42","hashOfConfig":"40"},{"size":873,"mtime":1609622596600,"results":"43","hashOfConfig":"40"},{"size":1151,"mtime":1609248261365,"results":"44","hashOfConfig":"40"},{"size":576,"mtime":1609457630920,"results":"45","hashOfConfig":"40"},{"size":2459,"mtime":1609576904156,"results":"46","hashOfConfig":"40"},{"size":49789,"mtime":1610145054206,"results":"47","hashOfConfig":"40"},{"size":1516,"mtime":1609625320381,"results":"48","hashOfConfig":"40"},{"size":2183,"mtime":1609659317317,"results":"49","hashOfConfig":"40"},{"size":271,"mtime":1609353715022,"results":"50","hashOfConfig":"40"},{"size":1901,"mtime":1609412108635,"results":"51","hashOfConfig":"40"},{"size":248,"mtime":1609352810131,"results":"52","hashOfConfig":"40"},{"size":4166,"mtime":1609666669897,"results":"53","hashOfConfig":"40"},{"size":2245,"mtime":1610111339348,"results":"54","hashOfConfig":"40"},{"size":3313,"mtime":1609833590502,"results":"55","hashOfConfig":"40"},{"size":324,"mtime":1610041260124,"results":"56","hashOfConfig":"40"},{"size":964,"mtime":1609411308644,"results":"57","hashOfConfig":"40"},{"size":647,"mtime":1609418891029,"results":"58","hashOfConfig":"40"},{"size":1969,"mtime":1609448194784,"results":"59","hashOfConfig":"40"},{"size":4364,"mtime":1609516219520,"results":"60","hashOfConfig":"40"},{"size":2282,"mtime":1609664213138,"results":"61","hashOfConfig":"40"},{"size":1458,"mtime":1610142639302,"results":"62","hashOfConfig":"40"},{"size":1080,"mtime":1609498245991,"results":"63","hashOfConfig":"40"},{"size":2720,"mtime":1609262456322,"results":"64","hashOfConfig":"40"},{"size":575,"mtime":1609510186425,"results":"65","hashOfConfig":"40"},{"size":1038,"mtime":1609509530471,"results":"66","hashOfConfig":"40"},{"size":2638,"mtime":1610125767227,"results":"67","hashOfConfig":"40"},{"size":3207,"mtime":1610209979827,"results":"68","hashOfConfig":"40"},{"size":2809,"mtime":1610014121445,"results":"69","hashOfConfig":"40"},{"size":2663,"mtime":1609659888257,"results":"70","hashOfConfig":"40"},{"size":1889,"mtime":1610032729747,"results":"71","hashOfConfig":"40"},{"size":2741,"mtime":1610212131486,"results":"72","hashOfConfig":"40"},{"size":5510,"mtime":1610125406203,"results":"73","hashOfConfig":"40"},{"size":3132,"mtime":1610212546969,"results":"74","hashOfConfig":"40"},{"size":1014,"mtime":1610045599411,"results":"75","hashOfConfig":"40"},{"size":707,"mtime":1610088970853,"results":"76","hashOfConfig":"40"},{"size":1397,"mtime":1610145135628,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"1bnsgpt",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"97"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts",["171"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\SEO.tsx",["172"],"﻿import React from \"react\"\r\nimport { Helmet } from \"react-helmet\";\r\n\r\ninterface IProps{\r\n    description?: string;\r\n    keywords?: string[];\r\n    url?: string;\r\n    image?: string;\r\n    title?: string;\r\n    lang?: string;\r\n}\r\n\r\nfunction SEO({ description, lang, title, keywords}: IProps) {\r\n\r\n    const metaKeywords = keywords ? keywords : [\"site\", \"portfolio\", \"full-stack developer\", \"developer\", \"developer\", \"software engineer\", \"website\"]\r\n\r\n    return (\r\n        <Helmet\r\n            htmlAttributes={{\r\n                lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`Taskr - %s`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: description \r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: title\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: description\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: \"Hundeyin Oluwadamilola\"\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: title\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: description\r\n                },\r\n            ].concat(metaKeywords && metaKeywords.length > 0 ? {\r\n                name: `keywords`,\r\n                content: metaKeywords.join(\",\")\r\n            } : [])}\r\n        />\r\n    )\r\n}\r\n\r\nSEO.defaultProps = {\r\n    lang: `en`,\r\n    meta: [],\r\n    description: ``,\r\n}\r\n\r\n\r\n\r\nexport default SEO\r\n","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx",["173"],"﻿import { Box} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport {useMediaQuery} from \"react-responsive\";\r\nimport {RightArrowIcon} from \"../../infrastructure/icons/Icons\";\r\n\r\nconst HomePage = () => {\r\n    const isMobile = useMediaQuery({query: \"(max-width: 400px)\"});\r\n    return (\r\n        <div>\r\n            <Box className=\"home__banner\">\r\n                <div className=\"container\">\r\n                    <div className=\"home__banner__container\">\r\n               <h1 className=\"home__banner__text\">The {isMobile ? \"No 1\": \"number one\"} online marketplace for delegating <i style={{fontWeight: \"initial\"}}>tasks</i></h1>\r\n                        <div className={isMobile ? \"\" : \"flexer\"}>\r\n                            <button className={isMobile ? \"btn btn__accent btn__shadow btn__bg btn__full-width\" : \"btn btn__primary btn__shadow btn__bg \"}>Become a runner</button>\r\n                            <p className=\"home__banner__learn\">Learn more <RightArrowIcon boxSize={8} /></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx",["224"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport QueryActions from \"./QueryActions\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport QueryBody from \"./QueryBody\";\r\nimport {StringParam, useQueryParams} from \"use-query-params\";\r\n\r\nconst QueryPage = () => {\r\n    const {loadingInitial, tasks, getAllJobs, taskQueryValues, setTasksQueryParams} = useContext(rootStoreContext).jobStore;\r\n    const [queryParams] = useQueryParams({\r\n        title: StringParam,\r\n        city: StringParam\r\n    }) \r\n    \r\n    setTasksQueryParams(queryParams.title!);\r\n    useEffect(() => {\r\n        getAllJobs();\r\n    }, [getAllJobs, taskQueryValues, queryParams])\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main\">\r\n                <div>\r\n                <h1 className=\"text__lg\">Results for {`\"${queryParams.title}\"`}</h1>\r\n                    <div className=\"query__body\">\r\n                    <QueryActions />\r\n                        {loadingInitial || tasks === null ? <InlineLoader /> : (\r\n                            <div>\r\n                                <QueryBody tasks={tasks} taskQueryValues={taskQueryValues}/>\r\n                            </div>\r\n                        )}                   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(QueryPage);",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx",["225"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx",["226"],"﻿import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Loader(){\r\n    return (\r\n        <div className=\"middle_position\">\r\n            <Spinner size=\"xl\" color=\"brand.100\"  />\r\n        </div>\r\n    )\r\n}",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx",["227"],"﻿import {FormControl, FormLabel, HStack, InputLeftElement, InputGroup, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, MenuDivider, Flex, Spacer } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst PriceQueryForm = () => {\r\n    return (\r\n        <form>\r\n            <div style={{padding: \"1em\"}}>\r\n            <HStack spacing=\"24px\">\r\n                <FormControl id=\"min\">\r\n                    <FormLabel className=\"query__price__label\">Min</FormLabel>\r\n                    <InputGroup>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            fontSize=\"1.2em\"\r\n                            className=\"query__price__placeholder\"\r\n                        >\r\n                            $\r\n                        </InputLeftElement>\r\n                        <NumberInput size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                                <NumberInputField className=\"query__price__input\" />\r\n                            <NumberInputStepper>\r\n                                <NumberIncrementStepper />\r\n                                <NumberDecrementStepper />\r\n                            </NumberInputStepper>\r\n                        </NumberInput>\r\n                    </InputGroup>\r\n                </FormControl>\r\n                <FormControl id=\"max\">\r\n                    <FormLabel className=\"query__price__label\">Max</FormLabel>\r\n                    <InputGroup>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            fontSize=\"1.2em\"\r\n                            className=\"query__price__placeholder\"\r\n                        >\r\n                            $\r\n                        </InputLeftElement>\r\n                        <NumberInput size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                            <NumberInputField className=\"query__price__input\" />\r\n                            <NumberInputStepper>\r\n                                <NumberIncrementStepper />\r\n                                <NumberDecrementStepper />\r\n                            </NumberInputStepper>\r\n                        </NumberInput>\r\n                    </InputGroup>\r\n                </FormControl> \r\n            </HStack>\r\n            </div>\r\n            <MenuDivider />\r\n            <Flex alignItems=\"center\" style={{padding: \"0 1em\"}}>\r\n                <button className=\"btn btn__none\">Clear All</button>\r\n                <Spacer />\r\n                <button className=\"btn btn__primary btn__sm\">Apply</button>\r\n            </Flex>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PriceQueryForm;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx",["228"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable} from \"mobx\";\r\n// import React from \"react\";\r\n\r\n//-----------------------------------------------\r\n// General store for application\r\n//------------------------------------------------\r\n\r\nexport class AppStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable appLoaded = false;\r\n    \r\n    @action setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n    \r\n    \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx",["229","230","231","232"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx",["233","234","235"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {ITaskQueryValues, IPaginatedTaskResponse, ITask} from \"../../infrastructure/models/task\";\r\nimport {JobRequest} from \"../api/agent\";\r\nimport {toast} from \"react-toastify\";\r\nimport Alert from \"../common/Alert\";\r\nimport {CloseIcon} from \"../../infrastructure/icons/Icons\";\r\nimport React from \"react\";\r\n\r\n//---------------------------------------------------------\r\n// Store for all Job related actions\r\n//---------------------------------------------------------\r\n\r\nexport class TaskStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        makeObservable(this);\r\n        this.rootStore = rootStore;\r\n    }\r\n    \r\n    @observable tasks: IPaginatedTaskResponse | null = null;\r\n    @observable loadingInitial = false;\r\n    @observable taskQueryValues: ITaskQueryValues = {title: \"\", pageNumber: 1, pageSize: 20, maxPrice: 0, minPrice: 0};\r\n    @observable task: ITask | null = null;\r\n    \r\n    \r\n    // ------------------------\r\n    // Actions\r\n    // ------------------------\r\n    \r\n    @action getAllJobs = async () => {\r\n        this.loadingInitial = true;\r\n        try{\r\n            const paginatedJobResponse = await JobRequest.getAllTasks(this.taskQueryValues);\r\n            runInAction(() => {\r\n                this.tasks = paginatedJobResponse;\r\n                this.loadingInitial = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            console.log(e);\r\n        }\r\n    }\r\n    \r\n    @action setTasksQueryParams = (title?: string, maxPrice?: number, minPrice?: number, pageNumber?: number, pageSize?: number) => {\r\n        this.taskQueryValues.title = title ? title : \"\";\r\n        this.taskQueryValues.maxPrice = maxPrice ? maxPrice : 0;\r\n        this.taskQueryValues.minPrice = minPrice ? minPrice : 0 ; \r\n        this.taskQueryValues.pageNumber = pageNumber ? pageNumber : 1;\r\n        this.taskQueryValues.pageSize = pageSize ? pageSize : 20;\r\n    }\r\n    \r\n    @action getTaskById = async (id: string) => {\r\n        this.loadingInitial = true;\r\n        try{\r\n          const taskResponse = await JobRequest.getTaskById(id);\r\n          runInAction(() => {\r\n              this.task = taskResponse;\r\n              this.loadingInitial = false;\r\n          })\r\n        } catch (error) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Problem loading task\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx",["236"],{"ruleId":"237","severity":1,"message":"238","line":3,"column":25,"nodeType":"239","messageId":"240","endLine":3,"endColumn":57},{"ruleId":"237","severity":1,"message":"238","line":13,"column":1,"nodeType":"241","messageId":"240","endLine":13,"endColumn":60},{"ruleId":"237","severity":1,"message":"238","line":6,"column":18,"nodeType":"239","messageId":"240","endLine":6,"endColumn":23},{"ruleId":"237","severity":1,"message":"238","line":4,"column":8,"nodeType":"241","messageId":"240","endLine":4,"endColumn":41},{"ruleId":"237","severity":1,"message":"242","line":4,"column":30,"nodeType":"243","messageId":"244","endLine":4,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":56,"column":8,"nodeType":"241","messageId":"240","endLine":56,"endColumn":39},{"ruleId":"237","severity":1,"message":"242","line":56,"column":28,"nodeType":"243","messageId":"244","endLine":56,"endColumn":38},{"ruleId":"237","severity":1,"message":"238","line":103,"column":8,"nodeType":"241","messageId":"240","endLine":103,"endColumn":38},{"ruleId":"237","severity":1,"message":"242","line":103,"column":27,"nodeType":"243","messageId":"244","endLine":103,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":152,"column":8,"nodeType":"241","messageId":"240","endLine":152,"endColumn":43},{"ruleId":"237","severity":1,"message":"242","line":152,"column":32,"nodeType":"243","messageId":"244","endLine":152,"endColumn":42},{"ruleId":"237","severity":1,"message":"238","line":200,"column":8,"nodeType":"241","messageId":"240","endLine":200,"endColumn":44},{"ruleId":"237","severity":1,"message":"242","line":200,"column":33,"nodeType":"243","messageId":"244","endLine":200,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":209,"column":8,"nodeType":"241","messageId":"240","endLine":209,"endColumn":43},{"ruleId":"237","severity":1,"message":"242","line":209,"column":32,"nodeType":"243","messageId":"244","endLine":209,"endColumn":42},{"ruleId":"237","severity":1,"message":"238","line":217,"column":8,"nodeType":"241","messageId":"240","endLine":217,"endColumn":36},{"ruleId":"237","severity":1,"message":"242","line":217,"column":25,"nodeType":"243","messageId":"244","endLine":217,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":314,"column":8,"nodeType":"241","messageId":"240","endLine":314,"endColumn":41},{"ruleId":"237","severity":1,"message":"242","line":314,"column":30,"nodeType":"243","messageId":"244","endLine":314,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":323,"column":8,"nodeType":"241","messageId":"240","endLine":323,"endColumn":41},{"ruleId":"237","severity":1,"message":"242","line":323,"column":30,"nodeType":"243","messageId":"244","endLine":323,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":331,"column":8,"nodeType":"241","messageId":"240","endLine":331,"endColumn":39},{"ruleId":"237","severity":1,"message":"242","line":331,"column":28,"nodeType":"243","messageId":"244","endLine":331,"endColumn":38},{"ruleId":"237","severity":1,"message":"238","line":380,"column":8,"nodeType":"241","messageId":"240","endLine":380,"endColumn":40},{"ruleId":"237","severity":1,"message":"242","line":380,"column":29,"nodeType":"243","messageId":"244","endLine":380,"endColumn":39},{"ruleId":"237","severity":1,"message":"238","line":388,"column":8,"nodeType":"241","messageId":"240","endLine":388,"endColumn":45},{"ruleId":"237","severity":1,"message":"242","line":388,"column":34,"nodeType":"243","messageId":"244","endLine":388,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":396,"column":8,"nodeType":"241","messageId":"240","endLine":396,"endColumn":37},{"ruleId":"237","severity":1,"message":"242","line":396,"column":26,"nodeType":"243","messageId":"244","endLine":396,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":452,"column":8,"nodeType":"241","messageId":"240","endLine":452,"endColumn":38},{"ruleId":"237","severity":1,"message":"242","line":452,"column":27,"nodeType":"243","messageId":"244","endLine":452,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":460,"column":8,"nodeType":"241","messageId":"240","endLine":460,"endColumn":37},{"ruleId":"237","severity":1,"message":"242","line":460,"column":26,"nodeType":"243","messageId":"244","endLine":460,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":511,"column":8,"nodeType":"241","messageId":"240","endLine":511,"endColumn":45},{"ruleId":"237","severity":1,"message":"242","line":511,"column":34,"nodeType":"243","messageId":"244","endLine":511,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":550,"column":8,"nodeType":"241","messageId":"240","endLine":550,"endColumn":44},{"ruleId":"237","severity":1,"message":"242","line":550,"column":33,"nodeType":"243","messageId":"244","endLine":550,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":589,"column":8,"nodeType":"241","messageId":"240","endLine":589,"endColumn":44},{"ruleId":"237","severity":1,"message":"242","line":589,"column":33,"nodeType":"243","messageId":"244","endLine":589,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":638,"column":8,"nodeType":"241","messageId":"240","endLine":638,"endColumn":38},{"ruleId":"237","severity":1,"message":"242","line":638,"column":27,"nodeType":"243","messageId":"244","endLine":638,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":646,"column":8,"nodeType":"241","messageId":"240","endLine":646,"endColumn":36},{"ruleId":"237","severity":1,"message":"242","line":646,"column":25,"nodeType":"243","messageId":"244","endLine":646,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":690,"column":8,"nodeType":"241","messageId":"240","endLine":690,"endColumn":41},{"ruleId":"237","severity":1,"message":"242","line":690,"column":30,"nodeType":"243","messageId":"244","endLine":690,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":750,"column":8,"nodeType":"241","messageId":"240","endLine":750,"endColumn":37},{"ruleId":"237","severity":1,"message":"242","line":750,"column":26,"nodeType":"243","messageId":"244","endLine":750,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":797,"column":8,"nodeType":"241","messageId":"240","endLine":797,"endColumn":38},{"ruleId":"237","severity":1,"message":"242","line":797,"column":27,"nodeType":"243","messageId":"244","endLine":797,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":805,"column":8,"nodeType":"241","messageId":"240","endLine":805,"endColumn":37},{"ruleId":"237","severity":1,"message":"242","line":805,"column":26,"nodeType":"243","messageId":"244","endLine":805,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":813,"column":8,"nodeType":"241","messageId":"240","endLine":813,"endColumn":42},{"ruleId":"237","severity":1,"message":"242","line":813,"column":31,"nodeType":"243","messageId":"244","endLine":813,"endColumn":41},{"ruleId":"245","severity":1,"message":"246","line":16,"column":25,"nodeType":"247","messageId":"248","endLine":16,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":4,"column":22,"nodeType":"239","messageId":"240","endLine":4,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":4,"column":16,"nodeType":"241","messageId":"240","endLine":4,"endColumn":33},{"ruleId":"237","severity":1,"message":"238","line":4,"column":24,"nodeType":"239","messageId":"240","endLine":4,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":18,"column":28,"nodeType":"239","messageId":"240","endLine":18,"endColumn":33},{"ruleId":"237","severity":1,"message":"238","line":33,"column":5,"nodeType":"249","messageId":"240","endLine":33,"endColumn":31},{"ruleId":"237","severity":1,"message":"238","line":41,"column":26,"nodeType":"239","messageId":"240","endLine":41,"endColumn":72},{"ruleId":"237","severity":1,"message":"238","line":55,"column":30,"nodeType":"239","messageId":"240","endLine":55,"endColumn":41},{"ruleId":"237","severity":1,"message":"238","line":69,"column":26,"nodeType":"239","messageId":"240","endLine":69,"endColumn":31},{"ruleId":"237","severity":1,"message":"238","line":31,"column":26,"nodeType":"239","messageId":"240","endLine":31,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":45,"column":35,"nodeType":"239","messageId":"240","endLine":45,"endColumn":132},{"ruleId":"237","severity":1,"message":"238","line":53,"column":27,"nodeType":"239","messageId":"240","endLine":53,"endColumn":48},{"ruleId":"237","severity":1,"message":"238","line":21,"column":25,"nodeType":"239","messageId":"240","endLine":21,"endColumn":73},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","Argument 'props' should be typed with a non-any type.","Identifier","anyTypedArg","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","FunctionExpression"]