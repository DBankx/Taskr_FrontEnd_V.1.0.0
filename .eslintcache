[{"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts":"1","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx":"2","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\SEO.tsx":"3","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx":"4","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx":"5","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx":"6","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx":"7","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx":"8","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx":"9","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx":"10","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx":"11","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx":"12","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx":"13","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx":"14","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts":"15","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx":"16","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts":"17","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx":"18","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx":"19","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx":"20","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx":"21","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx":"22","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx":"23","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx":"24","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx":"25","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx":"26","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx":"27","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx":"28","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx":"29","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx":"30","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx":"31","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx":"32","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx":"33","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx":"34","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx":"35","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx":"36","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts":"37","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx":"38","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx":"39","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidInfo.tsx":"40","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx":"41","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx":"42","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx":"43","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getBidStatus.ts":"44","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskBidItem.tsx":"45","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidPageForm.tsx":"46","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx":"47","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx":"48","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\category.ts":"49","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx":"50","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx":"51","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\maps\\FormMap.tsx":"52","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx":"53","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormUploadedImagesPreview.tsx":"54"},{"size":425,"mtime":1607677411935,"results":"55","hashOfConfig":"56"},{"size":2485,"mtime":1609666422717,"results":"57","hashOfConfig":"56"},{"size":1946,"mtime":1610571843042,"results":"58","hashOfConfig":"56"},{"size":873,"mtime":1609622596600,"results":"59","hashOfConfig":"56"},{"size":1144,"mtime":1610306281019,"results":"60","hashOfConfig":"56"},{"size":576,"mtime":1609457630920,"results":"61","hashOfConfig":"56"},{"size":2502,"mtime":1610454990084,"results":"62","hashOfConfig":"56"},{"size":65364,"mtime":1610824486510,"results":"63","hashOfConfig":"56"},{"size":1517,"mtime":1610351220877,"results":"64","hashOfConfig":"56"},{"size":2698,"mtime":1610574738688,"results":"65","hashOfConfig":"56"},{"size":271,"mtime":1609353715022,"results":"66","hashOfConfig":"56"},{"size":1860,"mtime":1610307610747,"results":"67","hashOfConfig":"56"},{"size":248,"mtime":1609352810131,"results":"68","hashOfConfig":"56"},{"size":4166,"mtime":1609666669897,"results":"69","hashOfConfig":"56"},{"size":2571,"mtime":1610604914851,"results":"70","hashOfConfig":"56"},{"size":3209,"mtime":1610445495478,"results":"71","hashOfConfig":"56"},{"size":354,"mtime":1610818392524,"results":"72","hashOfConfig":"56"},{"size":964,"mtime":1609411308644,"results":"73","hashOfConfig":"56"},{"size":647,"mtime":1609418891029,"results":"74","hashOfConfig":"56"},{"size":1969,"mtime":1609448194784,"results":"75","hashOfConfig":"56"},{"size":4466,"mtime":1610532359295,"results":"76","hashOfConfig":"56"},{"size":2282,"mtime":1609664213138,"results":"77","hashOfConfig":"56"},{"size":1502,"mtime":1610373778088,"results":"78","hashOfConfig":"56"},{"size":1174,"mtime":1610454937587,"results":"79","hashOfConfig":"56"},{"size":2720,"mtime":1609262456322,"results":"80","hashOfConfig":"56"},{"size":821,"mtime":1610717991770,"results":"81","hashOfConfig":"56"},{"size":1038,"mtime":1609509530471,"results":"82","hashOfConfig":"56"},{"size":2689,"mtime":1610349166058,"results":"83","hashOfConfig":"56"},{"size":3167,"mtime":1610446645297,"results":"84","hashOfConfig":"56"},{"size":2809,"mtime":1610014121445,"results":"85","hashOfConfig":"56"},{"size":4582,"mtime":1610370453864,"results":"86","hashOfConfig":"56"},{"size":2649,"mtime":1610447401110,"results":"87","hashOfConfig":"56"},{"size":2777,"mtime":1610446796892,"results":"88","hashOfConfig":"56"},{"size":5504,"mtime":1610444432675,"results":"89","hashOfConfig":"56"},{"size":3091,"mtime":1610307717768,"results":"90","hashOfConfig":"56"},{"size":1010,"mtime":1610444548705,"results":"91","hashOfConfig":"56"},{"size":709,"mtime":1610351157014,"results":"92","hashOfConfig":"56"},{"size":2746,"mtime":1610351497523,"results":"93","hashOfConfig":"56"},{"size":2363,"mtime":1610351205676,"results":"94","hashOfConfig":"56"},{"size":4785,"mtime":1610308640260,"results":"95","hashOfConfig":"56"},{"size":738,"mtime":1610275409302,"results":"96","hashOfConfig":"56"},{"size":1690,"mtime":1610289242018,"results":"97","hashOfConfig":"56"},{"size":234,"mtime":1609429211018,"results":"98","hashOfConfig":"56"},{"size":474,"mtime":1610438890192,"results":"99","hashOfConfig":"56"},{"size":2252,"mtime":1610305710022,"results":"100","hashOfConfig":"56"},{"size":3196,"mtime":1610305391187,"results":"101","hashOfConfig":"56"},{"size":2159,"mtime":1610309405787,"results":"102","hashOfConfig":"56"},{"size":6644,"mtime":1610824512004,"results":"103","hashOfConfig":"56"},{"size":221,"mtime":1610461099494,"results":"104","hashOfConfig":"56"},{"size":347,"mtime":1610565679053,"results":"105","hashOfConfig":"56"},{"size":8545,"mtime":1610817015183,"results":"106","hashOfConfig":"56"},{"size":991,"mtime":1610615514143,"results":"107","hashOfConfig":"56"},{"size":3929,"mtime":1610816256671,"results":"108","hashOfConfig":"56"},{"size":1471,"mtime":1610721239863,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},"1bnsgpt",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":64,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"135"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"199"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts",["241"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\SEO.tsx",["242"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx",["243"],"﻿import { Box} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport {useMediaQuery} from \"@chakra-ui/react\";\r\nimport {RightArrowIcon} from \"../../infrastructure/icons/Icons\";\r\n\r\nconst HomePage = () => {\r\n    const [isMobile] = useMediaQuery(\"(max-width: 400px)\");\r\n    return (\r\n        <div>\r\n            <Box className=\"home__banner\">\r\n                <div className=\"container\">\r\n                    <div className=\"home__banner__container\">\r\n               <h1 className=\"home__banner__text\">The {isMobile ? \"No 1\": \"number one\"} online marketplace for delegating <i style={{fontWeight: \"initial\"}}>tasks</i></h1>\r\n                        <div className={isMobile ? \"\" : \"flexer\"}>\r\n                            <button className={isMobile ? \"btn btn__accent btn__shadow btn__bg btn__full-width\" : \"btn btn__primary btn__shadow btn__bg \"}>Become a runner</button>\r\n                            <p className=\"home__banner__learn\">Learn more <RightArrowIcon boxSize={8} /></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx",["244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx",["308"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport QueryActions from \"./QueryActions\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport QueryBody from \"./QueryBody\";\r\nimport {StringParam, useQueryParams} from \"use-query-params\";\r\n\r\nconst QueryPage = () => {\r\n    const {loadingInitial, tasks, getAllJobs, taskQueryValues, setTasksQueryParams} = useContext(rootStoreContext).taskStore;\r\n    const [queryParams] = useQueryParams({\r\n        title: StringParam,\r\n        city: StringParam\r\n    }) \r\n    \r\n    setTasksQueryParams(queryParams.title!);\r\n    useEffect(() => {\r\n        getAllJobs();\r\n    }, [getAllJobs, taskQueryValues, queryParams])\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main\">\r\n                <div>\r\n                <h1 className=\"text__lg\">Results for {`\"${queryParams.title}\"`}</h1>\r\n                    <div className=\"query__body\">\r\n                    <QueryActions />\r\n                        {loadingInitial || tasks === null ? <InlineLoader /> : (\r\n                            <div>\r\n                                <QueryBody tasks={tasks} taskQueryValues={taskQueryValues}/>\r\n                            </div>\r\n                        )}                   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(QueryPage);",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx",["309"],"import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst InlineLoader = () => {\r\n    return (\r\n        <div className=\"spinner__inline\">\r\n            <Spinner size=\"xl\" color=\"brand.200\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InlineLoader;",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx",["310"],"﻿import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Loader(){\r\n    return (\r\n        <div className=\"middle_position\">\r\n            <Spinner size=\"xl\" color=\"brand.100\"  />\r\n        </div>\r\n    )\r\n}",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx",["311"],"﻿import {FormControl, FormLabel, HStack, InputLeftElement, InputGroup, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, MenuDivider, Flex, Spacer } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst PriceQueryForm = () => {\r\n    return (\r\n        <form>\r\n            <div style={{padding: \"1em\"}}>\r\n            <HStack spacing=\"24px\">\r\n                <FormControl id=\"min\">\r\n                    <FormLabel className=\"query__price__label\">Min</FormLabel>\r\n                    <InputGroup>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            fontSize=\"1.2em\"\r\n                            className=\"query__price__placeholder\"\r\n                        >\r\n                            $\r\n                        </InputLeftElement>\r\n                        <NumberInput size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                                <NumberInputField className=\"query__price__input\" />\r\n                            <NumberInputStepper>\r\n                                <NumberIncrementStepper />\r\n                                <NumberDecrementStepper />\r\n                            </NumberInputStepper>\r\n                        </NumberInput>\r\n                    </InputGroup>\r\n                </FormControl>\r\n                <FormControl id=\"max\">\r\n                    <FormLabel className=\"query__price__label\">Max</FormLabel>\r\n                    <InputGroup>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            fontSize=\"1.2em\"\r\n                            className=\"query__price__placeholder\"\r\n                        >\r\n                            $\r\n                        </InputLeftElement>\r\n                        <NumberInput size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                            <NumberInputField className=\"query__price__input\" />\r\n                            <NumberInputStepper>\r\n                                <NumberIncrementStepper />\r\n                                <NumberDecrementStepper />\r\n                            </NumberInputStepper>\r\n                        </NumberInput>\r\n                    </InputGroup>\r\n                </FormControl> \r\n            </HStack>\r\n            </div>\r\n            <MenuDivider />\r\n            <Flex alignItems=\"center\" style={{padding: \"0 1em\"}}>\r\n                <button className=\"btn btn__none\">Clear All</button>\r\n                <Spacer />\r\n                <button className=\"btn btn__primary btn__sm\">Apply</button>\r\n            </Flex>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PriceQueryForm;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx",["312","313","314","315"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable} from \"mobx\";\r\n// import React from \"react\";\r\n\r\n//-----------------------------------------------\r\n// General store for application\r\n//------------------------------------------------\r\n\r\nexport class AppStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable appLoaded = false;\r\n    @observable uploadedTaskFormFiles : any[] = [];\r\n    \r\n    @action setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n    \r\n    @action setPreviewImages = (files: any) => {\r\n        this.uploadedTaskFormFiles = files;\r\n    }\r\n    \r\n   @action removePreviewImages = () => {\r\n        this.uploadedTaskFormFiles = [];\r\n   } \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx",["316","317","318","319"],"import {RootStore} from \"./rootstore\";\r\nimport {action, computed, makeObservable, observable, reaction, runInAction} from \"mobx\";\r\nimport {ISignInFormValues, IUser} from \"../../infrastructure/models/auth\";\r\nimport {AuthRequest} from \"../api/agent\";\r\nimport React from \"react\";\r\nimport Alert from \"../common/Alert\";\r\nimport {CloseIcon} from \"../../infrastructure/icons/Icons\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n// -------------------------------------------\r\n// Auth store for all auth actions\r\n// -------------------------------------------\r\n\r\nexport class AuthStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n        reaction(() => this.token, (token) => {\r\n            if(token){\r\n                // set the token value in local storage as soon as the token changes\r\n                localStorage.setItem(\"jwt\", token);\r\n            } else {\r\n                localStorage.removeItem(\"jwt\");\r\n            }\r\n        })\r\n    }\r\n    \r\n    @observable token : string | null = localStorage.getItem(\"jwt\");\r\n    @observable user : IUser | null = null;\r\n\r\n    \r\n    @computed get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    // ------------------------\r\n    // Actions\r\n    // ------------------------\r\n    \r\n    \r\n    // TODO - Login should refresh the page\r\n    @action signInUser = async (signInFormValues: ISignInFormValues) => {\r\n        try{\r\n            const signInResponse = await AuthRequest.signIn(signInFormValues);\r\n            localStorage.setItem(\"jwt\", signInResponse.token);\r\n            runInAction(() => {\r\n                this.user = signInResponse.user;\r\n                this.rootStore.appStore.setAppLoaded();\r\n            })\r\n        } catch(error){\r\n            toast.error(<Alert subject=\"Invalid credentials\" message=\"\" icon={<CloseIcon boxSize={8} color=\"#73000c\" />} type=\"error\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action getCurrentUser = async () => {\r\n        try{\r\n            const authResponse = await AuthRequest.getCurrentUser();\r\n            localStorage.setItem(\"jwt\", authResponse.token);\r\n            runInAction(() => {\r\n                this.user = authResponse.user;\r\n                this.rootStore.appStore.setAppLoaded();\r\n            })\r\n        } catch(error){\r\n            toast.error(<Alert subject=\"Error occurred\" message=\"Problem getting tasks\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} type=\"error\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action logOutUser = () => {\r\n        localStorage.removeItem(\"jwt\");\r\n        this.user = null;\r\n        window.location.reload();\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx",["320","321","322","323","324"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx",["325","326","327"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {IBid, IBidSubmission} from \"../../infrastructure/models/bid\";\r\nimport { toast } from \"react-toastify\";\r\nimport {CheckmarkIcon, CloseIcon} from \"../../infrastructure/icons/Icons\";\r\nimport Alert from \"../common/Alert\";\r\nimport React from \"react\";\r\nimport {BidRequest} from \"../api/agent\";\r\n\r\nexport class BidStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n   @observable bid: IBid | null = null;\r\n   @observable bids: IBid[] | null = null; \r\n   @observable loadingInitialBids = false; \r\n    \r\n    // Actions\r\n    @action createBid = async (values: IBidSubmission, jobId: string) => {\r\n        try{\r\n            const bid = await BidRequest.placeBid(values, jobId);\r\n            runInAction(() => {\r\n                this.bid = bid;\r\n                if(this.rootStore.taskStore.task) {\r\n                    this.rootStore.taskStore.task.bidsCount += 1;\r\n                    this.rootStore.taskStore.task.isBidActive = true;\r\n                }\r\n                if(this.rootStore.bidStore.bids){\r\n                    // find if a bid by the user exists\r\n                    const userBid = this.rootStore.bidStore.bids.find((bid) => bid.userName === this.rootStore.authStore.user!.username);\r\n                    if(userBid){\r\n                        userBid.price = bid.price;\r\n                        userBid.createdAt = bid.createdAt;\r\n                    } else {\r\n                        this.rootStore.bidStore.bids.unshift(bid);\r\n                    }\r\n                }\r\n                toast.success(<Alert type=\"success\" subject=\"Success\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"Successfully placed a bid\" />);\r\n            })\r\n        }catch(error){\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Error occurred while submitting bid\" />);\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action getTaskBids = async (taskId: string) => {\r\n        this.loadingInitialBids = true;\r\n        try{\r\n            const taskBids = await BidRequest.getAllTaskBids(taskId);\r\n            runInAction(() => {\r\n                this.bids = taskBids;\r\n                this.loadingInitialBids = false;\r\n            })\r\n        }catch (error) {\r\n            runInAction(() => this.loadingInitialBids = false);\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Problem loading task bids\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidInfo.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getBidStatus.ts",["328"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskBidItem.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidPageForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\category.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx",["329"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\maps\\FormMap.tsx",["330"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormUploadedImagesPreview.tsx",[],{"ruleId":"331","severity":1,"message":"332","line":3,"column":25,"nodeType":"333","messageId":"334","endLine":3,"endColumn":57},{"ruleId":"331","severity":1,"message":"332","line":13,"column":1,"nodeType":"335","messageId":"334","endLine":13,"endColumn":60},{"ruleId":"331","severity":1,"message":"332","line":6,"column":18,"nodeType":"333","messageId":"334","endLine":6,"endColumn":23},{"ruleId":"331","severity":1,"message":"332","line":4,"column":8,"nodeType":"335","messageId":"334","endLine":4,"endColumn":41},{"ruleId":"331","severity":1,"message":"336","line":4,"column":30,"nodeType":"337","messageId":"338","endLine":4,"endColumn":40},{"ruleId":"331","severity":1,"message":"332","line":56,"column":8,"nodeType":"335","messageId":"334","endLine":56,"endColumn":39},{"ruleId":"331","severity":1,"message":"336","line":56,"column":28,"nodeType":"337","messageId":"338","endLine":56,"endColumn":38},{"ruleId":"331","severity":1,"message":"332","line":103,"column":8,"nodeType":"335","messageId":"334","endLine":103,"endColumn":38},{"ruleId":"331","severity":1,"message":"336","line":103,"column":27,"nodeType":"337","messageId":"338","endLine":103,"endColumn":37},{"ruleId":"331","severity":1,"message":"332","line":152,"column":8,"nodeType":"335","messageId":"334","endLine":152,"endColumn":43},{"ruleId":"331","severity":1,"message":"336","line":152,"column":32,"nodeType":"337","messageId":"338","endLine":152,"endColumn":42},{"ruleId":"331","severity":1,"message":"332","line":200,"column":8,"nodeType":"335","messageId":"334","endLine":200,"endColumn":44},{"ruleId":"331","severity":1,"message":"336","line":200,"column":33,"nodeType":"337","messageId":"338","endLine":200,"endColumn":43},{"ruleId":"331","severity":1,"message":"332","line":212,"column":8,"nodeType":"335","messageId":"334","endLine":212,"endColumn":43},{"ruleId":"331","severity":1,"message":"336","line":212,"column":32,"nodeType":"337","messageId":"338","endLine":212,"endColumn":42},{"ruleId":"331","severity":1,"message":"332","line":220,"column":8,"nodeType":"335","messageId":"334","endLine":220,"endColumn":36},{"ruleId":"331","severity":1,"message":"336","line":220,"column":25,"nodeType":"337","messageId":"338","endLine":220,"endColumn":35},{"ruleId":"331","severity":1,"message":"332","line":317,"column":8,"nodeType":"335","messageId":"334","endLine":317,"endColumn":41},{"ruleId":"331","severity":1,"message":"336","line":317,"column":30,"nodeType":"337","messageId":"338","endLine":317,"endColumn":40},{"ruleId":"331","severity":1,"message":"332","line":326,"column":8,"nodeType":"335","messageId":"334","endLine":326,"endColumn":41},{"ruleId":"331","severity":1,"message":"336","line":326,"column":30,"nodeType":"337","messageId":"338","endLine":326,"endColumn":40},{"ruleId":"331","severity":1,"message":"332","line":334,"column":8,"nodeType":"335","messageId":"334","endLine":334,"endColumn":39},{"ruleId":"331","severity":1,"message":"336","line":334,"column":28,"nodeType":"337","messageId":"338","endLine":334,"endColumn":38},{"ruleId":"331","severity":1,"message":"332","line":383,"column":8,"nodeType":"335","messageId":"334","endLine":383,"endColumn":40},{"ruleId":"331","severity":1,"message":"336","line":383,"column":29,"nodeType":"337","messageId":"338","endLine":383,"endColumn":39},{"ruleId":"331","severity":1,"message":"332","line":391,"column":8,"nodeType":"335","messageId":"334","endLine":391,"endColumn":45},{"ruleId":"331","severity":1,"message":"336","line":391,"column":34,"nodeType":"337","messageId":"338","endLine":391,"endColumn":44},{"ruleId":"331","severity":1,"message":"332","line":399,"column":8,"nodeType":"335","messageId":"334","endLine":399,"endColumn":37},{"ruleId":"331","severity":1,"message":"336","line":399,"column":26,"nodeType":"337","messageId":"338","endLine":399,"endColumn":36},{"ruleId":"331","severity":1,"message":"332","line":455,"column":8,"nodeType":"335","messageId":"334","endLine":455,"endColumn":38},{"ruleId":"331","severity":1,"message":"336","line":455,"column":27,"nodeType":"337","messageId":"338","endLine":455,"endColumn":37},{"ruleId":"331","severity":1,"message":"332","line":463,"column":8,"nodeType":"335","messageId":"334","endLine":463,"endColumn":37},{"ruleId":"331","severity":1,"message":"336","line":463,"column":26,"nodeType":"337","messageId":"338","endLine":463,"endColumn":36},{"ruleId":"331","severity":1,"message":"332","line":514,"column":8,"nodeType":"335","messageId":"334","endLine":514,"endColumn":45},{"ruleId":"331","severity":1,"message":"336","line":514,"column":34,"nodeType":"337","messageId":"338","endLine":514,"endColumn":44},{"ruleId":"331","severity":1,"message":"332","line":553,"column":8,"nodeType":"335","messageId":"334","endLine":553,"endColumn":44},{"ruleId":"331","severity":1,"message":"336","line":553,"column":33,"nodeType":"337","messageId":"338","endLine":553,"endColumn":43},{"ruleId":"331","severity":1,"message":"332","line":592,"column":8,"nodeType":"335","messageId":"334","endLine":592,"endColumn":44},{"ruleId":"331","severity":1,"message":"336","line":592,"column":33,"nodeType":"337","messageId":"338","endLine":592,"endColumn":43},{"ruleId":"331","severity":1,"message":"332","line":641,"column":8,"nodeType":"335","messageId":"334","endLine":641,"endColumn":38},{"ruleId":"331","severity":1,"message":"336","line":641,"column":27,"nodeType":"337","messageId":"338","endLine":641,"endColumn":37},{"ruleId":"331","severity":1,"message":"332","line":649,"column":8,"nodeType":"335","messageId":"334","endLine":649,"endColumn":36},{"ruleId":"331","severity":1,"message":"336","line":649,"column":25,"nodeType":"337","messageId":"338","endLine":649,"endColumn":35},{"ruleId":"331","severity":1,"message":"332","line":693,"column":8,"nodeType":"335","messageId":"334","endLine":693,"endColumn":41},{"ruleId":"331","severity":1,"message":"336","line":693,"column":30,"nodeType":"337","messageId":"338","endLine":693,"endColumn":40},{"ruleId":"331","severity":1,"message":"332","line":753,"column":8,"nodeType":"335","messageId":"334","endLine":753,"endColumn":37},{"ruleId":"331","severity":1,"message":"336","line":753,"column":26,"nodeType":"337","messageId":"338","endLine":753,"endColumn":36},{"ruleId":"331","severity":1,"message":"332","line":800,"column":8,"nodeType":"335","messageId":"334","endLine":800,"endColumn":38},{"ruleId":"331","severity":1,"message":"336","line":800,"column":27,"nodeType":"337","messageId":"338","endLine":800,"endColumn":37},{"ruleId":"331","severity":1,"message":"332","line":808,"column":8,"nodeType":"335","messageId":"334","endLine":808,"endColumn":37},{"ruleId":"331","severity":1,"message":"336","line":808,"column":26,"nodeType":"337","messageId":"338","endLine":808,"endColumn":36},{"ruleId":"331","severity":1,"message":"332","line":816,"column":8,"nodeType":"335","messageId":"334","endLine":816,"endColumn":42},{"ruleId":"331","severity":1,"message":"336","line":816,"column":31,"nodeType":"337","messageId":"338","endLine":816,"endColumn":41},{"ruleId":"331","severity":1,"message":"332","line":860,"column":8,"nodeType":"335","messageId":"334","endLine":860,"endColumn":49},{"ruleId":"331","severity":1,"message":"336","line":860,"column":38,"nodeType":"337","messageId":"338","endLine":860,"endColumn":48},{"ruleId":"331","severity":1,"message":"332","line":914,"column":8,"nodeType":"335","messageId":"334","endLine":914,"endColumn":41},{"ruleId":"331","severity":1,"message":"336","line":914,"column":30,"nodeType":"337","messageId":"338","endLine":914,"endColumn":40},{"ruleId":"331","severity":1,"message":"332","line":922,"column":8,"nodeType":"335","messageId":"334","endLine":922,"endColumn":37},{"ruleId":"331","severity":1,"message":"336","line":922,"column":26,"nodeType":"337","messageId":"338","endLine":922,"endColumn":36},{"ruleId":"331","severity":1,"message":"332","line":1031,"column":8,"nodeType":"335","messageId":"334","endLine":1031,"endColumn":37},{"ruleId":"331","severity":1,"message":"336","line":1031,"column":26,"nodeType":"337","messageId":"338","endLine":1031,"endColumn":36},{"ruleId":"331","severity":1,"message":"332","line":1072,"column":16,"nodeType":"335","messageId":"334","endLine":1072,"endColumn":46},{"ruleId":"331","severity":1,"message":"336","line":1072,"column":35,"nodeType":"337","messageId":"338","endLine":1072,"endColumn":45},{"ruleId":"331","severity":1,"message":"332","line":1080,"column":8,"nodeType":"335","messageId":"334","endLine":1080,"endColumn":38},{"ruleId":"331","severity":1,"message":"336","line":1080,"column":27,"nodeType":"337","messageId":"338","endLine":1080,"endColumn":37},{"ruleId":"331","severity":1,"message":"332","line":1144,"column":8,"nodeType":"335","messageId":"334","endLine":1144,"endColumn":36},{"ruleId":"331","severity":1,"message":"336","line":1144,"column":25,"nodeType":"337","messageId":"338","endLine":1144,"endColumn":35},{"ruleId":"339","severity":1,"message":"340","line":16,"column":25,"nodeType":"341","messageId":"342","endLine":16,"endColumn":43},{"ruleId":"331","severity":1,"message":"332","line":4,"column":22,"nodeType":"333","messageId":"334","endLine":4,"endColumn":27},{"ruleId":"331","severity":1,"message":"332","line":4,"column":16,"nodeType":"335","messageId":"334","endLine":4,"endColumn":33},{"ruleId":"331","severity":1,"message":"332","line":4,"column":24,"nodeType":"333","messageId":"334","endLine":4,"endColumn":29},{"ruleId":"331","severity":1,"message":"332","line":19,"column":28,"nodeType":"333","messageId":"334","endLine":19,"endColumn":33},{"ruleId":"331","severity":1,"message":"332","line":23,"column":32,"nodeType":"333","messageId":"334","endLine":23,"endColumn":47},{"ruleId":"331","severity":1,"message":"343","line":23,"column":33,"nodeType":"337","messageId":"338","endLine":23,"endColumn":43},{"ruleId":"331","severity":1,"message":"332","line":27,"column":34,"nodeType":"333","messageId":"334","endLine":27,"endColumn":39},{"ruleId":"331","severity":1,"message":"332","line":33,"column":5,"nodeType":"344","messageId":"334","endLine":33,"endColumn":31},{"ruleId":"331","severity":1,"message":"332","line":43,"column":26,"nodeType":"333","messageId":"334","endLine":43,"endColumn":72},{"ruleId":"331","severity":1,"message":"332","line":57,"column":30,"nodeType":"333","messageId":"334","endLine":57,"endColumn":41},{"ruleId":"331","severity":1,"message":"332","line":71,"column":26,"nodeType":"333","messageId":"334","endLine":71,"endColumn":31},{"ruleId":"331","severity":1,"message":"332","line":32,"column":26,"nodeType":"333","messageId":"334","endLine":32,"endColumn":37},{"ruleId":"331","severity":1,"message":"332","line":47,"column":35,"nodeType":"333","messageId":"334","endLine":47,"endColumn":132},{"ruleId":"331","severity":1,"message":"332","line":55,"column":27,"nodeType":"333","messageId":"334","endLine":55,"endColumn":48},{"ruleId":"331","severity":1,"message":"332","line":70,"column":25,"nodeType":"333","messageId":"334","endLine":70,"endColumn":50},{"ruleId":"331","severity":1,"message":"332","line":95,"column":27,"nodeType":"333","messageId":"334","endLine":95,"endColumn":52},{"ruleId":"331","severity":1,"message":"332","line":22,"column":25,"nodeType":"333","messageId":"334","endLine":22,"endColumn":73},{"ruleId":"339","severity":1,"message":"340","line":33,"column":97,"nodeType":"341","messageId":"342","endLine":33,"endColumn":127,"suggestions":"345"},{"ruleId":"331","severity":1,"message":"332","line":49,"column":27,"nodeType":"333","messageId":"334","endLine":49,"endColumn":52},{"ruleId":"331","severity":1,"message":"332","line":1,"column":22,"nodeType":"333","messageId":"334","endLine":1,"endColumn":38},{"ruleId":"339","severity":1,"message":"340","line":25,"column":48,"nodeType":"341","messageId":"342","endLine":25,"endColumn":66},{"ruleId":"339","severity":1,"message":"340","line":17,"column":24,"nodeType":"341","messageId":"342","endLine":17,"endColumn":45},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","Argument 'props' should be typed with a non-any type.","Identifier","anyTypedArg","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","Argument 'files' should be typed with a non-any type.","FunctionExpression",["346"],{"messageId":"347","fix":"348","desc":"349"},"suggestOptionalChain",{"range":"350","text":"351"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",[1400,1401],"?"]