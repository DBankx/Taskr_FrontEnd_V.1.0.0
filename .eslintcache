[{"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts":"1","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx":"2","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\SEO.tsx":"3","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx":"4","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx":"5","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx":"6","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx":"7","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx":"8","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx":"9","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx":"10","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx":"11","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx":"12","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx":"13","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx":"14","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts":"15","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx":"16","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts":"17","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx":"18","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx":"19","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx":"20","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx":"21","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx":"22","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx":"23","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx":"24","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx":"25","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx":"26","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx":"27","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx":"28","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx":"29","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx":"30","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx":"31","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx":"32","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx":"33","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx":"34","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx":"35","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx":"36","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts":"37","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx":"38","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx":"39","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidInfo.tsx":"40","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx":"41","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx":"42","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx":"43","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getBidStatus.ts":"44","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskBidItem.tsx":"45","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidPageForm.tsx":"46","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx":"47","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx":"48","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\category.ts":"49","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx":"50","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx":"51","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\maps\\FormMap.tsx":"52","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx":"53","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormUploadedImagesPreview.tsx":"54","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\deliveryTypes.ts":"55","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\LocationFinder.tsx":"56","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\copyStyle.ts":"57","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\enumFunctions.tsx":"58","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\ProfilePage.tsx":"59","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTab.tsx":"60","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\ActiveTasks.tsx":"61","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTable.tsx":"62","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\taskStatus.ts":"63","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getErrors.tsx":"64","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\profileStore.tsx":"65","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\MyProfile.tsx":"66","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileBox.tsx":"67","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\AccountBio.tsx":"68","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\skill.tsx":"69","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Preview.tsx":"70","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ReviewSummary.tsx":"71","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Rater.tsx":"72","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\TagLine.tsx":"73","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\LanguageForm.tsx":"74","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SkillsForm.tsx":"75","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SocialsForm.tsx":"76","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\DescriptionForm.tsx":"77","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileReviews.tsx":"78","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\reviews\\TaskrReviews.tsx":"79","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Review.tsx":"80","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\TaglineForm.tsx":"81","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\NotificationBox.tsx":"82","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotificationAlert.tsx":"83"},{"size":425,"mtime":1607677411935,"results":"84","hashOfConfig":"85"},{"size":2485,"mtime":1609666422717,"results":"86","hashOfConfig":"85"},{"size":1946,"mtime":1610571843042,"results":"87","hashOfConfig":"85"},{"size":873,"mtime":1609622596600,"results":"88","hashOfConfig":"85"},{"size":1144,"mtime":1610306281019,"results":"89","hashOfConfig":"85"},{"size":588,"mtime":1610965734551,"results":"90","hashOfConfig":"85"},{"size":2420,"mtime":1611872571052,"results":"91","hashOfConfig":"85"},{"size":87525,"mtime":1612096210648,"results":"92","hashOfConfig":"85"},{"size":1517,"mtime":1610351220877,"results":"93","hashOfConfig":"85"},{"size":2845,"mtime":1611172427271,"results":"94","hashOfConfig":"85"},{"size":271,"mtime":1609353715022,"results":"95","hashOfConfig":"85"},{"size":1860,"mtime":1610307610747,"results":"96","hashOfConfig":"85"},{"size":248,"mtime":1609352810131,"results":"97","hashOfConfig":"85"},{"size":4664,"mtime":1611171323680,"results":"98","hashOfConfig":"85"},{"size":4006,"mtime":1612035299451,"results":"99","hashOfConfig":"85"},{"size":3180,"mtime":1611150451605,"results":"100","hashOfConfig":"85"},{"size":354,"mtime":1610818392524,"results":"101","hashOfConfig":"85"},{"size":964,"mtime":1609411308644,"results":"102","hashOfConfig":"85"},{"size":647,"mtime":1609418891029,"results":"103","hashOfConfig":"85"},{"size":2258,"mtime":1611786214717,"results":"104","hashOfConfig":"85"},{"size":4466,"mtime":1610532359295,"results":"105","hashOfConfig":"85"},{"size":2302,"mtime":1611485298934,"results":"106","hashOfConfig":"85"},{"size":1653,"mtime":1611485484285,"results":"107","hashOfConfig":"85"},{"size":1188,"mtime":1612040302477,"results":"108","hashOfConfig":"85"},{"size":2720,"mtime":1609262456322,"results":"109","hashOfConfig":"85"},{"size":2208,"mtime":1612085264888,"results":"110","hashOfConfig":"85"},{"size":1038,"mtime":1609509530471,"results":"111","hashOfConfig":"85"},{"size":2689,"mtime":1610349166058,"results":"112","hashOfConfig":"85"},{"size":3414,"mtime":1611166961656,"results":"113","hashOfConfig":"85"},{"size":2809,"mtime":1610014121445,"results":"114","hashOfConfig":"85"},{"size":5006,"mtime":1611088827011,"results":"115","hashOfConfig":"85"},{"size":2649,"mtime":1610447401110,"results":"116","hashOfConfig":"85"},{"size":2899,"mtime":1611151020018,"results":"117","hashOfConfig":"85"},{"size":5343,"mtime":1611166930733,"results":"118","hashOfConfig":"85"},{"size":3091,"mtime":1610307717768,"results":"119","hashOfConfig":"85"},{"size":1010,"mtime":1610444548705,"results":"120","hashOfConfig":"85"},{"size":840,"mtime":1611245510906,"results":"121","hashOfConfig":"85"},{"size":2746,"mtime":1610351497523,"results":"122","hashOfConfig":"85"},{"size":2363,"mtime":1610351205676,"results":"123","hashOfConfig":"85"},{"size":4785,"mtime":1610308640260,"results":"124","hashOfConfig":"85"},{"size":738,"mtime":1610275409302,"results":"125","hashOfConfig":"85"},{"size":1690,"mtime":1610289242018,"results":"126","hashOfConfig":"85"},{"size":234,"mtime":1609429211018,"results":"127","hashOfConfig":"85"},{"size":474,"mtime":1610438890192,"results":"128","hashOfConfig":"85"},{"size":2258,"mtime":1611150381705,"results":"129","hashOfConfig":"85"},{"size":3196,"mtime":1610305391187,"results":"130","hashOfConfig":"85"},{"size":2159,"mtime":1610309405787,"results":"131","hashOfConfig":"85"},{"size":6925,"mtime":1611149664872,"results":"132","hashOfConfig":"85"},{"size":133,"mtime":1611141765490,"results":"133","hashOfConfig":"85"},{"size":347,"mtime":1610565679053,"results":"134","hashOfConfig":"85"},{"size":16610,"mtime":1611150147767,"results":"135","hashOfConfig":"85"},{"size":991,"mtime":1610615514143,"results":"136","hashOfConfig":"85"},{"size":3929,"mtime":1610816256671,"results":"137","hashOfConfig":"85"},{"size":1471,"mtime":1610721239863,"results":"138","hashOfConfig":"85"},{"size":57,"mtime":1611149087400,"results":"139","hashOfConfig":"85"},{"size":3904,"mtime":1611054324932,"results":"140","hashOfConfig":"85"},{"size":318,"mtime":1611077557281,"results":"141","hashOfConfig":"85"},{"size":380,"mtime":1611148501315,"results":"142","hashOfConfig":"85"},{"size":3145,"mtime":1611678467865,"results":"143","hashOfConfig":"85"},{"size":1168,"mtime":1611499051564,"results":"144","hashOfConfig":"85"},{"size":4697,"mtime":1611500461715,"results":"145","hashOfConfig":"85"},{"size":4933,"mtime":1611482453899,"results":"146","hashOfConfig":"85"},{"size":87,"mtime":1611321195156,"results":"147","hashOfConfig":"85"},{"size":468,"mtime":1610361256727,"results":"148","hashOfConfig":"85"},{"size":5782,"mtime":1612035478975,"results":"149","hashOfConfig":"85"},{"size":1745,"mtime":1611861253592,"results":"150","hashOfConfig":"85"},{"size":1982,"mtime":1611525306428,"results":"151","hashOfConfig":"85"},{"size":7330,"mtime":1611859656122,"results":"152","hashOfConfig":"85"},{"size":80,"mtime":1611524207827,"results":"153","hashOfConfig":"85"},{"size":956,"mtime":1611077701988,"results":"154","hashOfConfig":"85"},{"size":1381,"mtime":1611684354728,"results":"155","hashOfConfig":"85"},{"size":691,"mtime":1611682176899,"results":"156","hashOfConfig":"85"},{"size":1111,"mtime":1611859887411,"results":"157","hashOfConfig":"85"},{"size":3231,"mtime":1611859768658,"results":"158","hashOfConfig":"85"},{"size":3081,"mtime":1611859788799,"results":"159","hashOfConfig":"85"},{"size":6730,"mtime":1611859822550,"results":"160","hashOfConfig":"85"},{"size":1691,"mtime":1611859825856,"results":"161","hashOfConfig":"85"},{"size":1114,"mtime":1611871715394,"results":"162","hashOfConfig":"85"},{"size":950,"mtime":1611873870810,"results":"163","hashOfConfig":"85"},{"size":1398,"mtime":1611871615943,"results":"164","hashOfConfig":"85"},{"size":1621,"mtime":1611859810799,"results":"165","hashOfConfig":"85"},{"size":986,"mtime":1612040619538,"results":"166","hashOfConfig":"85"},{"size":2215,"mtime":1612096610155,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},"1bnsgpt",{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":82,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"171"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"174"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"210"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"188"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"188"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"174"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"223"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"218"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"246"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"174"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts",["367"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\SEO.tsx",["368"],"﻿import React from \"react\"\r\nimport { Helmet } from \"react-helmet\";\r\n\r\ninterface IProps{\r\n    description?: string;\r\n    keywords?: string[];\r\n    url?: string;\r\n    image?: string;\r\n    title?: string;\r\n    lang?: string;\r\n}\r\n\r\nfunction SEO({ description, lang, title, keywords}: IProps) {\r\n\r\n    const metaKeywords = keywords ? keywords : [\"site\", \"portfolio\", \"full-stack developer\", \"developer\", \"developer\", \"software engineer\", \"website\"]\r\n\r\n    return (\r\n        <Helmet\r\n            htmlAttributes={{\r\n                lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | Taskr`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: description \r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: title\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: description\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: \"Hundeyin Oluwadamilola\"\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: title\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: description\r\n                },\r\n            ].concat(metaKeywords && metaKeywords.length > 0 ? {\r\n                name: `keywords`,\r\n                content: metaKeywords.join(\",\")\r\n            } : [])}\r\n        />\r\n    )\r\n}\r\n\r\nSEO.defaultProps = {\r\n    lang: `en`,\r\n    meta: [],\r\n    description: ``,\r\n}\r\n\r\n\r\n\r\nexport default SEO\r\n",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx",["369"],"﻿import { Box} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport {useMediaQuery} from \"@chakra-ui/react\";\r\nimport {RightArrowIcon} from \"../../infrastructure/icons/Icons\";\r\n\r\nconst HomePage = () => {\r\n    const [isMobile] = useMediaQuery(\"(max-width: 400px)\");\r\n    return (\r\n        <div>\r\n            <Box className=\"home__banner\">\r\n                <div className=\"container\">\r\n                    <div className=\"home__banner__container\">\r\n               <h1 className=\"home__banner__text\">The {isMobile ? \"No 1\": \"number one\"} online marketplace for delegating <i style={{fontWeight: \"initial\"}}>tasks</i></h1>\r\n                        <div className={isMobile ? \"\" : \"flexer\"}>\r\n                            <button className={isMobile ? \"btn btn__accent btn__shadow btn__bg btn__full-width\" : \"btn btn__primary btn__shadow btn__bg \"}>Become a runner</button>\r\n                            <p className=\"home__banner__learn\">Learn more <RightArrowIcon boxSize={8} /></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx",["370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx",["452"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport QueryActions from \"./QueryActions\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport QueryBody from \"./QueryBody\";\r\nimport {StringParam, useQueryParams} from \"use-query-params\";\r\n\r\nconst QueryPage = () => {\r\n    const {loadingInitial, tasks, getAllJobs, taskQueryValues, setTasksQueryParams} = useContext(rootStoreContext).taskStore;\r\n    const [queryParams] = useQueryParams({\r\n        title: StringParam,\r\n        address: StringParam\r\n    }) \r\n    \r\n    setTasksQueryParams(queryParams.title!);\r\n    useEffect(() => {\r\n        getAllJobs();\r\n    }, [getAllJobs, taskQueryValues, queryParams])\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main\">\r\n                <div>\r\n                <h1 className=\"text__lg\">Results for {`\"${queryParams.title}\"`}</h1>\r\n                    <div className=\"query__body\">\r\n                    <QueryActions />\r\n                        {loadingInitial || tasks === null ? <InlineLoader /> : (\r\n                            <div>\r\n                                <QueryBody tasks={tasks} taskQueryValues={taskQueryValues}/>\r\n                            </div>\r\n                        )}                   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(QueryPage);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx",["453"],"import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst InlineLoader = () => {\r\n    return (\r\n        <div className=\"spinner__inline\">\r\n            <Spinner size=\"xl\" color=\"brand.200\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InlineLoader;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx",["454"],"﻿import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Loader(){\r\n    return (\r\n        <div className=\"middle_position\">\r\n            <Spinner size=\"xl\" color=\"brand.100\"  />\r\n        </div>\r\n    )\r\n}",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts",["455"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx",["456"],"﻿import {FormControl, FormLabel, HStack, InputLeftElement, InputGroup, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, MenuDivider, Flex, Spacer } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst PriceQueryForm = () => {\r\n    return (\r\n        <form>\r\n            <div style={{padding: \"1em\"}}>\r\n            <HStack spacing=\"24px\">\r\n                <FormControl id=\"min\">\r\n                    <FormLabel className=\"query__price__label\">Min</FormLabel>\r\n                    <InputGroup>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            fontSize=\"1.2em\"\r\n                            className=\"query__price__placeholder\"\r\n                        >\r\n                            $\r\n                        </InputLeftElement>\r\n                        <NumberInput size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                                <NumberInputField className=\"query__price__input\" />\r\n                            <NumberInputStepper>\r\n                                <NumberIncrementStepper />\r\n                                <NumberDecrementStepper />\r\n                            </NumberInputStepper>\r\n                        </NumberInput>\r\n                    </InputGroup>\r\n                </FormControl>\r\n                <FormControl id=\"max\">\r\n                    <FormLabel className=\"query__price__label\">Max</FormLabel>\r\n                    <InputGroup>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            fontSize=\"1.2em\"\r\n                            className=\"query__price__placeholder\"\r\n                        >\r\n                            $\r\n                        </InputLeftElement>\r\n                        <NumberInput size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                            <NumberInputField className=\"query__price__input\" />\r\n                            <NumberInputStepper>\r\n                                <NumberIncrementStepper />\r\n                                <NumberDecrementStepper />\r\n                            </NumberInputStepper>\r\n                        </NumberInput>\r\n                    </InputGroup>\r\n                </FormControl> \r\n            </HStack>\r\n            </div>\r\n            <MenuDivider />\r\n            <Flex alignItems=\"center\" style={{padding: \"0 1em\"}}>\r\n                <button className=\"btn btn__none\">Clear All</button>\r\n                <Spacer />\r\n                <button className=\"btn btn__primary btn__sm\">Apply</button>\r\n            </Flex>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PriceQueryForm;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx",["457","458","459","460","461","462","463","464","465","466"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx",["467","468","469","470"],"import {RootStore} from \"./rootstore\";\r\nimport {action, computed, makeObservable, observable, reaction, runInAction} from \"mobx\";\r\nimport {ISignInFormValues, IUser} from \"../../infrastructure/models/auth\";\r\nimport {AuthRequest} from \"../api/agent\";\r\nimport React from \"react\";\r\nimport Alert from \"../common/Alert\";\r\nimport {CloseIcon} from \"../../infrastructure/icons/Icons\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n// -------------------------------------------\r\n// Auth store for all auth actions\r\n// -------------------------------------------\r\n\r\nexport class AuthStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n        reaction(() => this.token, (token) => {\r\n            if(token){\r\n                // set the token value in local storage as soon as the token changes\r\n                localStorage.setItem(\"jwt\", token);\r\n            } else {\r\n                localStorage.removeItem(\"jwt\");\r\n            }\r\n        })\r\n    }\r\n    \r\n    @observable token : string | null = localStorage.getItem(\"jwt\");\r\n    @observable user : IUser | null = null;\r\n\r\n    \r\n    @computed get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    // ------------------------\r\n    // Actions\r\n    // ------------------------\r\n    \r\n    \r\n    // TODO - Login should refresh the page\r\n    @action signInUser = async (signInFormValues: ISignInFormValues) => {\r\n        try{\r\n            const signInResponse = await AuthRequest.signIn(signInFormValues);\r\n            localStorage.setItem(\"jwt\", signInResponse.token);\r\n            runInAction(() => {\r\n                this.user = signInResponse.user;\r\n                this.rootStore.appStore.setAppLoaded();\r\n            })\r\n        } catch(error){\r\n            toast.error(<Alert subject=\"Invalid credentials\" message=\"\" icon={<CloseIcon boxSize={8} color=\"#73000c\" />} type=\"error\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action getCurrentUser = async () => {\r\n        try{\r\n            const authResponse = await AuthRequest.getCurrentUser();\r\n            localStorage.setItem(\"jwt\", authResponse.token);\r\n            runInAction(() => {\r\n                this.user = authResponse.user;\r\n                this.rootStore.appStore.setAppLoaded();\r\n            })\r\n        } catch(error){\r\n            toast.error(<Alert subject=\"Error occurred\" message=\"Problem getting tasks\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} type=\"error\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action logOutUser = () => {\r\n        localStorage.removeItem(\"jwt\");\r\n        this.user = null;\r\n        window.location.reload();\r\n    }\r\n}",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx",["471","472","473","474","475","476"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {ITaskQueryValues, IPaginatedTaskResponse, ITask} from \"../../infrastructure/models/task\";\r\nimport {JobRequest} from \"../api/agent\";\r\nimport {toast} from \"react-toastify\";\r\nimport Alert from \"../common/Alert\";\r\nimport {CheckmarkIcon, CloseIcon} from \"../../infrastructure/icons/Icons\";\r\nimport React from \"react\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\n\r\n//---------------------------------------------------------\r\n// Store for all Job related actions\r\n//---------------------------------------------------------\r\n\r\nexport class TaskStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        makeObservable(this);\r\n        this.rootStore = rootStore;\r\n    }\r\n    \r\n    @observable tasks: IPaginatedTaskResponse | null = null;\r\n    @observable loadingInitial = false;\r\n    @observable taskQueryValues: ITaskQueryValues = {title: \"\", pageNumber: 1, pageSize: 20, maxPrice: 0, minPrice: 0};\r\n    @observable task: ITask | null = null;\r\n    @observable watching = false;\r\n    \r\n    // ------------------------\r\n    // Actions\r\n    // ------------------------\r\n    \r\n    @action getAllJobs = async () => {\r\n        this.loadingInitial = true;\r\n        try{\r\n            const paginatedJobResponse = await JobRequest.getAllTasks(this.taskQueryValues);\r\n            runInAction(() => {\r\n                this.tasks = paginatedJobResponse;\r\n                this.loadingInitial = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Problem loading tasks\" />)\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action setTasksQueryParams = (title?: string, maxPrice?: number, minPrice?: number, pageNumber?: number, pageSize?: number) => {\r\n        this.taskQueryValues.title = title ? title : \"\";\r\n        this.taskQueryValues.maxPrice = maxPrice ? maxPrice : 0;\r\n        this.taskQueryValues.minPrice = minPrice ? minPrice : 0 ; \r\n        this.taskQueryValues.pageNumber = pageNumber ? pageNumber : 1;\r\n        this.taskQueryValues.pageSize = pageSize ? pageSize : 20;\r\n    }\r\n    \r\n    @action getTaskById = async (id: string) => {\r\n        this.loadingInitial = true;\r\n        try{\r\n          const taskResponse = await JobRequest.getTaskById(id);\r\n          runInAction(() => {\r\n              this.task = taskResponse;\r\n              this.loadingInitial = false;\r\n          })\r\n        } catch (error) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Problem loading task\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action watchTask = async (taskId: string) => {\r\n        this.watching = true;\r\n        try{\r\n            await JobRequest.watchTask(taskId);\r\n            await runInAction(async () => {\r\n                if(this.tasks){\r\n                    const watchedTask = await this.tasks.data.find((task) => task.id === taskId);\r\n                    if(watchedTask !== undefined){\r\n                        watchedTask.isWatching = true;\r\n                    }\r\n                }\r\n                if(this.task){\r\n                    this.task.isWatching = true;\r\n                    this.task.watchCount++;\r\n                }\r\n                \r\n                this.watching = false;\r\n            })\r\n        } catch(e){\r\n            runInAction(() => this.watching = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    @action unWatchTask = async (taskId: string) => {\r\n        this.watching = true;\r\n        try{\r\n            await JobRequest.unwatchTask(taskId);\r\n            await runInAction(async () => {\r\n                if(this.tasks){\r\n                    const watchedTask = await this.tasks.data.find((task) => task.id === taskId);\r\n                    if(watchedTask !== undefined){\r\n                        watchedTask.isWatching = false;\r\n                    }\r\n                }\r\n                if(this.task){\r\n                    this.task.isWatching = false;\r\n                    this.task.watchCount--;\r\n                }\r\n\r\n                this.watching = false;\r\n            })\r\n        } catch(e){\r\n            runInAction(() => this.watching = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    \r\n    @action createTask = async (taskSubmission: FormData) => {\r\n        try{\r\n            await JobRequest.createTask(taskSubmission);\r\n            toast.success(<Alert type=\"success\" subject=\"Task created\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"Your task has been created & activated\" />)\r\n        }catch (e) {\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx",["477","478","479"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {IBid, IBidSubmission} from \"../../infrastructure/models/bid\";\r\nimport { toast } from \"react-toastify\";\r\nimport {CheckmarkIcon, CloseIcon} from \"../../infrastructure/icons/Icons\";\r\nimport Alert from \"../common/Alert\";\r\nimport React from \"react\";\r\nimport {BidRequest} from \"../api/agent\";\r\n\r\nexport class BidStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n   @observable bid: IBid | null = null;\r\n   @observable bids: IBid[] | null = null; \r\n   @observable loadingInitialBids = false; \r\n    \r\n    // Actions\r\n    @action createBid = async (values: IBidSubmission, jobId: string) => {\r\n        try{\r\n            const bid = await BidRequest.placeBid(values, jobId);\r\n            runInAction(() => {\r\n                this.bid = bid;\r\n                if(this.rootStore.taskStore.task) {\r\n                    this.rootStore.taskStore.task.bidsCount += 1;\r\n                    this.rootStore.taskStore.task.isBidActive = true;\r\n                }\r\n                if(this.rootStore.bidStore.bids){\r\n                    // find if a bid by the user exists\r\n                    const userBid = this.rootStore.bidStore.bids.find((bid) => bid.userName === this.rootStore.authStore.user!.username);\r\n                    if(userBid){\r\n                        userBid.price = bid.price;\r\n                        userBid.createdAt = bid.createdAt;\r\n                    } else {\r\n                        this.rootStore.bidStore.bids.unshift(bid);\r\n                    }\r\n                }\r\n                toast.success(<Alert type=\"success\" subject=\"Success\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"Successfully placed a bid\" />);\r\n            })\r\n        }catch(error){\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Error occurred while submitting bid\" />);\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action getTaskBids = async (taskId: string) => {\r\n        this.loadingInitialBids = true;\r\n        try{\r\n            const taskBids = await BidRequest.getAllTaskBids(taskId);\r\n            runInAction(() => {\r\n                this.bids = taskBids;\r\n                this.loadingInitialBids = false;\r\n            })\r\n        }catch (error) {\r\n            runInAction(() => this.loadingInitialBids = false);\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Problem loading task bids\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidInfo.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getBidStatus.ts",["480"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskBidItem.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidPageForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\category.ts",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx",["481","482","483","484","485","486"],"﻿import {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    Input, InputGroup,\r\n    InputLeftElement,\r\n    NumberInput, NumberInputField,\r\n    SimpleGrid,\r\n    Stack,\r\n    Textarea\r\n} from \"@chakra-ui/react\";\r\nimport { Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, {lazy, Suspense, useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {StringParam, useQueryParams, NumberParam} from \"use-query-params\";\r\nimport SEO from \"../../application/appLayout/SEO\";\r\nimport {InfoIcon} from \"../../infrastructure/icons/Icons\";\r\nimport TaskFormImageUploader from \"./TaskFormImageUploader\";\r\nimport TaskFormUploadedImagesPreview from \"./TaskFormUploadedImagesPreview\";\r\nimport {DeliveryTypes} from \"../../infrastructure/enums/deliveryTypes\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport {ITaskSubmission} from \"../../infrastructure/models/task\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {history} from \"../../index\";\r\nimport {Category} from \"../../infrastructure/enums/category\";\r\n\r\nconst Preview = lazy(() => import(\"./Preview\"));\r\nconst LocationComponent = lazy(() => import(\"./LocationFinder\"));\r\n\r\nconst TaskDetailsForm = () => {\r\n    const [taskDetails] = useQueryParams({\r\n        title: StringParam,\r\n        category: NumberParam,\r\n        deliveryType: NumberParam\r\n    })\r\n\r\n    const [isPreviewOpen, setIsPreviewOpen] = useState(false);\r\n\r\n    const togglePreviewWindow = useCallback(() => {\r\n        setIsPreviewOpen(!isPreviewOpen)\r\n    }, [isPreviewOpen])\r\n    const closePreviewWindow = useCallback(() => {\r\n        setIsPreviewOpen(false)\r\n    }, [isPreviewOpen]);\r\n\r\n    useEffect(() =>\r\n        window.addEventListener('beforeunload', () => closePreviewWindow())\r\n    );\r\n\r\n   const {createTask} = useContext(rootStoreContext).taskStore;\r\n   \r\n    return (\r\n        <div className=\"container\">\r\n            <SEO title={`${taskDetails.title} for ${taskDetails.category}`} />\r\n            <div className=\"main\">\r\n                <div style={{margin: \"1em 0\"}}>\r\n                    <h1 className=\"text__darker text__bigger__md\">Post your task it&apos;s <span className=\"text__primary\">Fast</span> & <span className=\"text__primary\">Easy</span></h1>\r\n                </div>\r\n                \r\n                <Formik initialValues={{title: taskDetails.title!, id: uuid(), description: \"\", urgent: false, imageFiles: [], address: \"\", postCode: \"\", price: 0, deliveryDate: \"\", category: taskDetails.category!, deliveryType: taskDetails.deliveryType!}} onSubmit={(values: ITaskSubmission, action) => {\r\n                    const taskSubmissionData = new FormData();\r\n                    taskSubmissionData.append(\"id\", values.id);\r\n                    taskSubmissionData.append(\"title\", values.title);\r\n                    taskSubmissionData.append(\"description\", values.description);\r\n                    values.imageFiles.forEach((image) => {\r\n                        taskSubmissionData.append(\"imageFiles\", image);\r\n                    })\r\n                    taskSubmissionData.append(\"address\", values.address);\r\n                    taskSubmissionData.append(\"postCode\", values.postCode);\r\n                    taskSubmissionData.append(\"initialPrice\", values.price.toString());\r\n                    taskSubmissionData.append(\"deliveryDate\", new Date(values.deliveryDate).toUTCString());\r\n                    taskSubmissionData.append(\"category\", values.category.toString());\r\n                    \r\n                    createTask(taskSubmissionData).then(() => history.push(`/task/${values.id}`)).catch(() => action.setSubmitting(false));\r\n                }}>\r\n                    {({\r\n                       handleChange,\r\n                       handleBlur, \r\n                       handleSubmit,\r\n                       values,\r\n                       errors,\r\n                       touched,\r\n                        setFieldValue,\r\n                        setFieldError,\r\n                        isSubmitting\r\n                    }) => (\r\n                        \r\n                    \r\n                <form onSubmit={handleSubmit}>\r\n                    \r\n                <div className=\"form__box\">\r\n                  <div className=\"form__box__description\">\r\n                      <div className=\"numbered__box\">1</div>\r\n                      Task Details\r\n                  </div>\r\n                  <Divider mt={4} mb={4} />  \r\n                  <div className=\"form__field form__task\">\r\n                      <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"15px\", sm: \"8px\"}}>\r\n                          <p className=\"form__detail\">Task title:</p>\r\n                          <div style={{width: \"100%\"}}>\r\n                          <Textarea name=\"title\" className=\"form__textarea form__textarea__no__label\" id=\"title\" rows={3} onChange={handleChange} onBlur={handleBlur} value={values.title} />\r\n                          {errors.title && touched.title && (\r\n                              <small className=\"form__error\">{errors.title}</small>\r\n                          )}\r\n                          </div>\r\n                      </Stack>\r\n                  </div>\r\n                    <div className=\"form__field form__task\">\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Selected Category:</p>\r\n                            <div style={{width: \"100%\"}}>\r\n                            <p className=\"text__darker\">{Category[taskDetails.category!]}</p>\r\n                            <span className=\"text__blue\">change</span>\r\n                            </div>\r\n                        </Stack>\r\n                    </div>\r\n\r\n                    <div className=\"form__field form__task\">\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Description:</p>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <Textarea name=\"description\" className=\"form__textarea form__textarea__no__label\" id=\"title\" rows={7} onChange={handleChange} onBlur={handleBlur} value={values.description} />\r\n                                {errors.description && touched.description ? (\r\n                                    <small className=\"form__error\">{errors.description}</small>\r\n                                ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Be as specific as you can about what needs doing</small>}\r\n                            </div>\r\n                        </Stack>\r\n                    </div>  \r\n\r\n                    <div className=\"form__field form__task\" style={{margin: \"2em 0\"}}>\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Urgency:<span style={{display: \"block\"}}>(Optional)</span></p>\r\n                                \r\n                            <div style={{width: \"100%\"}}>\r\n                                <Checkbox className=\"form__checkbox__bg\" size=\"lg\" colorScheme=\"green\" iconSize=\"2em\" spacing=\"1em\"><div className=\"urgent__label\">URGENT</div>\r\n                                </Checkbox>\r\n                                <div>\r\n                                <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Add an urgent label to let taskers know that you are looking for quick responses</small>\r\n                                </div>\r\n                                 </div>\r\n                        </Stack>\r\n                    </div>\r\n\r\n                    <div className=\"form__field form__task\" >\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Tags:<span style={{display: \"block\"}}>(Optional)</span></p>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <small className=\"text__dark__grey\">Increase your exposure. Enter up to 4 keywords taskers can use to search yout task.</small>\r\n                                \r\n                                <Stack style={{marginTop: \"1em\"}} direction=\"row\" spacing=\"20px\">\r\n                                    <Input style={{width: \"300px\"}} placeholder=\"Add a tag\" className=\"form__input\" />\r\n                                    <Button type=\"button\" style={{fontWeight: 500}} className=\"btn btn__sm btn__primary\">Add tag</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </Stack>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">2</div>\r\n                            Task Media (Optional)\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n                        \r\n                        <h1 className=\"title\">Add photos to imporve the interest on your task</h1>\r\n                        \r\n                        <p className=\"text__silent text__sm text__small__cut\">Add pictures that explain your task or pictures of what you want to be done. You can upload a maximum of 3 photos. The photos are stored in a cloudinary bucket and resize the image to the recommended 618px by 427px ratio. Drag an drop your photos into the given area below.</p>\r\n                        \r\n                        <SimpleGrid style={{margin: \"2em 0\", width: \"100%\"}} templateColumns={{xl: \"1fr 1fr\", lg: \"1fr 1fr\", md: \"1fr\", sm: \"1fr\"}}   spacing=\"20px\">\r\n                            <div>\r\n                        <TaskFormImageUploader setFieldValue={setFieldValue} />\r\n                            </div>\r\n                            <div>\r\n                        <TaskFormUploadedImagesPreview />\r\n                            </div>\r\n                        </SimpleGrid>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">3</div>\r\n                            Task Location\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n                        \r\n                        <div style={{marginBottom: \"1em\"}}>\r\n                            <p className=\"bold__label\">Delivery Type: <span className=\"text__darker\">{DeliveryTypes[taskDetails.deliveryType!]}</span></p>\r\n                            <p className=\"text__blue\">Change</p>\r\n                        </div>\r\n                        {taskDetails.deliveryType! === DeliveryTypes.InPerson ? (\r\n                            <Suspense fallback={<InlineLoader />}>\r\n                                <p className=\"text__darker\">Search and select your address</p>\r\n                                <LocationComponent addressErrors={errors.address} setFieldError={setFieldError} setFieldValue={setFieldValue} values={values} />\r\n                                <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>If you cannot see your address please select online as the delivery type then convey your real address to the runner on messages</small>\r\n                               \r\n                            </Suspense>\r\n                        ) : (\r\n                            <p className=\"text__darker\">This task will be delivered online</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">4</div>\r\n                            Budget & Dates\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n\r\n                        <div className=\"form__field form__task\">\r\n                            <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                                <p className=\"form__detail\">Budget:</p>\r\n                                <div style={{width: \"100%\"}}>\r\n                                    <InputGroup>\r\n                                        <InputLeftElement\r\n                                            pointerEvents=\"none\"\r\n                                            fontSize=\"1.2em\"\r\n                                            className=\"query__price__placeholder__green\"\r\n                                        >\r\n                                            $\r\n                                        </InputLeftElement>\r\n                                        <NumberInput  clampValueOnBlur={false}  size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                                            <NumberInputField name=\"price\" error={!!errors.price && touched.price} value={values.price} onChange={handleChange} onBlur={handleBlur}  className=\"task__price__input\" />\r\n                                        </NumberInput>\r\n                                    </InputGroup> \r\n                                    {errors.price && touched.price ? (\r\n                                        <small className=\"form__error\">{errors.price}</small>\r\n                                    ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Your budget signifies the max amount you can pay, runners will start bidding from that price.</small>}\r\n                                </div>\r\n                            </Stack>\r\n                        </div>\r\n\r\n                        <div className=\"form__field form__task\">\r\n                            <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                                <p className=\"form__detail\">Delivery Date:</p>\r\n                                <div style={{width: \"100%\"}}>\r\n                                    <Input className=\"form__input\" type=\"date\" value={values.deliveryDate} onChange={handleChange} onBlur={handleBlur} name=\"deliveryDate\" min={new Date().toISOString().split(\"T\")[0]} />\r\n                                    {errors.deliveryDate && touched.deliveryDate ? (\r\n                                        <small className=\"form__error\">{errors.deliveryDate}</small>\r\n                                    ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Your task ends on the given date and you will have to re-activate it and set a new date</small>}\r\n                                </div>\r\n                            </Stack>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div style={{margin: \"1em 0\", lineHeight: \"12px\"}}>\r\n                        <small className=\"text__darker text__small__cut\">By listing your task on taskr, you are agreeing to our <span className=\"text__blue\">terms of use, privacy policy</span> and <span className=\"text__blue\">site policies</span>.</small>\r\n                        <small className=\"text__darker text__small__cut\" style={{display: \"block\"}}>Please do not post duplicate tasks.</small>\r\n                    </div>\r\n\r\n                    <Stack direction=\"row\" spacing=\"20px\">\r\n                    <Button isLoading={isSubmitting} className=\"btn btn__primary btn__nm btn__bg btn__shadow \" type=\"submit\">List your task</Button>\r\n                        <Button className=\"btn btn__white btn__nm btn__bg \" type=\"submit\" onClick={togglePreviewWindow}>Preview</Button>\r\n                    </Stack>\r\n                </form>\r\n                    )}\r\n                </Formik>\r\n                \r\n            </div>\r\n            {isPreviewOpen && (\r\n                <Suspense fallback={<InlineLoader />}>\r\n                <Preview closeWindow={closePreviewWindow}>\r\n                    apple\r\n                </Preview>\r\n                </Suspense>\r\n            )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(TaskDetailsForm);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\maps\\FormMap.tsx",["487"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormUploadedImagesPreview.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\deliveryTypes.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\LocationFinder.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\copyStyle.ts",["488","489","490"],"﻿// function to copy style into an external window\r\n// @ts-ignore\r\nexport default function copyStyles(sourceDoc, targetDoc) {\r\n    Array.from(\r\n        sourceDoc.querySelectorAll('link[rel=\"stylesheet\"], style')\r\n    ).forEach((link: any) => {\r\n        targetDoc.head.appendChild(link.cloneNode(true));\r\n    });\r\n}\r\n","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\enumFunctions.tsx",["491","492","493","494","495","496"],"﻿export function getAllEnumKeys(enumType: any){\r\n    return Object.keys(enumType).filter(key => isNaN(Number(key)))\r\n}\r\nexport function getAllEnumValues(enumType: any) {\r\n    return getAllEnumKeys(enumType).map((key: any) => enumType[key])\r\n}\r\nexport function getAllEnumEntries(enumType: any) {\r\n    return getAllEnumKeys(enumType).map((key : any) => [key, enumType[key]])\r\n}   ","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\ProfilePage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\ActiveTasks.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTable.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\taskStatus.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getErrors.tsx",["497","498"],"﻿import {toast} from \"react-toastify\";\r\nimport Alert from \"../../application/common/Alert\";\r\nimport {CloseIcon} from \"../icons/Icons\";\r\nimport React from \"react\";\r\n\r\nexport function alertErrors(errors: any){\r\n    const errorValuesArray = Object.values(errors.response.data.errors);\r\n    errorValuesArray.forEach((err: any) => (\r\n        toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message={err} />)\r\n))\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\profileStore.tsx",["499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\MyProfile.tsx",["515","516"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\AccountBio.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\skill.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Preview.tsx",["517","518"],"﻿import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport copyStyles from \"../../infrastructure/utils/copyStyle\";\r\n\r\nconst Preview = (props: any) => {\r\n    // create a new div element\r\n    const [containerEl] = useState(document.createElement('div'));\r\n    let externalWindow : any = null;\r\n\r\n    useEffect(() => {\r\n        externalWindow = window.open(\r\n            '',\r\n            '',\r\n            `width=1290,height=700,left=200,top=200`\r\n        );\r\n\r\n        copyStyles(document, externalWindow.document);\r\n\r\n        externalWindow.document.body.appendChild(containerEl);\r\n        externalWindow.addEventListener('beforeunload', () => {\r\n            props.closeWindow();\r\n        });\r\n        return function cleanup() {\r\n            externalWindow.close();\r\n            externalWindow = null;\r\n        };\r\n    }, []);\r\n\r\n    return ReactDOM.createPortal(props.children, containerEl);\r\n};\r\n\r\nexport default Preview;\r\n","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ReviewSummary.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Rater.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\TagLine.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\LanguageForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SkillsForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SocialsForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\DescriptionForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileReviews.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\reviews\\TaskrReviews.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Review.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\TaglineForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\NotificationBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotificationAlert.tsx",[],{"ruleId":"519","severity":1,"message":"520","line":3,"column":25,"nodeType":"521","messageId":"522","endLine":3,"endColumn":57},{"ruleId":"519","severity":1,"message":"520","line":13,"column":1,"nodeType":"523","messageId":"522","endLine":13,"endColumn":60},{"ruleId":"519","severity":1,"message":"520","line":6,"column":18,"nodeType":"521","messageId":"522","endLine":6,"endColumn":23},{"ruleId":"519","severity":1,"message":"520","line":4,"column":8,"nodeType":"523","messageId":"522","endLine":4,"endColumn":41},{"ruleId":"519","severity":1,"message":"524","line":4,"column":30,"nodeType":"525","messageId":"526","endLine":4,"endColumn":40},{"ruleId":"519","severity":1,"message":"520","line":56,"column":8,"nodeType":"523","messageId":"522","endLine":56,"endColumn":39},{"ruleId":"519","severity":1,"message":"524","line":56,"column":28,"nodeType":"525","messageId":"526","endLine":56,"endColumn":38},{"ruleId":"519","severity":1,"message":"520","line":103,"column":8,"nodeType":"523","messageId":"522","endLine":103,"endColumn":38},{"ruleId":"519","severity":1,"message":"524","line":103,"column":27,"nodeType":"525","messageId":"526","endLine":103,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":152,"column":8,"nodeType":"523","messageId":"522","endLine":152,"endColumn":43},{"ruleId":"519","severity":1,"message":"524","line":152,"column":32,"nodeType":"525","messageId":"526","endLine":152,"endColumn":42},{"ruleId":"519","severity":1,"message":"520","line":200,"column":8,"nodeType":"523","messageId":"522","endLine":200,"endColumn":44},{"ruleId":"519","severity":1,"message":"524","line":200,"column":33,"nodeType":"525","messageId":"526","endLine":200,"endColumn":43},{"ruleId":"519","severity":1,"message":"520","line":212,"column":8,"nodeType":"523","messageId":"522","endLine":212,"endColumn":43},{"ruleId":"519","severity":1,"message":"524","line":212,"column":32,"nodeType":"525","messageId":"526","endLine":212,"endColumn":42},{"ruleId":"519","severity":1,"message":"520","line":220,"column":8,"nodeType":"523","messageId":"522","endLine":220,"endColumn":36},{"ruleId":"519","severity":1,"message":"524","line":220,"column":25,"nodeType":"525","messageId":"526","endLine":220,"endColumn":35},{"ruleId":"519","severity":1,"message":"520","line":317,"column":8,"nodeType":"523","messageId":"522","endLine":317,"endColumn":41},{"ruleId":"519","severity":1,"message":"524","line":317,"column":30,"nodeType":"525","messageId":"526","endLine":317,"endColumn":40},{"ruleId":"519","severity":1,"message":"520","line":326,"column":8,"nodeType":"523","messageId":"522","endLine":326,"endColumn":41},{"ruleId":"519","severity":1,"message":"524","line":326,"column":30,"nodeType":"525","messageId":"526","endLine":326,"endColumn":40},{"ruleId":"519","severity":1,"message":"520","line":334,"column":8,"nodeType":"523","messageId":"522","endLine":334,"endColumn":39},{"ruleId":"519","severity":1,"message":"524","line":334,"column":28,"nodeType":"525","messageId":"526","endLine":334,"endColumn":38},{"ruleId":"519","severity":1,"message":"520","line":383,"column":8,"nodeType":"523","messageId":"522","endLine":383,"endColumn":40},{"ruleId":"519","severity":1,"message":"524","line":383,"column":29,"nodeType":"525","messageId":"526","endLine":383,"endColumn":39},{"ruleId":"519","severity":1,"message":"520","line":391,"column":8,"nodeType":"523","messageId":"522","endLine":391,"endColumn":45},{"ruleId":"519","severity":1,"message":"524","line":391,"column":34,"nodeType":"525","messageId":"526","endLine":391,"endColumn":44},{"ruleId":"519","severity":1,"message":"520","line":399,"column":8,"nodeType":"523","messageId":"522","endLine":399,"endColumn":37},{"ruleId":"519","severity":1,"message":"524","line":399,"column":26,"nodeType":"525","messageId":"526","endLine":399,"endColumn":36},{"ruleId":"519","severity":1,"message":"520","line":455,"column":8,"nodeType":"523","messageId":"522","endLine":455,"endColumn":38},{"ruleId":"519","severity":1,"message":"524","line":455,"column":27,"nodeType":"525","messageId":"526","endLine":455,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":463,"column":8,"nodeType":"523","messageId":"522","endLine":463,"endColumn":37},{"ruleId":"519","severity":1,"message":"524","line":463,"column":26,"nodeType":"525","messageId":"526","endLine":463,"endColumn":36},{"ruleId":"519","severity":1,"message":"520","line":514,"column":8,"nodeType":"523","messageId":"522","endLine":514,"endColumn":45},{"ruleId":"519","severity":1,"message":"524","line":514,"column":34,"nodeType":"525","messageId":"526","endLine":514,"endColumn":44},{"ruleId":"519","severity":1,"message":"520","line":553,"column":8,"nodeType":"523","messageId":"522","endLine":553,"endColumn":44},{"ruleId":"519","severity":1,"message":"524","line":553,"column":33,"nodeType":"525","messageId":"526","endLine":553,"endColumn":43},{"ruleId":"519","severity":1,"message":"520","line":592,"column":8,"nodeType":"523","messageId":"522","endLine":592,"endColumn":44},{"ruleId":"519","severity":1,"message":"524","line":592,"column":33,"nodeType":"525","messageId":"526","endLine":592,"endColumn":43},{"ruleId":"519","severity":1,"message":"520","line":641,"column":8,"nodeType":"523","messageId":"522","endLine":641,"endColumn":38},{"ruleId":"519","severity":1,"message":"524","line":641,"column":27,"nodeType":"525","messageId":"526","endLine":641,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":649,"column":8,"nodeType":"523","messageId":"522","endLine":649,"endColumn":36},{"ruleId":"519","severity":1,"message":"524","line":649,"column":25,"nodeType":"525","messageId":"526","endLine":649,"endColumn":35},{"ruleId":"519","severity":1,"message":"520","line":693,"column":8,"nodeType":"523","messageId":"522","endLine":693,"endColumn":41},{"ruleId":"519","severity":1,"message":"524","line":693,"column":30,"nodeType":"525","messageId":"526","endLine":693,"endColumn":40},{"ruleId":"519","severity":1,"message":"520","line":753,"column":8,"nodeType":"523","messageId":"522","endLine":753,"endColumn":37},{"ruleId":"519","severity":1,"message":"524","line":753,"column":26,"nodeType":"525","messageId":"526","endLine":753,"endColumn":36},{"ruleId":"519","severity":1,"message":"520","line":800,"column":8,"nodeType":"523","messageId":"522","endLine":800,"endColumn":38},{"ruleId":"519","severity":1,"message":"524","line":800,"column":27,"nodeType":"525","messageId":"526","endLine":800,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":808,"column":8,"nodeType":"523","messageId":"522","endLine":808,"endColumn":37},{"ruleId":"519","severity":1,"message":"524","line":808,"column":26,"nodeType":"525","messageId":"526","endLine":808,"endColumn":36},{"ruleId":"519","severity":1,"message":"520","line":816,"column":8,"nodeType":"523","messageId":"522","endLine":816,"endColumn":42},{"ruleId":"519","severity":1,"message":"524","line":816,"column":31,"nodeType":"525","messageId":"526","endLine":816,"endColumn":41},{"ruleId":"519","severity":1,"message":"520","line":860,"column":8,"nodeType":"523","messageId":"522","endLine":860,"endColumn":49},{"ruleId":"519","severity":1,"message":"524","line":860,"column":38,"nodeType":"525","messageId":"526","endLine":860,"endColumn":48},{"ruleId":"519","severity":1,"message":"520","line":914,"column":8,"nodeType":"523","messageId":"522","endLine":914,"endColumn":41},{"ruleId":"519","severity":1,"message":"524","line":914,"column":30,"nodeType":"525","messageId":"526","endLine":914,"endColumn":40},{"ruleId":"519","severity":1,"message":"520","line":922,"column":8,"nodeType":"523","messageId":"522","endLine":922,"endColumn":37},{"ruleId":"519","severity":1,"message":"524","line":922,"column":26,"nodeType":"525","messageId":"526","endLine":922,"endColumn":36},{"ruleId":"519","severity":1,"message":"520","line":1031,"column":8,"nodeType":"523","messageId":"522","endLine":1031,"endColumn":37},{"ruleId":"519","severity":1,"message":"524","line":1031,"column":26,"nodeType":"525","messageId":"526","endLine":1031,"endColumn":36},{"ruleId":"519","severity":1,"message":"520","line":1072,"column":16,"nodeType":"523","messageId":"522","endLine":1072,"endColumn":46},{"ruleId":"519","severity":1,"message":"524","line":1072,"column":35,"nodeType":"525","messageId":"526","endLine":1072,"endColumn":45},{"ruleId":"519","severity":1,"message":"520","line":1080,"column":8,"nodeType":"523","messageId":"522","endLine":1080,"endColumn":38},{"ruleId":"519","severity":1,"message":"524","line":1080,"column":27,"nodeType":"525","messageId":"526","endLine":1080,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":1144,"column":8,"nodeType":"523","messageId":"522","endLine":1144,"endColumn":36},{"ruleId":"519","severity":1,"message":"524","line":1144,"column":25,"nodeType":"525","messageId":"526","endLine":1144,"endColumn":35},{"ruleId":"519","severity":1,"message":"520","line":1200,"column":8,"nodeType":"523","messageId":"522","endLine":1200,"endColumn":37},{"ruleId":"519","severity":1,"message":"524","line":1200,"column":26,"nodeType":"525","messageId":"526","endLine":1200,"endColumn":36},{"ruleId":"519","severity":1,"message":"520","line":1266,"column":8,"nodeType":"523","messageId":"522","endLine":1266,"endColumn":38},{"ruleId":"519","severity":1,"message":"524","line":1266,"column":27,"nodeType":"525","messageId":"526","endLine":1266,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":1274,"column":8,"nodeType":"523","messageId":"522","endLine":1274,"endColumn":37},{"ruleId":"519","severity":1,"message":"524","line":1274,"column":26,"nodeType":"525","messageId":"526","endLine":1274,"endColumn":36},{"ruleId":"519","severity":1,"message":"520","line":1282,"column":8,"nodeType":"523","messageId":"522","endLine":1282,"endColumn":40},{"ruleId":"519","severity":1,"message":"524","line":1282,"column":29,"nodeType":"525","messageId":"526","endLine":1282,"endColumn":39},{"ruleId":"519","severity":1,"message":"520","line":1330,"column":8,"nodeType":"523","messageId":"522","endLine":1330,"endColumn":42},{"ruleId":"519","severity":1,"message":"524","line":1330,"column":31,"nodeType":"525","messageId":"526","endLine":1330,"endColumn":41},{"ruleId":"519","severity":1,"message":"520","line":1401,"column":8,"nodeType":"523","messageId":"522","endLine":1401,"endColumn":42},{"ruleId":"519","severity":1,"message":"524","line":1401,"column":31,"nodeType":"525","messageId":"526","endLine":1401,"endColumn":41},{"ruleId":"519","severity":1,"message":"520","line":1448,"column":8,"nodeType":"523","messageId":"522","endLine":1448,"endColumn":41},{"ruleId":"519","severity":1,"message":"524","line":1448,"column":30,"nodeType":"525","messageId":"526","endLine":1448,"endColumn":40},{"ruleId":"519","severity":1,"message":"520","line":1542,"column":8,"nodeType":"523","messageId":"522","endLine":1542,"endColumn":43},{"ruleId":"519","severity":1,"message":"524","line":1542,"column":32,"nodeType":"525","messageId":"526","endLine":1542,"endColumn":42},{"ruleId":"519","severity":1,"message":"520","line":1554,"column":8,"nodeType":"523","messageId":"522","endLine":1554,"endColumn":44},{"ruleId":"519","severity":1,"message":"524","line":1554,"column":33,"nodeType":"525","messageId":"526","endLine":1554,"endColumn":43},{"ruleId":"527","severity":1,"message":"528","line":16,"column":25,"nodeType":"529","messageId":"530","endLine":16,"endColumn":43},{"ruleId":"519","severity":1,"message":"520","line":4,"column":22,"nodeType":"521","messageId":"522","endLine":4,"endColumn":27},{"ruleId":"519","severity":1,"message":"520","line":4,"column":16,"nodeType":"523","messageId":"522","endLine":4,"endColumn":33},{"ruleId":"519","severity":1,"message":"531","line":78,"column":21,"nodeType":"525","messageId":"526","endLine":78,"endColumn":32},{"ruleId":"519","severity":1,"message":"520","line":4,"column":24,"nodeType":"521","messageId":"522","endLine":4,"endColumn":29},{"ruleId":"519","severity":1,"message":"520","line":25,"column":47,"nodeType":"521","messageId":"522","endLine":25,"endColumn":52},{"ruleId":"527","severity":1,"message":"528","line":27,"column":40,"nodeType":"529","messageId":"530","endLine":27,"endColumn":71},{"ruleId":"527","severity":1,"message":"528","line":31,"column":71,"nodeType":"529","messageId":"530","endLine":31,"endColumn":102,"suggestions":"532"},{"ruleId":"527","severity":1,"message":"528","line":34,"column":13,"nodeType":"529","messageId":"530","endLine":34,"endColumn":43,"suggestions":"533"},{"ruleId":"519","severity":1,"message":"520","line":43,"column":33,"nodeType":"521","messageId":"522","endLine":43,"endColumn":38},{"ruleId":"527","severity":1,"message":"528","line":44,"column":9,"nodeType":"529","messageId":"530","endLine":44,"endColumn":40,"suggestions":"534"},{"ruleId":"519","severity":1,"message":"520","line":47,"column":28,"nodeType":"521","messageId":"522","endLine":47,"endColumn":33},{"ruleId":"519","severity":1,"message":"520","line":51,"column":32,"nodeType":"521","messageId":"522","endLine":51,"endColumn":47},{"ruleId":"519","severity":1,"message":"535","line":51,"column":33,"nodeType":"525","messageId":"526","endLine":51,"endColumn":43},{"ruleId":"519","severity":1,"message":"520","line":55,"column":34,"nodeType":"521","messageId":"522","endLine":55,"endColumn":39},{"ruleId":"519","severity":1,"message":"520","line":33,"column":5,"nodeType":"536","messageId":"522","endLine":33,"endColumn":31},{"ruleId":"519","severity":1,"message":"520","line":43,"column":26,"nodeType":"521","messageId":"522","endLine":43,"endColumn":72},{"ruleId":"519","severity":1,"message":"520","line":57,"column":30,"nodeType":"521","messageId":"522","endLine":57,"endColumn":41},{"ruleId":"519","severity":1,"message":"520","line":71,"column":26,"nodeType":"521","messageId":"522","endLine":71,"endColumn":31},{"ruleId":"519","severity":1,"message":"520","line":32,"column":26,"nodeType":"521","messageId":"522","endLine":32,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":47,"column":35,"nodeType":"521","messageId":"522","endLine":47,"endColumn":132},{"ruleId":"519","severity":1,"message":"520","line":55,"column":27,"nodeType":"521","messageId":"522","endLine":55,"endColumn":48},{"ruleId":"519","severity":1,"message":"520","line":70,"column":25,"nodeType":"521","messageId":"522","endLine":70,"endColumn":50},{"ruleId":"519","severity":1,"message":"520","line":95,"column":27,"nodeType":"521","messageId":"522","endLine":95,"endColumn":52},{"ruleId":"519","severity":1,"message":"520","line":121,"column":26,"nodeType":"521","messageId":"522","endLine":121,"endColumn":61},{"ruleId":"519","severity":1,"message":"520","line":22,"column":25,"nodeType":"521","messageId":"522","endLine":22,"endColumn":73},{"ruleId":"527","severity":1,"message":"528","line":33,"column":97,"nodeType":"529","messageId":"530","endLine":33,"endColumn":127,"suggestions":"537"},{"ruleId":"519","severity":1,"message":"520","line":49,"column":27,"nodeType":"521","messageId":"522","endLine":49,"endColumn":52},{"ruleId":"519","severity":1,"message":"520","line":1,"column":22,"nodeType":"521","messageId":"522","endLine":1,"endColumn":38},{"ruleId":"527","severity":1,"message":"528","line":61,"column":48,"nodeType":"529","messageId":"530","endLine":61,"endColumn":66},{"ruleId":"527","severity":1,"message":"528","line":61,"column":193,"nodeType":"529","messageId":"530","endLine":61,"endColumn":214},{"ruleId":"527","severity":1,"message":"528","line":61,"column":230,"nodeType":"529","messageId":"530","endLine":61,"endColumn":255},{"ruleId":"527","severity":1,"message":"528","line":113,"column":67,"nodeType":"529","messageId":"530","endLine":113,"endColumn":88},{"ruleId":"527","severity":1,"message":"528","line":191,"column":117,"nodeType":"529","messageId":"530","endLine":191,"endColumn":142},{"ruleId":"527","severity":1,"message":"528","line":194,"column":26,"nodeType":"529","messageId":"530","endLine":194,"endColumn":51},{"ruleId":"527","severity":1,"message":"528","line":17,"column":24,"nodeType":"529","messageId":"530","endLine":17,"endColumn":45},{"ruleId":"519","severity":1,"message":"520","line":3,"column":16,"nodeType":"523","messageId":"522","endLine":3,"endColumn":57},{"ruleId":"519","severity":1,"message":"538","line":3,"column":36,"nodeType":"525","messageId":"539","endLine":3,"endColumn":45},{"ruleId":"519","severity":1,"message":"540","line":3,"column":47,"nodeType":"525","messageId":"539","endLine":3,"endColumn":56},{"ruleId":"519","severity":1,"message":"520","line":1,"column":8,"nodeType":"523","messageId":"522","endLine":1,"endColumn":46},{"ruleId":"519","severity":1,"message":"541","line":1,"column":32,"nodeType":"525","messageId":"526","endLine":1,"endColumn":45},{"ruleId":"519","severity":1,"message":"520","line":4,"column":8,"nodeType":"523","messageId":"522","endLine":4,"endColumn":48},{"ruleId":"519","severity":1,"message":"541","line":4,"column":34,"nodeType":"525","messageId":"526","endLine":4,"endColumn":47},{"ruleId":"519","severity":1,"message":"520","line":7,"column":8,"nodeType":"523","messageId":"522","endLine":7,"endColumn":49},{"ruleId":"519","severity":1,"message":"541","line":7,"column":35,"nodeType":"525","messageId":"526","endLine":7,"endColumn":48},{"ruleId":"519","severity":1,"message":"520","line":6,"column":8,"nodeType":"523","messageId":"522","endLine":6,"endColumn":41},{"ruleId":"519","severity":1,"message":"542","line":6,"column":29,"nodeType":"525","messageId":"526","endLine":6,"endColumn":40},{"ruleId":"519","severity":1,"message":"520","line":32,"column":31,"nodeType":"521","messageId":"522","endLine":32,"endColumn":64},{"ruleId":"519","severity":1,"message":"520","line":56,"column":37,"nodeType":"521","messageId":"522","endLine":56,"endColumn":48},{"ruleId":"519","severity":1,"message":"520","line":71,"column":36,"nodeType":"521","messageId":"522","endLine":71,"endColumn":61},{"ruleId":"527","severity":1,"message":"528","line":75,"column":17,"nodeType":"529","messageId":"530","endLine":75,"endColumn":37,"suggestions":"543"},{"ruleId":"519","severity":1,"message":"520","line":84,"column":39,"nodeType":"521","messageId":"522","endLine":84,"endColumn":67},{"ruleId":"527","severity":1,"message":"528","line":88,"column":17,"nodeType":"529","messageId":"530","endLine":88,"endColumn":37,"suggestions":"544"},{"ruleId":"519","severity":1,"message":"520","line":97,"column":33,"nodeType":"521","messageId":"522","endLine":97,"endColumn":55},{"ruleId":"519","severity":1,"message":"531","line":97,"column":40,"nodeType":"525","messageId":"526","endLine":97,"endColumn":51},{"ruleId":"527","severity":1,"message":"528","line":102,"column":21,"nodeType":"529","messageId":"530","endLine":102,"endColumn":41,"suggestions":"545"},{"ruleId":"527","severity":1,"message":"528","line":105,"column":21,"nodeType":"529","messageId":"530","endLine":105,"endColumn":41,"suggestions":"546"},{"ruleId":"519","severity":1,"message":"520","line":117,"column":29,"nodeType":"521","messageId":"522","endLine":117,"endColumn":56},{"ruleId":"527","severity":1,"message":"528","line":122,"column":21,"nodeType":"529","messageId":"530","endLine":122,"endColumn":41,"suggestions":"547"},{"ruleId":"527","severity":1,"message":"528","line":125,"column":21,"nodeType":"529","messageId":"530","endLine":125,"endColumn":41,"suggestions":"548"},{"ruleId":"527","severity":1,"message":"528","line":128,"column":21,"nodeType":"529","messageId":"530","endLine":128,"endColumn":41,"suggestions":"549"},{"ruleId":"527","severity":1,"message":"528","line":131,"column":21,"nodeType":"529","messageId":"530","endLine":131,"endColumn":41,"suggestions":"550"},{"ruleId":"519","severity":1,"message":"520","line":142,"column":36,"nodeType":"521","messageId":"522","endLine":142,"endColumn":74},{"ruleId":"551","severity":2,"message":"552","line":10,"column":8,"nodeType":"525","messageId":"553","endLine":10,"endColumn":22},{"ruleId":"554","severity":2,"message":"555","line":32,"column":26,"nodeType":"556","endLine":32,"endColumn":40},{"ruleId":"519","severity":1,"message":"520","line":5,"column":17,"nodeType":"521","messageId":"522","endLine":5,"endColumn":32},{"ruleId":"519","severity":1,"message":"524","line":5,"column":18,"nodeType":"525","messageId":"526","endLine":5,"endColumn":28},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","Argument 'props' should be typed with a non-any type.","Identifier","anyTypedArg","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","Argument 'values' should be typed with a non-any type.",["557"],["558"],["559"],"Argument 'files' should be typed with a non-any type.","FunctionExpression",["560"],"Argument 'sourceDoc' should be typed.","missingArgType","Argument 'targetDoc' should be typed.","Argument 'enumType' should be typed with a non-any type.","Argument 'errors' should be typed with a non-any type.",["561"],["562"],["563"],["564"],["565"],["566"],["567"],["568"],"@typescript-eslint/no-unused-vars","'ProfileSummary' is defined but never used. Allowed unused vars must match /^jsx$/u.","unusedVar","react/jsx-no-undef","'ProfileReviews' is not defined.","JSXIdentifier",{"messageId":"569","fix":"570","desc":"571"},{"messageId":"569","fix":"572","desc":"571"},{"messageId":"569","fix":"573","desc":"571"},{"messageId":"569","fix":"574","desc":"571"},{"messageId":"569","fix":"575","desc":"571"},{"messageId":"569","fix":"576","desc":"571"},{"messageId":"569","fix":"577","desc":"571"},{"messageId":"569","fix":"578","desc":"571"},{"messageId":"569","fix":"579","desc":"571"},{"messageId":"569","fix":"580","desc":"571"},{"messageId":"569","fix":"581","desc":"571"},{"messageId":"569","fix":"582","desc":"571"},"suggestOptionalChain",{"range":"583","text":"584"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"585","text":"584"},{"range":"586","text":"584"},{"range":"587","text":"584"},{"range":"588","text":"584"},{"range":"589","text":"584"},{"range":"590","text":"584"},{"range":"591","text":"584"},{"range":"592","text":"584"},{"range":"593","text":"584"},{"range":"594","text":"584"},{"range":"595","text":"584"},[1341,1342],"?",[1504,1505],[1867,1868],[1400,1401],[2824,2825],[3322,3323],[3855,3856],[3979,3980],[4544,4545],[4678,4679],[4815,4816],[4951,4952]]