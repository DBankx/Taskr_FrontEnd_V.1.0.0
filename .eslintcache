[{"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx":"1","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx":"2","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx":"3","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\PublicProfilePage.tsx":"4","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx":"5","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\InboxPage.tsx":"6","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx":"7","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx":"8","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\chatStore.tsx":"9","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\PublicProfileStore.tsx":"10","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx":"11","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx":"12","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidInfo.tsx":"13","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\LocationFinder.tsx":"14","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormUploadedImagesPreview.tsx":"15","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx":"16","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePagePlaceholder.tsx":"17","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\ReceiverProfile.tsx":"18","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottom.tsx":"19","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\ProfileSettingsPage.tsx":"20","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotificationAlert.tsx":"21","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx":"22","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\TaskStatus.tsx":"23","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageTopBox.tsx":"24","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\CompletedOrders.tsx":"25","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx":"26","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCardSlider.tsx":"27","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myWatchlist\\WatchlistPage.tsx":"28","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\AccountBio.tsx":"29","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTable.tsx":"30","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\OrdersPage.tsx":"31","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx":"32","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx":"33","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx":"34","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\orderStore.tsx":"35","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx":"36","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\category.ts":"37","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx":"38","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\Orders.tsx":"39","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx":"40","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\enumFunctions.tsx":"41","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\orderStatus.ts":"42","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx":"43","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\copyStyle.ts":"44","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\reviews\\ReviewPane.tsx":"45","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\account\\AccountTab.tsx":"46","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\PayoutOrders.tsx":"47","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx":"48","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPage.tsx":"49","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\TaglineForm.tsx":"50","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx":"51","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx":"52","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\profileStore.tsx":"53","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTab.tsx":"54","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskSection.tsx":"55","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\RunnerChatTab.tsx":"56","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx":"57","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityTab.tsx":"58","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\MessageBodyContainer.tsx":"59","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\TagLine.tsx":"60","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidModalDetails.tsx":"61","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SkillsForm.tsx":"62","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Review.tsx":"63","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx":"64","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx":"65","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx":"66","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskAssignedDetails.tsx":"67","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\MyProfile.tsx":"68","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\ProfileReviews\\ProfileReviews.tsx":"69","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getErrors.tsx":"70","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx":"71","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileReviews.tsx":"72","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BillingInformation.tsx":"73","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatBox.tsx":"74","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SocialsForm.tsx":"75","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx":"76","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx":"77","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx":"78","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts":"79","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx":"80","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCard.tsx":"81","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskMobile.tsx":"82","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\ProfileTasksPane.tsx":"83","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\PrivateRoute.tsx":"84","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx":"85","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx":"86","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\OrderDetails.tsx":"87","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTop.tsx":"88","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\TaskrChatTab.tsx":"89","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\notification.ts":"90","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx":"91","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidPageForm.tsx":"92","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatContainer.tsx":"93","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderActivity.tsx":"94","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\ActiveOrders.tsx":"95","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx":"96","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx":"97","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotFound.tsx":"98","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx":"99","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts":"100","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\taskStatus.ts":"101","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx":"102","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderInfoDetails.tsx":"103","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\DescriptionForm.tsx":"104","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BankAccountForm.tsx":"105","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\MapModal.tsx":"106","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx":"107","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx":"108","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTopPlaceholder.tsx":"109","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageInput.tsx":"110","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\TextMessage.tsx":"111","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageBox.tsx":"112","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityForm.tsx":"113","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signup\\SignUpPage.tsx":"114","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signup\\SignUpForm.tsx":"115","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx":"116","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx":"117","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signup\\AwatingConfirmationMail.tsx":"118","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts":"119","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signup\\ConfirmEmail.tsx":"120"},{"size":4888,"mtime":1616100823604,"results":"121","hashOfConfig":"122"},{"size":4346,"mtime":1616770838592,"results":"123","hashOfConfig":"122"},{"size":5965,"mtime":1616093555685,"results":"124","hashOfConfig":"122"},{"size":2787,"mtime":1616075740129,"results":"125","hashOfConfig":"122"},{"size":4269,"mtime":1616493090980,"results":"126","hashOfConfig":"122"},{"size":1217,"mtime":1613910425530,"results":"127","hashOfConfig":"122"},{"size":2258,"mtime":1616698234839,"results":"128","hashOfConfig":"122"},{"size":2236,"mtime":1613832001162,"results":"129","hashOfConfig":"122"},{"size":5820,"mtime":1614884528377,"results":"130","hashOfConfig":"122"},{"size":2670,"mtime":1616074604765,"results":"131","hashOfConfig":"122"},{"size":4962,"mtime":1615921973122,"results":"132","hashOfConfig":"122"},{"size":1597,"mtime":1616100946979,"results":"133","hashOfConfig":"122"},{"size":3616,"mtime":1615667089685,"results":"134","hashOfConfig":"122"},{"size":3904,"mtime":1611054324932,"results":"135","hashOfConfig":"122"},{"size":1471,"mtime":1610721239863,"results":"136","hashOfConfig":"122"},{"size":5733,"mtime":1616130068951,"results":"137","hashOfConfig":"122"},{"size":2423,"mtime":1613910108980,"results":"138","hashOfConfig":"122"},{"size":1602,"mtime":1613853723712,"results":"139","hashOfConfig":"122"},{"size":1986,"mtime":1613121278494,"results":"140","hashOfConfig":"122"},{"size":2278,"mtime":1612943743947,"results":"141","hashOfConfig":"122"},{"size":2410,"mtime":1615053402938,"results":"142","hashOfConfig":"122"},{"size":4622,"mtime":1613513375176,"results":"143","hashOfConfig":"122"},{"size":636,"mtime":1615666356362,"results":"144","hashOfConfig":"122"},{"size":951,"mtime":1613853246435,"results":"145","hashOfConfig":"122"},{"size":4304,"mtime":1615761352256,"results":"146","hashOfConfig":"122"},{"size":738,"mtime":1610275409302,"results":"147","hashOfConfig":"122"},{"size":1779,"mtime":1613215523315,"results":"148","hashOfConfig":"122"},{"size":7616,"mtime":1614693487636,"results":"149","hashOfConfig":"122"},{"size":7329,"mtime":1611859840620,"results":"150","hashOfConfig":"122"},{"size":6045,"mtime":1616071076189,"results":"151","hashOfConfig":"122"},{"size":1455,"mtime":1614889198950,"results":"152","hashOfConfig":"122"},{"size":2386,"mtime":1613857862507,"results":"153","hashOfConfig":"122"},{"size":4679,"mtime":1614422183756,"results":"154","hashOfConfig":"122"},{"size":4183,"mtime":1616771922887,"results":"155","hashOfConfig":"122"},{"size":6823,"mtime":1615816745264,"results":"156","hashOfConfig":"122"},{"size":2177,"mtime":1616084205339,"results":"157","hashOfConfig":"122"},{"size":133,"mtime":1611141765490,"results":"158","hashOfConfig":"122"},{"size":271,"mtime":1609353715022,"results":"159","hashOfConfig":"122"},{"size":2006,"mtime":1615816515256,"results":"160","hashOfConfig":"122"},{"size":101702,"mtime":1616094818972,"results":"161","hashOfConfig":"122"},{"size":380,"mtime":1611148501315,"results":"162","hashOfConfig":"122"},{"size":126,"mtime":1614934633580,"results":"163","hashOfConfig":"122"},{"size":2515,"mtime":1616007397068,"results":"164","hashOfConfig":"122"},{"size":318,"mtime":1611077557281,"results":"165","hashOfConfig":"122"},{"size":1652,"mtime":1616075102703,"results":"166","hashOfConfig":"122"},{"size":2430,"mtime":1612895732709,"results":"167","hashOfConfig":"122"},{"size":4290,"mtime":1615761360116,"results":"168","hashOfConfig":"122"},{"size":1895,"mtime":1612882184524,"results":"169","hashOfConfig":"122"},{"size":5518,"mtime":1615053530905,"results":"170","hashOfConfig":"122"},{"size":1621,"mtime":1611859810799,"results":"171","hashOfConfig":"122"},{"size":3929,"mtime":1610816256671,"results":"172","hashOfConfig":"122"},{"size":4573,"mtime":1615924628879,"results":"173","hashOfConfig":"122"},{"size":8688,"mtime":1615494117505,"results":"174","hashOfConfig":"122"},{"size":1871,"mtime":1616070092866,"results":"175","hashOfConfig":"122"},{"size":1126,"mtime":1613325377750,"results":"176","hashOfConfig":"122"},{"size":1510,"mtime":1613831547278,"results":"177","hashOfConfig":"122"},{"size":2363,"mtime":1612511548568,"results":"178","hashOfConfig":"122"},{"size":1432,"mtime":1612971374189,"results":"179","hashOfConfig":"122"},{"size":1025,"mtime":1613828307361,"results":"180","hashOfConfig":"122"},{"size":1111,"mtime":1611859887411,"results":"181","hashOfConfig":"122"},{"size":6588,"mtime":1614454040395,"results":"182","hashOfConfig":"122"},{"size":3081,"mtime":1611859788799,"results":"183","hashOfConfig":"122"},{"size":1587,"mtime":1615760628854,"results":"184","hashOfConfig":"122"},{"size":1624,"mtime":1616097620391,"results":"185","hashOfConfig":"122"},{"size":588,"mtime":1610965734551,"results":"186","hashOfConfig":"122"},{"size":2902,"mtime":1613858003828,"results":"187","hashOfConfig":"122"},{"size":2382,"mtime":1615666308199,"results":"188","hashOfConfig":"122"},{"size":1836,"mtime":1616075971771,"results":"189","hashOfConfig":"122"},{"size":1995,"mtime":1616075493092,"results":"190","hashOfConfig":"122"},{"size":468,"mtime":1610361256727,"results":"191","hashOfConfig":"122"},{"size":647,"mtime":1609418891029,"results":"192","hashOfConfig":"122"},{"size":1109,"mtime":1615759688926,"results":"193","hashOfConfig":"122"},{"size":2111,"mtime":1615494734214,"results":"194","hashOfConfig":"122"},{"size":2652,"mtime":1614075470760,"results":"195","hashOfConfig":"122"},{"size":6730,"mtime":1611859822550,"results":"196","hashOfConfig":"122"},{"size":16610,"mtime":1616007068334,"results":"197","hashOfConfig":"122"},{"size":3417,"mtime":1615990314194,"results":"198","hashOfConfig":"122"},{"size":3474,"mtime":1616007938731,"results":"199","hashOfConfig":"122"},{"size":11844,"mtime":1616745219380,"results":"200","hashOfConfig":"122"},{"size":6855,"mtime":1616011773498,"results":"201","hashOfConfig":"122"},{"size":2681,"mtime":1616019858394,"results":"202","hashOfConfig":"122"},{"size":3287,"mtime":1616069223058,"results":"203","hashOfConfig":"122"},{"size":1924,"mtime":1616069887297,"results":"204","hashOfConfig":"122"},{"size":673,"mtime":1616081837115,"results":"205","hashOfConfig":"122"},{"size":3259,"mtime":1614522817603,"results":"206","hashOfConfig":"122"},{"size":4188,"mtime":1613917675818,"results":"207","hashOfConfig":"122"},{"size":7892,"mtime":1615817093747,"results":"208","hashOfConfig":"122"},{"size":4182,"mtime":1613202306047,"results":"209","hashOfConfig":"122"},{"size":1463,"mtime":1613597120540,"results":"210","hashOfConfig":"122"},{"size":164,"mtime":1615053290690,"results":"211","hashOfConfig":"122"},{"size":1038,"mtime":1609509530471,"results":"212","hashOfConfig":"122"},{"size":3196,"mtime":1610305391187,"results":"213","hashOfConfig":"122"},{"size":1136,"mtime":1613641459235,"results":"214","hashOfConfig":"122"},{"size":11630,"mtime":1615814935428,"results":"215","hashOfConfig":"122"},{"size":4141,"mtime":1615761304607,"results":"216","hashOfConfig":"122"},{"size":347,"mtime":1610565679053,"results":"217","hashOfConfig":"122"},{"size":2524,"mtime":1616082596016,"results":"218","hashOfConfig":"122"},{"size":972,"mtime":1616094842605,"results":"219","hashOfConfig":"122"},{"size":873,"mtime":1612638913198,"results":"220","hashOfConfig":"122"},{"size":655,"mtime":1612250232817,"results":"221","hashOfConfig":"122"},{"size":87,"mtime":1611321195156,"results":"222","hashOfConfig":"122"},{"size":2777,"mtime":1612599809177,"results":"223","hashOfConfig":"122"},{"size":7413,"mtime":1615761786925,"results":"224","hashOfConfig":"122"},{"size":1691,"mtime":1611859825856,"results":"225","hashOfConfig":"122"},{"size":6077,"mtime":1615493783220,"results":"226","hashOfConfig":"122"},{"size":1653,"mtime":1616145118383,"results":"227","hashOfConfig":"122"},{"size":234,"mtime":1609429211018,"results":"228","hashOfConfig":"122"},{"size":1010,"mtime":1610444548705,"results":"229","hashOfConfig":"122"},{"size":574,"mtime":1613116335194,"results":"230","hashOfConfig":"122"},{"size":2118,"mtime":1613719217234,"results":"231","hashOfConfig":"122"},{"size":1475,"mtime":1613664673210,"results":"232","hashOfConfig":"122"},{"size":944,"mtime":1613689650142,"results":"233","hashOfConfig":"122"},{"size":5151,"mtime":1612970242407,"results":"234","hashOfConfig":"122"},{"size":4789,"mtime":1616702370677,"results":"235","hashOfConfig":"122"},{"size":25757,"mtime":1616751585352,"results":"236","hashOfConfig":"122"},{"size":1144,"mtime":1610306281019,"results":"237","hashOfConfig":"122"},{"size":248,"mtime":1609352810131,"results":"238","hashOfConfig":"122"},{"size":1334,"mtime":1616750396191,"results":"239","hashOfConfig":"122"},{"size":425,"mtime":1607677411935,"results":"240","hashOfConfig":"122"},{"size":1938,"mtime":1616772150495,"results":"241","hashOfConfig":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"245"},"1bnsgpt",{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"256"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"282"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"267"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"256"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"256"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"256"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":100,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"256"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"279"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"256"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"300"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"267"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"463"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"307"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"307"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"307"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx",["512","513","514","515","516","517","518","519","520","521"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport QueryActions from \"./QueryActions\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport QueryBody from \"./QueryBody\";\r\nimport {NumberParam, StringParam, useQueryParams} from \"use-query-params\";\r\nimport {Box, Center, Tag, TagCloseButton, TagLabel, Image} from \"@chakra-ui/react\";\r\nimport {Category} from \"../../infrastructure/enums/category\";\r\nimport {DeliveryTypes} from \"../../infrastructure/enums/deliveryTypes\";\r\nimport SEO from \"../../application/appLayout/SEO\";\r\nimport notFoundImage from \"../../assets/images/undraw_page_not_found_su7k.svg\";\r\nimport {IdeaIcon} from \"../../infrastructure/icons/Icons\";\r\nimport SoftAlert from \"../../application/common/SoftAlert\";\r\n\r\nconst QueryPage = () => {\r\n    const {loadingInitial, tasks, getAllJobs, taskQueryValues, setTasksQueryParams} = useContext(rootStoreContext).taskStore;\r\n    const {isLoggedIn} = useContext(rootStoreContext).authStore;\r\n    const [queryParams, setParams] = useQueryParams({\r\n        title: StringParam,\r\n        deliveryType: NumberParam,\r\n        category: NumberParam,\r\n        sortBy: StringParam,\r\n        minPrice: NumberParam,\r\n        maxPrice: NumberParam,\r\n        pageSize: NumberParam,\r\n        pageNumber: NumberParam\r\n    }) \r\n    \r\n    setTasksQueryParams(queryParams.title!, queryParams.maxPrice!, queryParams.minPrice!, queryParams.pageNumber!, queryParams.pageSize!, queryParams.sortBy!, queryParams.category!, queryParams.deliveryType!);\r\n    useEffect(() => {\r\n        getAllJobs();\r\n    }, [getAllJobs, taskQueryValues, queryParams])\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <SEO title={`search results for ${queryParams.title}`} />\r\n            <div className=\"main\">\r\n                <div>\r\n                    <Box>\r\n                        {!isLoggedIn && <SoftAlert icon={<IdeaIcon color=\"#719FF1\" boxSize={10} />} message=\"See a task you can complete? or Post a task and have runners complete it for you? Register or login now to access them\" />}\r\n                    </Box>\r\n                    \r\n                    {queryParams.title && <h1 className=\"text__lg\">Results for {`\"${queryParams.title}\"`}</h1>}\r\n                    <div className=\"query__body\">\r\n                    <QueryActions />\r\n                        {loadingInitial || tasks === null ? <InlineLoader /> : (\r\n                            <div>\r\n                                <Box mt={8}>\r\n                                    <ul className=\"profile__skill__list\">\r\n                                        {Object.entries(queryParams).map(([queryParam, queryKey], index) => (\r\n                                            queryKey !== undefined && queryParam !== \"pageSize\" && queryParam !== \"pageNumber\" && <Tag\r\n                                                size=\"lg\"\r\n                                                key={index}\r\n                                                borderRadius=\"full\"\r\n                                                variant=\"solid\"\r\n                                                className=\"filter__tags\"\r\n                                            >\r\n                                                <TagLabel>{queryParam === \"category\" && typeof(queryKey) === \"number\" ? Category[queryKey!] : queryParam === \"deliveryType\" && typeof(queryKey) === \"number\" ? DeliveryTypes[queryKey!] : queryParam === \"minPrice\" || queryParam === \"maxPrice\" ? `$${queryKey}` :  queryKey}</TagLabel>\r\n                                                <TagCloseButton onClick={() => setParams({...queryParams, [queryParam]: undefined})} />\r\n                                            </Tag> \r\n                                        ))}\r\n                                    </ul>\r\n                                </Box>\r\n                                {tasks.data.length > 0 ? <QueryBody tasks={tasks} taskQueryValues={taskQueryValues}/> : (\r\n                                    <Center mt=\"2em\">\r\n                                        <Box>\r\n                                            <Center><Image src={notFoundImage} alt=\"404\" maxW=\"600px\" width=\"80%\"/></Center>\r\n                                            <Center mt={5}><h1 className=\"text__lg\">No task was found for your search</h1></Center>\r\n                                            <Center><p className=\"text__md text__darker\">Try new search or post a task now</p></Center>\r\n                                        </Box>\r\n                                    </Center>\r\n                                )}\r\n                            </div>\r\n                        )} \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(QueryPage);",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\PublicProfilePage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\InboxPage.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx",["522","523","524","525","526","527","528","529","530","531"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable} from \"mobx\";\r\nimport React from \"react\";\r\nimport {HubConnection, HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\";\r\nimport {INotification} from \"../../infrastructure/models/notification\";\r\nimport {toast} from \"react-toastify\";\r\nimport NotificationAlert from \"../common/NotificationAlert\";\r\n\r\n//-----------------------------------------------\r\n// General store for application\r\n//------------------------------------------------\r\n\r\nexport class AppStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable.ref notificationHubConnection : HubConnection | null = null;\r\n    @observable appLoaded = false;\r\n    @observable uploadedTaskFormFiles : any[] = [];\r\n    \r\n    \r\n    @action createNotificationHubConnection = () => {\r\n        this.notificationHubConnection = new HubConnectionBuilder().withUrl(\"https://localhost:44351/notif\", {\r\n            accessTokenFactory : () => this.rootStore.authStore.token!\r\n        }).configureLogging(LogLevel.Information).withAutomaticReconnect().build();\r\n        \r\n        // start the connection\r\n        this.notificationHubConnection.start().then(() => console.log(this.notificationHubConnection!.state))\r\n        \r\n        this.notificationHubConnection.on(\"ReceiveNotification\", (notification: INotification) => {\r\n            this.rootStore.authStore.user!.hasUnReadNotifications = true;\r\n                toast(<NotificationAlert data={notification} />, {\r\n                    position: \"top-right\",\r\n                    className: \"notification\",\r\n                    hideProgressBar: true,\r\n                })\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n   \r\n    \r\n    @action stopHubConnection = () => {\r\n        this.notificationHubConnection!.stop().catch((err) => console.log(err));\r\n    }\r\n    \r\n    @action setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n    \r\n    @action setPreviewImages = (files: any) => {\r\n        this.uploadedTaskFormFiles = files;\r\n    }\r\n    \r\n   @action removePreviewImages = () => {\r\n        this.uploadedTaskFormFiles = [];\r\n   } \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\chatStore.tsx",["532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\PublicProfileStore.tsx",["561","562","563"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {IPublicProfile} from \"../../infrastructure/models/profile\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\nimport {PublicProfileRequest} from \"../api/agent\";\r\nimport {ITask} from \"../../infrastructure/models/task\";\r\nimport { IReview } from \"../../infrastructure/models/order\";\r\n\r\nexport class PublicProfileStore {\r\n    rootStore: RootStore\r\n\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable loadingProfileDetails  = false;\r\n    @observable publicProfileDetails : IPublicProfile | null = null;\r\n    @observable publicProfileTasks : ITask[] | null = null;\r\n    @observable loadingProfileTasks = false;\r\n    @observable loadingReviews = false;\r\n    @observable reviews : IReview[] | null = null;\r\n    \r\n    @action getPublicProfileDetails = async (userId: string) => {\r\n        this.loadingProfileDetails = true;\r\n        try{\r\n            const details = await PublicProfileRequest.getPublicProfileDetails(userId);\r\n            runInAction(() => {\r\n                this.publicProfileDetails = details;\r\n                if(this.rootStore.authStore.user?.id === this.publicProfileDetails.id){\r\n                    this.publicProfileDetails.isUser = true;\r\n                }\r\n                this.loadingProfileDetails = false;\r\n            })\r\n        }catch (e) {\r\n           runInAction(() => this.loadingProfileDetails = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action getPublicProfileTasks = async (userId: string) => {\r\n        this.loadingProfileTasks = true;\r\n        try{\r\n            const tasks = await PublicProfileRequest.getPublicProfileTasks(userId);\r\n            runInAction(() => {\r\n                this.publicProfileTasks = tasks;\r\n                this.loadingProfileTasks = false;\r\n            })\r\n        }catch (e) {\r\n           runInAction(() => this.loadingProfileTasks = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action getUserReveiws = async (userId: string, predicate: string) => {\r\n        this.loadingReviews = true;\r\n        try{\r\n            const reviews = await PublicProfileRequest.getUserReviews(userId, predicate);\r\n            runInAction(() => {\r\n                this.reviews = reviews;\r\n                this.loadingReviews = false;\r\n            })\r\n        }catch (error){\r\n            runInAction(() => this.loadingReviews = false);\r\n            alertErrors(error);\r\n            throw error;\r\n        }\r\n    }\r\n}",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidInfo.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\LocationFinder.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormUploadedImagesPreview.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePagePlaceholder.tsx",["564"],"﻿import React from \"react\";\r\nimport {Box, SimpleGrid, StackDivider, useMediaQuery, VStack, Skeleton, HStack, Spinner} from \"@chakra-ui/react\";\r\n\r\nconst MessagePagePlaceholder = () => {\r\n    const [isMobile] = useMediaQuery(\"(max-width: 600px)\");\r\n    return (\r\n        <Box>\r\n            <Box style={{marginTop: isMobile ? \"1em\" : \"3em\"}}>\r\n                <SimpleGrid templateColumns={{xl: \"2fr 0.8fr\", lg: \"2fr 1fr\"}} spacing=\"20px\" >\r\n                    <Box>\r\n                    <VStack\r\n                        divider={<StackDivider borderColor=\"gray.200\" />}\r\n                        spacing={0}\r\n                        align=\"stretch\"\r\n                        className=\"task__bid__form__card no__padding message__container\"\r\n                    >\r\n                        <Box className=\"message__top\">\r\n                            <HStack spacing=\"20px\">\r\n                                <Skeleton height=\"70px\" width=\"20%\" />\r\n                                <Box style={{width: \"100%\"}}>\r\n                                    <Skeleton width=\"80%\" mb={6} height=\"20px\" />\r\n                                    <Skeleton width=\"30%\" height=\"20px\" />\r\n                                </Box>\r\n                            </HStack>\r\n                        </Box>\r\n                        <Box className=\"message__body\">\r\n                            <Box className=\"middle_position\">\r\n                                <Spinner color=\"brand.100\" size=\"xl\" />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box className=\"message__bottom\">\r\n                            <Box className=\"message__input__box\">\r\n                            <Skeleton width=\"100%\" height=\"50px\" />\r\n                            </Box>\r\n                        </Box>\r\n                    </VStack>\r\n                    </Box>\r\n                    \r\n                    <Box className=\"task__bid__form__card\" style={{height: \"fit-content\"}}>\r\n                        <Skeleton width=\"40%\" height=\"20px\" style={{margin: \"0 auto 20px auto\"}} />\r\n                        <Skeleton width=\"80%\" height=\"20px\" style={{margin: \"0 auto 20px auto\"}} />\r\n                        <Skeleton width=\"100%\" height=\"20px\" style={{margin: \"0 auto 20px auto\"}} />\r\n                    </Box>\r\n                </SimpleGrid>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MessagePagePlaceholder;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\ReceiverProfile.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottom.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\ProfileSettingsPage.tsx",["565","566","567"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport { Box, SimpleGrid, Tabs, TabList, TabPanels, TabPanel, Tab } from \"@chakra-ui/react\";\r\nimport AccountTab from \"./account/AccountTab\";\r\nimport rootStoreContext from \"../../../application/stores/rootstore\";\r\nimport Loader from \"../../../application/appLayout/FullPageSpinner\";\r\nimport BillingInformation from \"./billing/BillingInformation\";\r\nimport SecurityTab from \"./security/SecurityTab\";\r\n\r\nconst ProfileSettingsPage = () => {\r\n    const {user} = useContext(rootStoreContext).authStore;\r\n    const {privateProfile, getPrivateProfile, loadingInitial} = useContext(rootStoreContext).profileStore;\r\n    useEffect(() => {\r\n        if(privateProfile === null){\r\n            getPrivateProfile();\r\n        }\r\n    }, [getPrivateProfile, privateProfile])\r\n    if(loadingInitial || privateProfile === null) return <Loader />\r\n    return (\r\n        <Box className=\"settings__container\">\r\n            <Box className=\"main\">\r\n                <Tabs isLazy>\r\n                <SimpleGrid templateColumns={{xl: \"0.5fr 2fr\", lg: \"0.5fr 2fr\", md: \"0.8fr 2fr\", sm: \"1fr\"}} spacing=\"2em\">\r\n             <Box>\r\n                 <TabList className=\"settings__tab__list\">\r\n                     <Tab>Account</Tab>\r\n                     <Tab>Billing Information</Tab>\r\n                     <Tab>Security</Tab>\r\n                     <Tab>Other</Tab>\r\n                 </TabList>\r\n             </Box>\r\n                    <Box>\r\n                      <TabPanels>\r\n                          <TabPanel className=\"settings__tab__panel\"><AccountTab user={user!} privateProfile={privateProfile} /></TabPanel>\r\n                          <TabPanel className=\"settings__tab__panel\"><BillingInformation user={user!} privateProfile={privateProfile} /></TabPanel>\r\n                          <TabPanel className=\"settings__tab__panel\"><SecurityTab user={user!} privateProfile={privateProfile} /></TabPanel>\r\n                          <TabPanel className=\"settings__tab__panel\">apple</TabPanel>\r\n                      </TabPanels>  \r\n                    </Box>\r\n                </SimpleGrid>\r\n                </Tabs>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default observer(ProfileSettingsPage);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotificationAlert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\TaskStatus.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageTopBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\CompletedOrders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCardSlider.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myWatchlist\\WatchlistPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\AccountBio.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTable.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\OrdersPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\bidStore.tsx",["568","569","570","571","572","573","574","575"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {IBid, IBidSubmission} from \"../../infrastructure/models/bid\";\r\nimport {toast} from \"react-toastify\";\r\nimport {CheckmarkIcon, CloseIcon} from \"../../infrastructure/icons/Icons\";\r\nimport Alert from \"../common/Alert\";\r\nimport React from \"react\";\r\nimport {BidRequest} from \"../api/agent\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\nimport {BidStatus} from \"../../infrastructure/enums/bid\";\r\nimport {IOrder} from \"../../infrastructure/models/order\";\r\n\r\nexport class BidStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n   @observable bid: IBid | null = null;\r\n   @observable bids: IBid[] | null = null; \r\n   @observable loadingInitialBids = false; \r\n   @observable loadingBid = false;\r\n   @observable markingBidAsSeen = false;\r\n   @observable order: IOrder | null = null;\r\n   @observable acceptingBid = false;\r\n    \r\n    // Actions\r\n    @action createBid = async (values: IBidSubmission, jobId: string) => {\r\n        try{\r\n            const bid = await BidRequest.placeBid(values, jobId);\r\n            runInAction(() => {\r\n                this.bid = bid;\r\n                if(this.rootStore.taskStore.task) {\r\n                    this.rootStore.taskStore.task.bidsCount += 1;\r\n                    this.rootStore.taskStore.task.isBidActive = true;\r\n                }\r\n                if(this.rootStore.bidStore.bids){\r\n                    // find if a bid by the user exists\r\n                    const userBid = this.rootStore.bidStore.bids.find((bid) => bid.userName === this.rootStore.authStore.user!.username);\r\n                    if(userBid){\r\n                        userBid.price = bid.price;\r\n                        userBid.createdAt = bid.createdAt;\r\n                    } else {\r\n                        this.rootStore.bidStore.bids.unshift(bid);\r\n                    }\r\n                }\r\n                toast.success(<Alert type=\"success\" subject=\"Success\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"Successfully placed a bid\" />);\r\n            })\r\n        }catch(error){\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Error occurred while submitting bid\" />);\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action getTaskBids = async (taskId: string) => {\r\n        this.loadingInitialBids = true;\r\n        try{\r\n            const taskBids = await BidRequest.getAllTaskBids(taskId);\r\n            runInAction(() => {\r\n                this.bids = taskBids;\r\n                this.loadingInitialBids = false;\r\n            })\r\n        }catch (error) {\r\n            runInAction(() => this.loadingInitialBids = false);\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Problem loading task bids\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action getBidById = async (bidId: string) => {\r\n        this.loadingBid = true;\r\n        try{\r\n            const bid = await BidRequest.getBidById(bidId);\r\n            runInAction(() => {\r\n                this.bid = bid;\r\n                this.loadingBid = false;\r\n            })\r\n        }catch(errors){\r\n            runInAction(() => this.loadingBid = false);\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    \r\n    @action markBidAsSeen = async (bidId: string) => {\r\n        this.markingBidAsSeen = true;\r\n        try{\r\n            await BidRequest.markBidAsSeen(bidId);\r\n            runInAction(() => {\r\n                this.bid!.status = BidStatus.Seen;\r\n                if(this.bids){\r\n                    const bid = this.bids.find(x => x.id === bidId);\r\n                    bid!.status = BidStatus.Seen;\r\n                }\r\n                this.markingBidAsSeen = false;\r\n            })\r\n        } catch(errors){\r\n            runInAction(() => this.markingBidAsSeen = false);\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action acceptBidAndPay = async (bidId: string, jobId: string) => {\r\n        this.acceptingBid = true;\r\n        try{\r\n            const order = await BidRequest.AcceptBidAndPay(bidId, jobId);\r\n            runInAction(() => {\r\n                this.order = order;\r\n                this.acceptingBid = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.acceptingBid = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx",["576","577","578","579","580","581","582","583"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\orderStore.tsx",["584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeAutoObservable, observable, runInAction} from \"mobx\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\nimport {OrderRequest} from \"../api/agent\";\r\nimport {IOrder, IReview} from \"../../infrastructure/models/order\";\r\nimport {OrderStatus} from \"../../infrastructure/enums/orderStatus\";\r\nimport {v4} from \"uuid\";\r\n\r\nexport class OrderStore{\r\n    rootStore: RootStore;\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeAutoObservable(this);\r\n    }\r\n    \r\n    @observable confirmingOrder = false;\r\n    @observable payoutOrders: IOrder[] | null = null;\r\n    @observable completedOrders: IOrder[] | null = null;\r\n    @observable cancelledOrders: IOrder[] | null = null;\r\n    @observable loadingOrders = false;\r\n    @observable activeOrders : IOrder[] | null = null;\r\n    @observable order : IOrder | null = null;\r\n    @observable runnerOrders : IOrder[] | null = null;\r\n    @observable loadingOrderAction = false;\r\n    \r\n    @action deleteOrderById = async (orderNumber: string) => {\r\n        try{\r\n            await OrderRequest.deleteOrderByNumber(orderNumber);\r\n        } catch (e) {\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action confirmOrderByNumber = async (orderNumber: string) => {\r\n        this.confirmingOrder = true;\r\n        try{\r\n            await OrderRequest.confirmOrderByNumber(orderNumber);\r\n            runInAction(() => {\r\n                this.confirmingOrder = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.confirmingOrder = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action getAllOrders = async (predicate: string) => {\r\n        this.loadingOrders = true;\r\n        try{\r\n            const orders = await OrderRequest.getAllOrders(predicate);\r\n            runInAction(() => {\r\n                switch (predicate) {\r\n                    case \"ACTIVE\":\r\n                        this.activeOrders = orders;\r\n                        break;\r\n                    case \"RUNNER\":    \r\n                        this.runnerOrders = orders;\r\n                        break;\r\n                    case \"PAYOUT\":\r\n                        this.payoutOrders = orders;\r\n                        break;\r\n                    case \"COMPLETED\":\r\n                        this.completedOrders = orders;\r\n                        break;\r\n                    case \"CANCELLED\":\r\n                        this.cancelledOrders = orders;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.loadingOrders = false;\r\n            })\r\n        }catch (e) {\r\n           runInAction(() => this.loadingOrders = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action getOrderByNumber = async (orderNumber: string) => {\r\n        this.loadingOrders = true;\r\n        try{\r\n            const order = await OrderRequest.getOrderByNumber(orderNumber);\r\n            runInAction(() => {\r\n                this.order = order;\r\n                if(this.rootStore.authStore.user!.id === order.payTo.id){\r\n                    this.order.isRunner = true;\r\n                }\r\n                this.loadingOrders = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingOrders = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action markOrderAsStarted = async (orderNumber: string) => {\r\n        this.confirmingOrder = true;\r\n        try{\r\n            await OrderRequest.markOrderAsStarted(orderNumber);\r\n            runInAction(() => {\r\n                this.order!.status = OrderStatus.Started;\r\n                this.order!.orderStartedDate = new Date();\r\n                this.confirmingOrder = false;\r\n            })\r\n        }catch (e) {\r\n           runInAction(() => this.confirmingOrder = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action requestPayout = async (orderNumber: string) => {\r\n        this.loadingOrderAction = true;\r\n        try{\r\n            await OrderRequest.requestPayout(orderNumber);\r\n            runInAction(() => {\r\n                this.order!.status = OrderStatus.AwaitingPayout;\r\n                this.loadingOrderAction = false;\r\n            })\r\n        }catch(error){\r\n            runInAction(() => this.loadingOrderAction = false);\r\n            alertErrors(error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    @action rejectPayout = async (orderNumber: string) => {\r\n        this.loadingOrderAction = true;\r\n        try{\r\n            await OrderRequest.rejectPayout(orderNumber);\r\n            runInAction(() => {\r\n                this.order!.status = OrderStatus.Started;\r\n                this.loadingOrderAction = false;\r\n            })\r\n        }catch(error){\r\n            runInAction(() => this.loadingOrderAction = false);\r\n            alertErrors(error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    @action acceptPayout = async (orderNumber: string) => {\r\n        this.loadingOrderAction = true;\r\n        try{\r\n            await OrderRequest.acceptPayout(orderNumber);\r\n            runInAction(() => {\r\n                this.order!.status = OrderStatus.Completed;\r\n                this.order!.orderCompletedDate = new Date();\r\n                this.loadingOrderAction = false;\r\n            })\r\n        }catch(error){\r\n            runInAction(() => this.loadingOrderAction = false);\r\n            alertErrors(error);\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action addReview = async (values: any, orderId: string) => {\r\n        try{\r\n            await OrderRequest.addReview(values, orderId);\r\n            runInAction(() => {\r\n                const review: IReview = {\r\n                    reviewer: this.rootStore.authStore.user!,\r\n                    id: v4(),\r\n                    job: this.order!.job,\r\n                    postedAt: new Date(),\r\n                    rating: values.rating,\r\n                    text: values.text\r\n                };\r\n                this.order!.reviews.push(review)\r\n            })\r\n        }catch (error) {\r\n            alertErrors(error);\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action cancelOrder = async (orderNumber: string) => {\r\n        this.loadingOrderAction = true;\r\n        try{\r\n            await OrderRequest.cancelOrder(orderNumber);\r\n            runInAction(() => {\r\n                this.order!.status = OrderStatus.Cancelled;\r\n                this.loadingOrderAction = false;\r\n            })\r\n        }catch (error) {\r\n            runInAction(() => this.loadingOrderAction = false);\r\n            alertErrors(error);\r\n            throw error;\r\n        }\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\category.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx",["606"],"import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst InlineLoader = () => {\r\n    return (\r\n        <div className=\"spinner__inline\">\r\n            <Spinner size=\"xl\" color=\"brand.200\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InlineLoader;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\Orders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx",["607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\enumFunctions.tsx",["707","708","709","710","711","712"],"﻿export function getAllEnumKeys(enumType: any){\r\n    return Object.keys(enumType).filter(key => isNaN(Number(key)))\r\n}\r\nexport function getAllEnumValues(enumType: any) {\r\n    return getAllEnumKeys(enumType).map((key: any) => enumType[key])\r\n}\r\nexport function getAllEnumEntries(enumType: any) {\r\n    return getAllEnumKeys(enumType).map((key : any) => [key, enumType[key]])\r\n}   ","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\orderStatus.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\copyStyle.ts",["713","714","715"],"﻿// function to copy style into an external window\r\n// @ts-ignore\r\nexport default function copyStyles(sourceDoc, targetDoc) {\r\n    Array.from(\r\n        sourceDoc.querySelectorAll('link[rel=\"stylesheet\"], style')\r\n    ).forEach((link: any) => {\r\n        targetDoc.head.appendChild(link.cloneNode(true));\r\n    });\r\n}\r\n","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\reviews\\ReviewPane.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\account\\AccountTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\PayoutOrders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\TaglineForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\profileStore.tsx",["716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {ITask} from \"../../infrastructure/models/task\";\r\nimport {profileRequest} from \"../api/agent\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\nimport {TaskStatus} from \"../../infrastructure/enums/taskStatus\";\r\nimport {ILanguage, IPrivateProfile, ISkill, ISocials,} from \"../../infrastructure/models/profile\";\r\nimport {toast} from \"react-toastify\";\r\nimport {CheckmarkIcon} from \"../../infrastructure/icons/Icons\";\r\nimport Alert from \"../common/Alert\";\r\nimport React from \"react\";\r\nimport {IPaginatedNotificationsResponse} from \"../../infrastructure/models/notification\";\r\nimport {NotificationStatus} from \"../../infrastructure/enums/notification\";\r\n\r\nexport class ProfileStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable profileTasks : ITask[] | null = null;\r\n    @observable profileInactiveTasks : ITask[] | null = null; \r\n    @observable loadingInitial = false;\r\n    @observable privateProfile : IPrivateProfile | null = null;\r\n    @observable userNotifications : IPaginatedNotificationsResponse | null = null;\r\n    @observable loadingNotifications = false;\r\n    @observable watchList : ITask[] | null = null;\r\n    @action getProfileTasks = async (taskStatus: TaskStatus) => {\r\n        this.loadingInitial = true;\r\n        try{\r\n            const tasks = await profileRequest.getAllTasks(taskStatus);\r\n            runInAction(() => {\r\n                switch (taskStatus) {\r\n                    case TaskStatus.Active:\r\n                        this.profileTasks = tasks;\r\n                        break;\r\n                    case TaskStatus.InActive:\r\n                        this.profileInactiveTasks = tasks;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.loadingInitial = false;\r\n            })\r\n        }catch (errors) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @observable getPrivateProfile = async () => {\r\n        this.loadingInitial = true;\r\n        try{\r\n           const profile = await profileRequest.getProfile();\r\n           runInAction(() => {\r\n               this.privateProfile = profile;\r\n               this.loadingInitial = false;\r\n           })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @observable addProfileSkills = async (values: ISkill) => {\r\n        try{\r\n            await profileRequest.addProfileSkills(values);\r\n            runInAction(() => {\r\n                this.privateProfile!.skillSet.unshift(values);\r\n                toast.success(<Alert type=\"success\" subject=\"Skills Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch (e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    @observable addProfileLanguages = async (values: ILanguage) => {\r\n        try{\r\n            await profileRequest.addProfileLanguages(values);\r\n            runInAction(() => {\r\n                this.privateProfile!.languages.unshift(values);\r\n                toast.success(<Alert type=\"success\" subject=\"Languages Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch (e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @observable updateProfile = async (values: any) => {\r\n        try{\r\n            await profileRequest.updateProfile(values);\r\n            runInAction(() => {\r\n                if(values.description){\r\n                    this.privateProfile!.bio = values.description;\r\n                }\r\n                if(values.tagline){\r\n                    this.privateProfile!.tagline = values.tagline;\r\n                }\r\n                \r\n\r\n                toast.success(<Alert type=\"success\" subject=\"Profile Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch(e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action updateSocials = async (values: ISocials) => {\r\n        try{\r\n            await profileRequest.updateSocials(values);\r\n            runInAction(() => {\r\n                if(values.twitter){\r\n                    this.privateProfile!.socials.twitter = values.twitter;\r\n                }\r\n                if(values.instagram){\r\n                    this.privateProfile!.socials.instagram = values.instagram;\r\n                }\r\n                if(values.facebook){\r\n                    this.privateProfile!.socials.facebook = values.facebook;\r\n                }\r\n                if(values.pinterest){\r\n                    this.privateProfile!.socials.pinterest = values.pinterest;\r\n                }\r\n\r\n                toast.success(<Alert type=\"success\" subject=\"Socials Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch(e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action getUserNotifications = async (status?: NotificationStatus) => {\r\n        this.loadingNotifications = true;\r\n        try{\r\n           const notifs = await profileRequest.getNotifications(status);\r\n           runInAction(() => {\r\n               this.userNotifications = notifs;\r\n               this.loadingNotifications = false;\r\n           })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingNotifications = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action readNotification = async (notificationId: string) => {\r\n        try{\r\n            await profileRequest.markNotificationAsRead(notificationId);\r\n            runInAction(() => {\r\n                const notif = this.userNotifications?.data.find(x => x.id == notificationId);\r\n                notif!.status = NotificationStatus.Read;\r\n            })\r\n        }catch (errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action deleteNotification = async (notificationId: string) => {\r\n        try{\r\n            await profileRequest.deleteNotification(notificationId);\r\n            runInAction(() => {\r\n               this.userNotifications!.data = this.userNotifications!.data.filter(x => x.id !== notificationId); \r\n            })\r\n        }catch (errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        } \r\n    }\r\n    \r\n    @action markAllNotificationsAsRead = async () => {\r\n        try{\r\n            await profileRequest.markAllNotificationsAsRead();\r\n            runInAction(() => {\r\n               this.userNotifications?.data.forEach((notification) => {\r\n                   notification.status = NotificationStatus.Read;\r\n               }) \r\n                this.rootStore.authStore.user!.hasUnReadNotifications = false;\r\n            })\r\n        }catch (errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action deleteAllNotifications = async () => {\r\n        try{\r\n            await profileRequest.deleteAllNotifications();\r\n            runInAction(() => {\r\n                this.userNotifications!.data = [];\r\n                this.rootStore.authStore.user!.hasUnReadNotifications = false;\r\n            })\r\n        }catch(errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action getWatchlist = async (sortBy: string) => {\r\n        this.loadingInitial = true;\r\n        try{\r\n            const watchlist = await profileRequest.getWatchlist(sortBy);\r\n            runInAction(() => {\r\n                this.watchList = watchlist;\r\n                this.loadingInitial = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingInitial = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action addBankAccount = async (values: any) => {\r\n        try {\r\n            await profileRequest.addBankAccount(values);\r\n            runInAction(() => {\r\n                this.privateProfile!.bankAccount = values;\r\n            })\r\n            toast.success(<Alert type=\"success\" subject=\"Bank account added Successfully\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n        } catch(e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskSection.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\RunnerChatTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\MessageBodyContainer.tsx",["746"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\TagLine.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidModalDetails.tsx",["747","748"],"﻿import React, {useContext, useEffect, Fragment, useState} from \"react\";\r\nimport rootStoreContext from \"../../../application/stores/rootstore\";\r\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Button, Stack, Box, HStack, Image, VStack, Tooltip } from \"@chakra-ui/react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Loader from \"../../../application/appLayout/FullPageSpinner\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport Rater from \"../../../application/common/Rater\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport {ITask} from \"../../../infrastructure/models/task\";\r\nimport {CheckmarkIcon, EyeIcon} from \"../../../infrastructure/icons/Icons\";\r\nimport {BidStatus} from \"../../../infrastructure/enums/bid\";\r\nimport {loadStripe} from \"@stripe/stripe-js/pure\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\ninterface IProps{\r\n    bidId: string;\r\n    onClose: any;\r\n    isOpen: any;\r\n    task: ITask\r\n}\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY!);\r\n\r\nconst BidModalDetails : React.FC<IProps> = ({bidId, onClose, isOpen, task}) => {\r\n    const {bid, getBidById, loadingBid, markingBidAsSeen, markBidAsSeen} = useContext(rootStoreContext).bidStore;\r\n    const {token} = useContext(rootStoreContext).authStore;\r\n    const {deleteOrderById} = useContext(rootStoreContext).orderStore;\r\n    const [message, setMessage] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        isOpen && getBidById(bidId);\r\n        const query = new URLSearchParams(window.location.search);\r\n        if(query.get(\"success\")){\r\n            setMessage(\"Order placed! you will enjoy now\")\r\n        }\r\n        if (query.get(\"canceled\")) {\r\n            setMessage(\r\n                \"Order canceled -- continue to shop around and checkout when you're ready.\"\r\n            );\r\n        }\r\n    }, [getBidById, bidId, isOpen]);\r\n    \r\n    \r\n    \r\n    return (\r\n        <Modal scrollBehavior=\"inside\" size=\"lg\" motionPreset=\"slideInBottom\" isOpen={isOpen} onClose={onClose}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                {loadingBid || bid === null ? <Loader /> : (\r\n                    <Fragment>\r\n                <ModalHeader><p className=\"text__darker text__bigger__md\">{task.title}</p></ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {message}\r\n                   <Stack direction={[\"column\", \"row\"]} justifyContent=\"space-between\" alignItems={{xl: \"flex-end\", lg: \"flex-end\", sm: \"flex-start\"}}>\r\n                       <Box>\r\n                           <HStack spacing=\"10px\">\r\n                               <Image src={bid.bidCreator.avatar} alt=\"bidder-avatar\" borderRadius=\"full\" boxSize=\"60px\" />\r\n                               <Box style={{lineHeight: \"24px\"}}>\r\n                                   <Link to=\"/\" className=\"text__blue text__bigger__md\">{bid.bidCreator.userName}</Link>\r\n                                   <HStack spacing=\"10px\">\r\n                                   <Rater boxSize={6} rating={4} justifyContent=\"flex-start\" />\r\n                                   <p className=\"text__black\">4.0</p>\r\n                                       <p className=\"text__light__grey\">(2,804)</p>\r\n                                   </HStack>\r\n                                   <p className=\"text__light__grey\">Joined {dayjs(bid.bidCreator.createdAt).fromNow()}</p>\r\n                               </Box>\r\n                           </HStack>\r\n                       </Box>\r\n\r\n                       <VStack justifyContent={{xl: \"space-between\", md: \"space-between\", lg: \"space-between\", sm: \"flex-start\"}} alignItems=\"start\">\r\n                           <Tooltip hasArrow label=\"Let bidder know you have seen their bid but havent made a desicion yet\" style={{background: \"rgb(41, 43, 50)\", fontSize: \"0.8em\"}} color=\"#fff\" >\r\n                               {bid.status === BidStatus.Seen ? <p className=\"text__silent\">Marked as seen</p> :<Button isLoading={markingBidAsSeen} leftIcon={<EyeIcon />} variant=\"ghost\" className=\"btn btn__ghost\" onClick={() => markBidAsSeen(bid.id)}>\r\n                               Mark as seen\r\n                           </Button>}\r\n                           </Tooltip>\r\n                       <p className=\"text__darker\">Offer: <span className=\"text__green text__bigger__md text__bold\">${bid.price}</span></p>\r\n                       </VStack>\r\n                   </Stack> \r\n                    \r\n                    {bid.description ? <Box p=\"0.75em\" className=\"bid__description\">\r\n                        {bid.description} \r\n                </Box> : (\r\n                    <p className=\"text__silent text__italic\" >{bid.bidCreator.userName} didnt add a description</p>\r\n                    ) }\r\n                    <Box>\r\n                        <small className=\"text__light__grey\">{dayjs(bid.createdAt).fromNow()}</small>\r\n                    </Box>\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button className=\"btn\" mr={3} onClick={onClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button onClick={async () => {\r\n                        const stripe = await stripePromise;\r\n                       const response = await fetch(`https://localhost:44351/api/v1/bids/accept/${task.id}/${bid.id}`, {\r\n                           method: \"POST\",\r\n                           headers: {\r\n                               \"Accept\": \"application/json\",\r\n                               \"Authorization\": \"Bearer \" + token,\r\n                               \"Content-Type\": \"application/json\"\r\n                           }\r\n                       });\r\n                        const session = await response.json();\r\n                        // When the customer clicks on the button, redirect them to Checkout.\r\n                        const result = await stripe!.redirectToCheckout({\r\n                            sessionId: session.checkoutSessionId,\r\n                        });\r\n                        \r\n                        if(result.error){\r\n                           await deleteOrderById(session.id); \r\n                        }\r\n\r\n                    }} type=\"button\" id=\"checkout-button\" role=\"link\" className=\"btn btn__green\" leftIcon={<CheckmarkIcon />}>Accept Bid and pay</Button>\r\n                </ModalFooter>\r\n                    </Fragment>\r\n                    )}\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default observer(BidModalDetails);\r\n","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SkillsForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Review.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskAssignedDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\MyProfile.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\ProfileReviews\\ProfileReviews.tsx",["749"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getErrors.tsx",["750","751"],"﻿import {toast} from \"react-toastify\";\r\nimport Alert from \"../../application/common/Alert\";\r\nimport {CloseIcon} from \"../icons/Icons\";\r\nimport React from \"react\";\r\n\r\nexport function alertErrors(errors: any){\r\n    const errorValuesArray = Object.values(errors.response.data.errors);\r\n    errorValuesArray.forEach((err: any) => (\r\n        toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message={err} />)\r\n))\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileReviews.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BillingInformation.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SocialsForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx",["752","753","754","755","756","757"],"﻿import {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    Input, InputGroup,\r\n    InputLeftElement,\r\n    NumberInput, NumberInputField,\r\n    SimpleGrid,\r\n    Stack,\r\n    Textarea\r\n} from \"@chakra-ui/react\";\r\nimport { Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, {lazy, Suspense, useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {StringParam, useQueryParams, NumberParam} from \"use-query-params\";\r\nimport SEO from \"../../application/appLayout/SEO\";\r\nimport {InfoIcon} from \"../../infrastructure/icons/Icons\";\r\nimport TaskFormImageUploader from \"./TaskFormImageUploader\";\r\nimport TaskFormUploadedImagesPreview from \"./TaskFormUploadedImagesPreview\";\r\nimport {DeliveryTypes} from \"../../infrastructure/enums/deliveryTypes\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport {ITaskSubmission} from \"../../infrastructure/models/task\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {history} from \"../../index\";\r\nimport {Category} from \"../../infrastructure/enums/category\";\r\n\r\nconst Preview = lazy(() => import(\"./Preview\"));\r\nconst LocationComponent = lazy(() => import(\"./LocationFinder\"));\r\n\r\nconst TaskDetailsForm = () => {\r\n    const [taskDetails] = useQueryParams({\r\n        title: StringParam,\r\n        category: NumberParam,\r\n        deliveryType: NumberParam\r\n    })\r\n\r\n    const [isPreviewOpen, setIsPreviewOpen] = useState(false);\r\n\r\n    const togglePreviewWindow = useCallback(() => {\r\n        setIsPreviewOpen(!isPreviewOpen)\r\n    }, [isPreviewOpen])\r\n    const closePreviewWindow = useCallback(() => {\r\n        setIsPreviewOpen(false)\r\n    }, [isPreviewOpen]);\r\n\r\n    useEffect(() =>\r\n        window.addEventListener('beforeunload', () => closePreviewWindow())\r\n    );\r\n\r\n   const {createTask} = useContext(rootStoreContext).taskStore;\r\n   \r\n    return (\r\n        <div className=\"container\">\r\n            <SEO title={`${taskDetails.title} for ${taskDetails.category}`} />\r\n            <div className=\"main\">\r\n                <div style={{margin: \"1em 0\"}}>\r\n                    <h1 className=\"text__darker text__bigger__md\">Post your task it&apos;s <span className=\"text__primary\">Fast</span> & <span className=\"text__primary\">Easy</span></h1>\r\n                </div>\r\n                \r\n                <Formik initialValues={{title: taskDetails.title!, id: uuid(), description: \"\", urgent: false, imageFiles: [], address: \"\", postCode: \"\", price: 0, deliveryDate: \"\", category: taskDetails.category!, deliveryType: taskDetails.deliveryType!}} onSubmit={(values: ITaskSubmission, action) => {\r\n                    const taskSubmissionData = new FormData();\r\n                    taskSubmissionData.append(\"id\", values.id);\r\n                    taskSubmissionData.append(\"title\", values.title);\r\n                    taskSubmissionData.append(\"description\", values.description);\r\n                    values.imageFiles.forEach((image) => {\r\n                        taskSubmissionData.append(\"imageFiles\", image);\r\n                    })\r\n                    taskSubmissionData.append(\"address\", values.address);\r\n                    taskSubmissionData.append(\"postCode\", values.postCode);\r\n                    taskSubmissionData.append(\"initialPrice\", values.price.toString());\r\n                    taskSubmissionData.append(\"endDate\", new Date(values.deliveryDate).toISOString());\r\n                    taskSubmissionData.append(\"category\", values.category.toString());\r\n                    \r\n                    createTask(taskSubmissionData).then(() => history.push(`/task/${values.id}`)).catch(() => action.setSubmitting(false));\r\n                }}>\r\n                    {({\r\n                       handleChange,\r\n                       handleBlur, \r\n                       handleSubmit,\r\n                       values,\r\n                       errors,\r\n                       touched,\r\n                        setFieldValue,\r\n                        setFieldError,\r\n                        isSubmitting\r\n                    }) => (\r\n                        \r\n                    \r\n                <form onSubmit={handleSubmit}>\r\n                    \r\n                <div className=\"form__box\">\r\n                  <div className=\"form__box__description\">\r\n                      <div className=\"numbered__box\">1</div>\r\n                      Task Details\r\n                  </div>\r\n                  <Divider mt={4} mb={4} />  \r\n                  <div className=\"form__field form__task\">\r\n                      <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"15px\", sm: \"8px\"}}>\r\n                          <p className=\"form__detail\">Task title:</p>\r\n                          <div style={{width: \"100%\"}}>\r\n                          <Textarea  name=\"title\" className=\"form__textarea form__textarea__no__label\" id=\"title\" rows={3} onChange={handleChange} onBlur={handleBlur} value={values.title} />\r\n                          {errors.title && touched.title && (\r\n                              <small className=\"form__error\">{errors.title}</small>\r\n                          )}\r\n                          </div>\r\n                      </Stack>\r\n                  </div>\r\n                    <div className=\"form__field form__task\">\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Selected Category:</p>\r\n                            <div style={{width: \"100%\"}}>\r\n                            <p className=\"text__darker\">{Category[taskDetails.category!]}</p>\r\n                            <span className=\"text__blue\">change</span>\r\n                            </div>\r\n                        </Stack>\r\n                    </div>\r\n\r\n                    <div className=\"form__field form__task\">\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Description:</p>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <Textarea name=\"description\" className=\"form__textarea form__textarea__no__label\" id=\"title\" rows={7} onChange={handleChange} onBlur={handleBlur} value={values.description} />\r\n                                {errors.description && touched.description ? (\r\n                                    <small className=\"form__error\">{errors.description}</small>\r\n                                ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Be as specific as you can about what needs doing</small>}\r\n                            </div>\r\n                        </Stack>\r\n                    </div>  \r\n\r\n                    <div className=\"form__field form__task\" style={{margin: \"2em 0\"}}>\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Urgency:<span style={{display: \"block\"}}>(Optional)</span></p>\r\n                                \r\n                            <div style={{width: \"100%\"}}>\r\n                                <Checkbox className=\"form__checkbox__bg\" size=\"lg\" colorScheme=\"green\" iconSize=\"2em\" spacing=\"1em\"><div className=\"urgent__label\">URGENT</div>\r\n                                </Checkbox>\r\n                                <div>\r\n                                <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Add an urgent label to let taskers know that you are looking for quick responses</small>\r\n                                </div>\r\n                                 </div>\r\n                        </Stack>\r\n                    </div>\r\n\r\n                    <div className=\"form__field form__task\" >\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Tags:<span style={{display: \"block\"}}>(Optional)</span></p>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <small className=\"text__dark__grey\">Increase your exposure. Enter up to 4 keywords taskers can use to search yout task.</small>\r\n                                \r\n                                <Stack style={{marginTop: \"1em\"}} direction=\"row\" spacing=\"20px\">\r\n                                    <Input style={{width: \"300px\"}} placeholder=\"Add a tag\" className=\"form__input\" />\r\n                                    <Button type=\"button\" style={{fontWeight: 500}} className=\"btn btn__sm btn__primary\">Add tag</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </Stack>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">2</div>\r\n                            Task Media (Optional)\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n                        \r\n                        <h1 className=\"title\">Add photos to imporve the interest on your task</h1>\r\n                        \r\n                        <p className=\"text__silent text__sm text__small__cut\">Add pictures that explain your task or pictures of what you want to be done. You can upload a maximum of 3 photos. The photos are stored in a cloudinary bucket and resize the image to the recommended 618px by 427px ratio. Drag an drop your photos into the given area below.</p>\r\n                        \r\n                        <SimpleGrid style={{margin: \"2em 0\", width: \"100%\"}} templateColumns={{xl: \"1fr 1fr\", lg: \"1fr 1fr\", md: \"1fr\", sm: \"1fr\"}}   spacing=\"20px\">\r\n                            <div>\r\n                        <TaskFormImageUploader setFieldValue={setFieldValue} />\r\n                            </div>\r\n                            <div>\r\n                        <TaskFormUploadedImagesPreview />\r\n                            </div>\r\n                        </SimpleGrid>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">3</div>\r\n                            Task Location\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n                        \r\n                        <div style={{marginBottom: \"1em\"}}>\r\n                            <p className=\"bold__label\">Delivery Type: <span className=\"text__darker\">{DeliveryTypes[taskDetails.deliveryType!]}</span></p>\r\n                            <p className=\"text__blue\">Change</p>\r\n                        </div>\r\n                        {taskDetails.deliveryType! === DeliveryTypes.InPerson ? (\r\n                            <Suspense fallback={<InlineLoader />}>\r\n                                <p className=\"text__darker\">Search and select your address</p>\r\n                                <LocationComponent addressErrors={errors.address} setFieldError={setFieldError} setFieldValue={setFieldValue} values={values} />\r\n                                <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>If you cannot see your address please select online as the delivery type then convey your real address to the runner on messages</small>\r\n                               \r\n                            </Suspense>\r\n                        ) : (\r\n                            <p className=\"text__darker\">This task will be delivered online</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">4</div>\r\n                            Budget & Dates\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n\r\n                        <div className=\"form__field form__task\">\r\n                            <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                                <p className=\"form__detail\">Budget:</p>\r\n                                <div style={{width: \"100%\"}}>\r\n                                    <InputGroup>\r\n                                        <InputLeftElement\r\n                                            pointerEvents=\"none\"\r\n                                            fontSize=\"1.2em\"\r\n                                            className=\"query__price__placeholder__green\"\r\n                                        >\r\n                                            $\r\n                                        </InputLeftElement>\r\n                                        <NumberInput  clampValueOnBlur={false}  size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                                            <NumberInputField name=\"price\" error={!!errors.price && touched.price} value={values.price} onChange={handleChange} onBlur={handleBlur}  className=\"task__price__input\" />\r\n                                        </NumberInput>\r\n                                    </InputGroup> \r\n                                    {errors.price && touched.price ? (\r\n                                        <small className=\"form__error\">{errors.price}</small>\r\n                                    ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Your budget signifies the max amount you can pay, runners will start bidding from that price.</small>}\r\n                                </div>\r\n                            </Stack>\r\n                        </div>\r\n\r\n                        <div className=\"form__field form__task\">\r\n                            <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                                <p className=\"form__detail\">Delivery Date:</p>\r\n                                <div style={{width: \"100%\"}}>\r\n                                    <Input className=\"form__input\" type=\"date\" value={values.deliveryDate} onChange={handleChange} onBlur={handleBlur} name=\"deliveryDate\" min={new Date().toISOString().split(\"T\")[0]} />\r\n                                    {errors.deliveryDate && touched.deliveryDate ? (\r\n                                        <small className=\"form__error\">{errors.deliveryDate}</small>\r\n                                    ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Your task ends on the given date and you will have to re-activate it and set a new date</small>}\r\n                                </div>\r\n                            </Stack>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div style={{margin: \"1em 0\", lineHeight: \"12px\"}}>\r\n                        <small className=\"text__darker text__small__cut\">By listing your task on taskr, you are agreeing to our <span className=\"text__blue\">terms of use, privacy policy</span> and <span className=\"text__blue\">site policies</span>.</small>\r\n                        <small className=\"text__darker text__small__cut\" style={{display: \"block\"}}>Please do not post duplicate tasks.</small>\r\n                    </div>\r\n\r\n                    <Stack direction=\"row\" spacing=\"20px\">\r\n                    <Button isLoading={isSubmitting} className=\"btn btn__primary btn__nm btn__bg btn__shadow \" type=\"submit\">List your task</Button>\r\n                        <Button type=\"button\" className=\"btn btn__white btn__nm btn__bg \" onClick={togglePreviewWindow}>Preview</Button>\r\n                    </Stack>\r\n                </form>\r\n                    )}\r\n                </Formik>\r\n                \r\n            </div>\r\n            {isPreviewOpen && (\r\n                <Suspense fallback={<InlineLoader />}>\r\n                <Preview closeWindow={closePreviewWindow}>\r\n                    apple\r\n                </Preview>\r\n                </Suspense>\r\n            )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(TaskDetailsForm);\r\n\r\n","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts",["758","759","760","761","762","763","764"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx",["765","766","767","768","769","770","771","772"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCard.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskMobile.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\ProfileTasksPane.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\PrivateRoute.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\OrderDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\TaskrChatTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\notification.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidPageForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatContainer.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderActivity.tsx",["773","774","775","776"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myOrders\\ActiveOrders.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotFound.tsx",["777"],"﻿import { Center, Box, Image, Button } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport notFoundSvg from \"../../assets/images/undraw_page_not_found_su7k.svg\";\r\nimport {PreviousIcon} from \"../../infrastructure/icons/Icons\";\r\nimport {history} from \"../../index\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Center height=\"95vh\">\r\n            <Box>\r\n               <Center> <Image src={notFoundSvg} alt=\"not-found\" maxW=\"600px\" width=\"80%\" /></Center>\r\n              <Center mt={5}><h1 className=\"text__lg\">It looks like you&apos;re lost...</h1></Center>\r\n                <Center ><p className=\"text__md text__darker\">The page you are looking for can&apos; be found or no longer exists</p></Center>\r\n                <Center mt={5}><Button onClick={() => history.push(\"/\")} leftIcon={<PreviousIcon color=\"#fff\" />} className=\"btn btn__nm btn__primary\">Go Home</Button></Center>\r\n            </Box>\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default NotFound;",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\taskStatus.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\order\\orderInfo\\OrderInfoDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\DescriptionForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BankAccountForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\MapModal.tsx",["778"],"﻿import React, {useCallback, useRef} from \"react\";\r\nimport {Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, Box} from \"@chakra-ui/react\";\r\nimport MapGL from \"react-map-gl\";\r\n\r\ninterface IProps{\r\n    isOpen: boolean;\r\n    onClose: any;\r\n}\r\n\r\nconst MapModal = ({isOpen, onClose}: IProps) => {\r\n    const [viewport, setViewport] = React.useState({\r\n        latitude: 37.7577,\r\n        longitude: -122.4376,\r\n        zoom: 8\r\n    });\r\n    const mapRef = useRef(null);\r\n    const handleViewportChange = useCallback(\r\n        (newViewport) => setViewport(newViewport),\r\n        []\r\n    );\r\n    const MAPBOX_TOKEN = \"pk.eyJ1IjoiZGJhbmt4IiwiYSI6ImNrandpNnRpcTBpc24ycGxja3hjaHdudnAifQ.IsBBI65qv2qJKZPd0kIyYw\";\r\n    \r\n    return (\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n            <ModalOverlay />\r\n                <ModalContent>\r\n                <ModalHeader>Modal Title</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    <p>Apple</p>\r\n                    <Box height=\"40vh\">\r\n                    <MapGL \r\n                        style={{overflow: \"visible\"}}\r\n                        ref={mapRef}\r\n                        width=\"100vw\"\r\n                        height=\"40vh\"\r\n                        onViewportChange={handleViewportChange}\r\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                        {...viewport}\r\n                        visible\r\n                        \r\n                    />\r\n                    </Box>\r\n                </ModalBody>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default MapModal;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTopPlaceholder.tsx",["779"],"﻿import { Box, SkeletonCircle, Skeleton } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst ProfileDetailsTopPlaceholder = () => {\r\n    return (\r\n        <Box className=\"task__bid__form__card\">\r\n            <Box className=\"text__middle\">\r\n                <SkeletonCircle style={{margin: \"0 auto\"}} size=\"130px\" />\r\n                <Skeleton mt={5} height=\"20px\" />\r\n                <Skeleton mt={5} height=\"20px\" />\r\n                <Skeleton mt={5} height=\"20px\" />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProfileDetailsTopPlaceholder;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageInput.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\TextMessage.tsx",["780","781","782","783","784"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signup\\SignUpPage.tsx",["785"],"﻿import {Box, Button, Divider, Flex, Image, Center, HStack, Circle, SimpleGrid} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport SEO from \"../../../application/appLayout/SEO\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Logo from \"../../../assets/images/taskr-logo.svg\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport {CheckmarkIcon, FacebookIcon, GoogleIcon} from \"../../../infrastructure/icons/Icons\";\r\nimport Separator from \"../../../application/common/Separator\";\r\n\r\nconst SignUpPage = () => {\r\n    return (\r\n        <Box>\r\n           <SEO title=\"sign Up\" />\r\n           <Box className=\"container\">\r\n            <Flex style={{padding: \"1em\"}} alignItems=\"center\">\r\n                <Link to=\"/\">\r\n                    <Image src={Logo} alt=\"taskr-logo\" className=\"navbar__logo\" />\r\n                </Link>\r\n            </Flex>\r\n               <Center alignItems=\"flex-start\" height=\"100vh\" width=\"100%\">\r\n                   <SimpleGrid templateColumns={{lg: \"2fr 1fr\", md: \"2fr 1fr\", sm: \"1fr\"}} spacing=\"2em\">\r\n            <Box className=\"auth__signup\">\r\n                <div style={{padding: \"1em\"}}>\r\n                    <Center><h1 className=\"text__primary text__lg\">Join taskr</h1></Center>\r\n                    <div>\r\n                        <SignUpForm />\r\n                    </div>\r\n                    <Separator content=\"OR\" />\r\n                    <div className=\"auth__providers\">\r\n                        <Button className=\"btn btn__full-width btn__fb btn__auth\" leftIcon={<FacebookIcon />}>Continue with Facebook</Button>\r\n                        <Button className=\"btn btn__full-width btn__outline__auth btn__auth\" leftIcon={<GoogleIcon />}>\r\n                            Continue with Google\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div style={{padding: \"1em\", textAlign: \"center\"}} className=\"text__darker\">\r\n                    Already a member? <Link to=\"/signin\" className=\"text__blue\">Sign in</Link>\r\n                </div>\r\n            </Box>\r\n                       <Box>\r\n                           <Box p=\"1em\" mb=\"2em\" className=\"auth__signup\">\r\n                               <Center mb=\"0.5em\"><h3 className=\"text__darker text__bigger__md\">Already Registered?</h3></Center>\r\n                     <small>Sign in to post a task</small>\r\n                               <Box mt=\"1em\" className=\"form__field\">\r\n                                   <Button type=\"submit\" className=\"form__action__button btn__full-width btn__primary\">Sign in</Button>\r\n                               </Box>\r\n                           </Box>\r\n                           <Box p=\"1em\" lineHeight=\"1em\" className=\"auth__signup\">\r\n                               <Center><h3 className=\"text__darker text__bigger__md\">Why Register</h3></Center>\r\n                               <small style={{marginTop: \"1em\", display: \"block\"}} className=\"text__darker text__bold\">To improve your taskr experience and help you stay safe and secure, you now need to register to:</small>\r\n                              <Box mt=\"1em\">\r\n                                  <HStack alignItems=\"flex-start\" mb=\"0.5em\">\r\n                                      <Circle size=\"20px\" bg=\"#37a864\" color=\"#fff\"><CheckmarkIcon boxSize={5} /></Circle>\r\n                                      <small className=\"text__darker\">Post, edit and manage tasks</small>\r\n                                  </HStack>\r\n                                  <HStack alignItems=\"flex-start\" mb=\"0.5em\">\r\n                                      <Circle size=\"20px\" bg=\"#37a864\" color=\"#fff\"><CheckmarkIcon boxSize={5} /></Circle>\r\n                                      <small className=\"text__darker\">Access saved tasks in your watched list from all devices</small>\r\n                                  </HStack>\r\n                                  <HStack alignItems=\"flex-start\" mb=\"0.5em\">\r\n                                      <Circle size=\"20px\" bg=\"#37a864\" color=\"#fff\"><CheckmarkIcon boxSize={5} /></Circle>\r\n                                      <small className=\"text__darker \">Reserve your own nickname</small>\r\n                                  </HStack>\r\n                                  <HStack alignItems=\"flex-start\">\r\n                                      <Circle size=\"20px\" bg=\"#37a864\" color=\"#fff\"><CheckmarkIcon boxSize={5} /></Circle>\r\n                                      <small className=\"text__darker\">And much more!</small>\r\n                                  </HStack>\r\n                              </Box> \r\n                           </Box>\r\n                       </Box>\r\n                   </SimpleGrid>\r\n               </Center>\r\n           </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SignUpPage;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signup\\SignUpForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx",["786"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx",["787"],"﻿import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Loader(){\r\n    return (\r\n        <div className=\"middle_position\">\r\n            <Spinner size=\"xl\" color=\"brand.100\"  />\r\n        </div>\r\n    )\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signup\\AwatingConfirmationMail.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts",["788"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signup\\ConfirmEmail.tsx",["789","790"],{"ruleId":"791","severity":1,"message":"792","line":30,"column":25,"nodeType":"793","messageId":"794","endLine":30,"endColumn":43},{"ruleId":"791","severity":1,"message":"792","line":30,"column":45,"nodeType":"793","messageId":"794","endLine":30,"endColumn":66},{"ruleId":"791","severity":1,"message":"792","line":30,"column":68,"nodeType":"793","messageId":"794","endLine":30,"endColumn":89},{"ruleId":"791","severity":1,"message":"792","line":30,"column":91,"nodeType":"793","messageId":"794","endLine":30,"endColumn":114},{"ruleId":"791","severity":1,"message":"792","line":30,"column":116,"nodeType":"793","messageId":"794","endLine":30,"endColumn":137},{"ruleId":"791","severity":1,"message":"792","line":30,"column":139,"nodeType":"793","messageId":"794","endLine":30,"endColumn":158},{"ruleId":"791","severity":1,"message":"792","line":30,"column":160,"nodeType":"793","messageId":"794","endLine":30,"endColumn":181},{"ruleId":"791","severity":1,"message":"792","line":30,"column":183,"nodeType":"793","messageId":"794","endLine":30,"endColumn":208},{"ruleId":"791","severity":1,"message":"792","line":59,"column":130,"nodeType":"793","messageId":"794","endLine":59,"endColumn":139},{"ruleId":"791","severity":1,"message":"792","line":59,"column":222,"nodeType":"793","messageId":"794","endLine":59,"endColumn":231},{"ruleId":"795","severity":1,"message":"796","line":25,"column":47,"nodeType":"797","messageId":"798","endLine":25,"endColumn":52},{"ruleId":"791","severity":1,"message":"792","line":27,"column":40,"nodeType":"793","messageId":"794","endLine":27,"endColumn":71},{"ruleId":"791","severity":1,"message":"792","line":31,"column":71,"nodeType":"793","messageId":"794","endLine":31,"endColumn":102,"suggestions":"799"},{"ruleId":"791","severity":1,"message":"792","line":34,"column":13,"nodeType":"793","messageId":"794","endLine":34,"endColumn":43,"suggestions":"800"},{"ruleId":"795","severity":1,"message":"796","line":47,"column":33,"nodeType":"797","messageId":"798","endLine":47,"endColumn":38},{"ruleId":"791","severity":1,"message":"792","line":48,"column":9,"nodeType":"793","messageId":"794","endLine":48,"endColumn":40,"suggestions":"801"},{"ruleId":"795","severity":1,"message":"796","line":51,"column":28,"nodeType":"797","messageId":"798","endLine":51,"endColumn":33},{"ruleId":"795","severity":1,"message":"796","line":55,"column":32,"nodeType":"797","messageId":"798","endLine":55,"endColumn":47},{"ruleId":"795","severity":1,"message":"802","line":55,"column":33,"nodeType":"803","messageId":"804","endLine":55,"endColumn":43},{"ruleId":"795","severity":1,"message":"796","line":59,"column":34,"nodeType":"797","messageId":"798","endLine":59,"endColumn":39},{"ruleId":"795","severity":1,"message":"796","line":26,"column":35,"nodeType":"797","messageId":"798","endLine":26,"endColumn":54},{"ruleId":"791","severity":1,"message":"792","line":29,"column":39,"nodeType":"793","messageId":"794","endLine":29,"endColumn":70},{"ruleId":"791","severity":1,"message":"792","line":33,"column":59,"nodeType":"793","messageId":"794","endLine":33,"endColumn":78,"suggestions":"805"},{"ruleId":"791","severity":1,"message":"792","line":36,"column":13,"nodeType":"793","messageId":"794","endLine":36,"endColumn":32,"suggestions":"806"},{"ruleId":"791","severity":1,"message":"792","line":41,"column":17,"nodeType":"793","messageId":"794","endLine":41,"endColumn":27,"suggestions":"807"},{"ruleId":"791","severity":1,"message":"792","line":43,"column":13,"nodeType":"793","messageId":"794","endLine":43,"endColumn":52,"suggestions":"808"},{"ruleId":"795","severity":1,"message":"796","line":51,"column":33,"nodeType":"797","messageId":"798","endLine":51,"endColumn":38},{"ruleId":"791","severity":1,"message":"792","line":52,"column":9,"nodeType":"793","messageId":"794","endLine":52,"endColumn":28,"suggestions":"809"},{"ruleId":"791","severity":1,"message":"792","line":52,"column":54,"nodeType":"793","messageId":"794","endLine":52,"endColumn":64,"suggestions":"810"},{"ruleId":"791","severity":1,"message":"792","line":53,"column":13,"nodeType":"793","messageId":"794","endLine":53,"endColumn":32,"suggestions":"811"},{"ruleId":"795","severity":1,"message":"796","line":56,"column":27,"nodeType":"797","messageId":"798","endLine":56,"endColumn":49},{"ruleId":"795","severity":1,"message":"812","line":56,"column":34,"nodeType":"803","messageId":"804","endLine":56,"endColumn":45},{"ruleId":"791","severity":1,"message":"792","line":59,"column":25,"nodeType":"793","messageId":"794","endLine":59,"endColumn":35,"suggestions":"813"},{"ruleId":"791","severity":1,"message":"792","line":59,"column":48,"nodeType":"793","messageId":"794","endLine":59,"endColumn":78,"suggestions":"814"},{"ruleId":"791","severity":1,"message":"792","line":59,"column":84,"nodeType":"793","messageId":"794","endLine":59,"endColumn":94,"suggestions":"815"},{"ruleId":"791","severity":1,"message":"792","line":59,"column":107,"nodeType":"793","messageId":"794","endLine":59,"endColumn":117,"suggestions":"816"},{"ruleId":"791","severity":1,"message":"792","line":60,"column":21,"nodeType":"793","messageId":"794","endLine":60,"endColumn":31,"suggestions":"817"},{"ruleId":"791","severity":1,"message":"792","line":63,"column":35,"nodeType":"793","messageId":"794","endLine":63,"endColumn":54,"suggestions":"818"},{"ruleId":"795","severity":1,"message":"796","line":70,"column":27,"nodeType":"797","messageId":"798","endLine":70,"endColumn":55},{"ruleId":"795","severity":1,"message":"796","line":94,"column":27,"nodeType":"797","messageId":"798","endLine":94,"endColumn":52},{"ruleId":"795","severity":1,"message":"796","line":110,"column":33,"nodeType":"797","messageId":"798","endLine":110,"endColumn":87},{"ruleId":"795","severity":1,"message":"812","line":110,"column":72,"nodeType":"803","messageId":"804","endLine":110,"endColumn":83},{"ruleId":"791","severity":1,"message":"792","line":114,"column":17,"nodeType":"793","messageId":"794","endLine":114,"endColumn":47,"suggestions":"819"},{"ruleId":"795","severity":1,"message":"796","line":122,"column":32,"nodeType":"797","messageId":"798","endLine":122,"endColumn":87},{"ruleId":"795","severity":1,"message":"812","line":122,"column":72,"nodeType":"803","messageId":"804","endLine":122,"endColumn":83},{"ruleId":"791","severity":1,"message":"792","line":126,"column":17,"nodeType":"793","messageId":"794","endLine":126,"endColumn":49,"suggestions":"820"},{"ruleId":"795","severity":1,"message":"796","line":135,"column":26,"nodeType":"797","messageId":"798","endLine":135,"endColumn":70},{"ruleId":"791","severity":1,"message":"792","line":143,"column":45,"nodeType":"793","messageId":"794","endLine":143,"endColumn":63,"suggestions":"821"},{"ruleId":"791","severity":1,"message":"792","line":146,"column":46,"nodeType":"793","messageId":"794","endLine":146,"endColumn":65,"suggestions":"822"},{"ruleId":"795","severity":1,"message":"796","line":24,"column":39,"nodeType":"797","messageId":"798","endLine":24,"endColumn":64},{"ruleId":"795","severity":1,"message":"796","line":42,"column":37,"nodeType":"797","messageId":"798","endLine":42,"endColumn":62},{"ruleId":"795","severity":1,"message":"796","line":57,"column":30,"nodeType":"797","messageId":"798","endLine":57,"endColumn":74},{"ruleId":"795","severity":1,"message":"796","line":4,"column":32,"nodeType":"797","messageId":"798","endLine":4,"endColumn":37},{"ruleId":"791","severity":1,"message":"792","line":34,"column":88,"nodeType":"793","messageId":"794","endLine":34,"endColumn":93},{"ruleId":"791","severity":1,"message":"792","line":35,"column":96,"nodeType":"793","messageId":"794","endLine":35,"endColumn":101},{"ruleId":"791","severity":1,"message":"792","line":36,"column":89,"nodeType":"793","messageId":"794","endLine":36,"endColumn":94},{"ruleId":"795","severity":1,"message":"796","line":29,"column":25,"nodeType":"797","messageId":"798","endLine":29,"endColumn":73},{"ruleId":"791","severity":1,"message":"792","line":40,"column":97,"nodeType":"793","messageId":"794","endLine":40,"endColumn":127,"suggestions":"823"},{"ruleId":"795","severity":1,"message":"796","line":56,"column":27,"nodeType":"797","messageId":"798","endLine":56,"endColumn":52},{"ruleId":"795","severity":1,"message":"796","line":71,"column":26,"nodeType":"797","messageId":"798","endLine":71,"endColumn":50},{"ruleId":"795","severity":1,"message":"796","line":87,"column":29,"nodeType":"797","messageId":"798","endLine":87,"endColumn":53},{"ruleId":"791","severity":1,"message":"792","line":92,"column":17,"nodeType":"793","messageId":"794","endLine":92,"endColumn":26,"suggestions":"824"},{"ruleId":"791","severity":1,"message":"792","line":95,"column":21,"nodeType":"793","messageId":"794","endLine":95,"endColumn":25,"suggestions":"825"},{"ruleId":"795","severity":1,"message":"796","line":106,"column":31,"nodeType":"797","messageId":"798","endLine":106,"endColumn":70},{"ruleId":"795","severity":1,"message":"796","line":36,"column":5,"nodeType":"826","messageId":"798","endLine":36,"endColumn":31},{"ruleId":"795","severity":1,"message":"796","line":46,"column":26,"nodeType":"797","messageId":"798","endLine":46,"endColumn":72},{"ruleId":"795","severity":1,"message":"796","line":60,"column":26,"nodeType":"797","messageId":"798","endLine":60,"endColumn":72},{"ruleId":"795","severity":1,"message":"796","line":70,"column":28,"nodeType":"797","messageId":"798","endLine":70,"endColumn":67},{"ruleId":"795","severity":1,"message":"796","line":84,"column":30,"nodeType":"797","messageId":"798","endLine":84,"endColumn":41},{"ruleId":"795","severity":1,"message":"796","line":98,"column":30,"nodeType":"797","messageId":"798","endLine":98,"endColumn":52},{"ruleId":"795","severity":1,"message":"812","line":98,"column":37,"nodeType":"803","messageId":"804","endLine":98,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":112,"column":26,"nodeType":"797","messageId":"798","endLine":112,"endColumn":31},{"ruleId":"795","severity":1,"message":"796","line":26,"column":31,"nodeType":"797","messageId":"798","endLine":26,"endColumn":61},{"ruleId":"795","severity":1,"message":"796","line":35,"column":36,"nodeType":"797","messageId":"798","endLine":35,"endColumn":66},{"ruleId":"795","severity":1,"message":"796","line":49,"column":28,"nodeType":"797","messageId":"798","endLine":49,"endColumn":56},{"ruleId":"795","severity":1,"message":"796","line":82,"column":32,"nodeType":"797","messageId":"798","endLine":82,"endColumn":62},{"ruleId":"791","severity":1,"message":"792","line":88,"column":20,"nodeType":"793","messageId":"794","endLine":88,"endColumn":50,"suggestions":"827"},{"ruleId":"795","severity":1,"message":"796","line":100,"column":34,"nodeType":"797","messageId":"798","endLine":100,"endColumn":64},{"ruleId":"791","severity":1,"message":"792","line":105,"column":17,"nodeType":"793","messageId":"794","endLine":105,"endColumn":28,"suggestions":"828"},{"ruleId":"791","severity":1,"message":"792","line":106,"column":17,"nodeType":"793","messageId":"794","endLine":106,"endColumn":28,"suggestions":"829"},{"ruleId":"795","severity":1,"message":"796","line":116,"column":29,"nodeType":"797","messageId":"798","endLine":116,"endColumn":59},{"ruleId":"791","severity":1,"message":"792","line":121,"column":17,"nodeType":"793","messageId":"794","endLine":121,"endColumn":28,"suggestions":"830"},{"ruleId":"795","severity":1,"message":"796","line":131,"column":28,"nodeType":"797","messageId":"798","endLine":131,"endColumn":58},{"ruleId":"791","severity":1,"message":"792","line":136,"column":17,"nodeType":"793","messageId":"794","endLine":136,"endColumn":28,"suggestions":"831"},{"ruleId":"795","severity":1,"message":"796","line":146,"column":28,"nodeType":"797","messageId":"798","endLine":146,"endColumn":58},{"ruleId":"791","severity":1,"message":"792","line":151,"column":17,"nodeType":"793","messageId":"794","endLine":151,"endColumn":28,"suggestions":"832"},{"ruleId":"791","severity":1,"message":"792","line":152,"column":17,"nodeType":"793","messageId":"794","endLine":152,"endColumn":28,"suggestions":"833"},{"ruleId":"795","severity":1,"message":"796","line":162,"column":25,"nodeType":"797","messageId":"798","endLine":162,"endColumn":64},{"ruleId":"795","severity":1,"message":"812","line":162,"column":32,"nodeType":"803","messageId":"804","endLine":162,"endColumn":43},{"ruleId":"791","severity":1,"message":"792","line":167,"column":31,"nodeType":"793","messageId":"794","endLine":167,"endColumn":61},{"ruleId":"791","severity":1,"message":"792","line":169,"column":26,"nodeType":"793","messageId":"794","endLine":169,"endColumn":37,"suggestions":"834"},{"ruleId":"791","severity":1,"message":"792","line":174,"column":17,"nodeType":"793","messageId":"794","endLine":174,"endColumn":28,"suggestions":"835"},{"ruleId":"795","severity":1,"message":"796","line":182,"column":27,"nodeType":"797","messageId":"798","endLine":182,"endColumn":57},{"ruleId":"791","severity":1,"message":"792","line":187,"column":17,"nodeType":"793","messageId":"794","endLine":187,"endColumn":28,"suggestions":"836"},{"ruleId":"795","severity":1,"message":"796","line":4,"column":22,"nodeType":"797","messageId":"798","endLine":4,"endColumn":27},{"ruleId":"795","severity":1,"message":"796","line":4,"column":8,"nodeType":"837","messageId":"798","endLine":4,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":4,"column":26,"nodeType":"803","messageId":"804","endLine":4,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":12,"column":8,"nodeType":"837","messageId":"798","endLine":12,"endColumn":41},{"ruleId":"795","severity":1,"message":"838","line":12,"column":30,"nodeType":"803","messageId":"804","endLine":12,"endColumn":40},{"ruleId":"795","severity":1,"message":"796","line":64,"column":8,"nodeType":"837","messageId":"798","endLine":64,"endColumn":39},{"ruleId":"795","severity":1,"message":"838","line":64,"column":28,"nodeType":"803","messageId":"804","endLine":64,"endColumn":38},{"ruleId":"795","severity":1,"message":"796","line":111,"column":8,"nodeType":"837","messageId":"798","endLine":111,"endColumn":38},{"ruleId":"795","severity":1,"message":"838","line":111,"column":27,"nodeType":"803","messageId":"804","endLine":111,"endColumn":37},{"ruleId":"795","severity":1,"message":"796","line":160,"column":8,"nodeType":"837","messageId":"798","endLine":160,"endColumn":43},{"ruleId":"795","severity":1,"message":"838","line":160,"column":32,"nodeType":"803","messageId":"804","endLine":160,"endColumn":42},{"ruleId":"795","severity":1,"message":"796","line":208,"column":8,"nodeType":"837","messageId":"798","endLine":208,"endColumn":44},{"ruleId":"795","severity":1,"message":"838","line":208,"column":33,"nodeType":"803","messageId":"804","endLine":208,"endColumn":43},{"ruleId":"795","severity":1,"message":"796","line":220,"column":8,"nodeType":"837","messageId":"798","endLine":220,"endColumn":43},{"ruleId":"795","severity":1,"message":"838","line":220,"column":32,"nodeType":"803","messageId":"804","endLine":220,"endColumn":42},{"ruleId":"795","severity":1,"message":"796","line":228,"column":8,"nodeType":"837","messageId":"798","endLine":228,"endColumn":36},{"ruleId":"795","severity":1,"message":"838","line":228,"column":25,"nodeType":"803","messageId":"804","endLine":228,"endColumn":35},{"ruleId":"795","severity":1,"message":"796","line":325,"column":8,"nodeType":"837","messageId":"798","endLine":325,"endColumn":41},{"ruleId":"795","severity":1,"message":"838","line":325,"column":30,"nodeType":"803","messageId":"804","endLine":325,"endColumn":40},{"ruleId":"795","severity":1,"message":"796","line":334,"column":8,"nodeType":"837","messageId":"798","endLine":334,"endColumn":41},{"ruleId":"795","severity":1,"message":"838","line":334,"column":30,"nodeType":"803","messageId":"804","endLine":334,"endColumn":40},{"ruleId":"795","severity":1,"message":"796","line":342,"column":8,"nodeType":"837","messageId":"798","endLine":342,"endColumn":39},{"ruleId":"795","severity":1,"message":"838","line":342,"column":28,"nodeType":"803","messageId":"804","endLine":342,"endColumn":38},{"ruleId":"795","severity":1,"message":"796","line":391,"column":8,"nodeType":"837","messageId":"798","endLine":391,"endColumn":40},{"ruleId":"795","severity":1,"message":"838","line":391,"column":29,"nodeType":"803","messageId":"804","endLine":391,"endColumn":39},{"ruleId":"795","severity":1,"message":"796","line":399,"column":8,"nodeType":"837","messageId":"798","endLine":399,"endColumn":45},{"ruleId":"795","severity":1,"message":"838","line":399,"column":34,"nodeType":"803","messageId":"804","endLine":399,"endColumn":44},{"ruleId":"795","severity":1,"message":"796","line":407,"column":8,"nodeType":"837","messageId":"798","endLine":407,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":407,"column":26,"nodeType":"803","messageId":"804","endLine":407,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":463,"column":8,"nodeType":"837","messageId":"798","endLine":463,"endColumn":38},{"ruleId":"795","severity":1,"message":"838","line":463,"column":27,"nodeType":"803","messageId":"804","endLine":463,"endColumn":37},{"ruleId":"795","severity":1,"message":"796","line":471,"column":8,"nodeType":"837","messageId":"798","endLine":471,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":471,"column":26,"nodeType":"803","messageId":"804","endLine":471,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":522,"column":8,"nodeType":"837","messageId":"798","endLine":522,"endColumn":45},{"ruleId":"795","severity":1,"message":"838","line":522,"column":34,"nodeType":"803","messageId":"804","endLine":522,"endColumn":44},{"ruleId":"795","severity":1,"message":"796","line":561,"column":8,"nodeType":"837","messageId":"798","endLine":561,"endColumn":44},{"ruleId":"795","severity":1,"message":"838","line":561,"column":33,"nodeType":"803","messageId":"804","endLine":561,"endColumn":43},{"ruleId":"795","severity":1,"message":"796","line":600,"column":8,"nodeType":"837","messageId":"798","endLine":600,"endColumn":44},{"ruleId":"795","severity":1,"message":"838","line":600,"column":33,"nodeType":"803","messageId":"804","endLine":600,"endColumn":43},{"ruleId":"795","severity":1,"message":"796","line":649,"column":8,"nodeType":"837","messageId":"798","endLine":649,"endColumn":38},{"ruleId":"795","severity":1,"message":"838","line":649,"column":27,"nodeType":"803","messageId":"804","endLine":649,"endColumn":37},{"ruleId":"795","severity":1,"message":"796","line":657,"column":8,"nodeType":"837","messageId":"798","endLine":657,"endColumn":36},{"ruleId":"795","severity":1,"message":"838","line":657,"column":25,"nodeType":"803","messageId":"804","endLine":657,"endColumn":35},{"ruleId":"795","severity":1,"message":"796","line":701,"column":8,"nodeType":"837","messageId":"798","endLine":701,"endColumn":41},{"ruleId":"795","severity":1,"message":"838","line":701,"column":30,"nodeType":"803","messageId":"804","endLine":701,"endColumn":40},{"ruleId":"795","severity":1,"message":"796","line":761,"column":8,"nodeType":"837","messageId":"798","endLine":761,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":761,"column":26,"nodeType":"803","messageId":"804","endLine":761,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":808,"column":8,"nodeType":"837","messageId":"798","endLine":808,"endColumn":38},{"ruleId":"795","severity":1,"message":"838","line":808,"column":27,"nodeType":"803","messageId":"804","endLine":808,"endColumn":37},{"ruleId":"795","severity":1,"message":"796","line":816,"column":8,"nodeType":"837","messageId":"798","endLine":816,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":816,"column":26,"nodeType":"803","messageId":"804","endLine":816,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":824,"column":8,"nodeType":"837","messageId":"798","endLine":824,"endColumn":42},{"ruleId":"795","severity":1,"message":"838","line":824,"column":31,"nodeType":"803","messageId":"804","endLine":824,"endColumn":41},{"ruleId":"795","severity":1,"message":"796","line":868,"column":8,"nodeType":"837","messageId":"798","endLine":868,"endColumn":49},{"ruleId":"795","severity":1,"message":"838","line":868,"column":38,"nodeType":"803","messageId":"804","endLine":868,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":922,"column":8,"nodeType":"837","messageId":"798","endLine":922,"endColumn":41},{"ruleId":"795","severity":1,"message":"838","line":922,"column":30,"nodeType":"803","messageId":"804","endLine":922,"endColumn":40},{"ruleId":"795","severity":1,"message":"796","line":930,"column":8,"nodeType":"837","messageId":"798","endLine":930,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":930,"column":26,"nodeType":"803","messageId":"804","endLine":930,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":1039,"column":8,"nodeType":"837","messageId":"798","endLine":1039,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":1039,"column":26,"nodeType":"803","messageId":"804","endLine":1039,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":1080,"column":16,"nodeType":"837","messageId":"798","endLine":1080,"endColumn":46},{"ruleId":"795","severity":1,"message":"838","line":1080,"column":35,"nodeType":"803","messageId":"804","endLine":1080,"endColumn":45},{"ruleId":"795","severity":1,"message":"796","line":1088,"column":8,"nodeType":"837","messageId":"798","endLine":1088,"endColumn":38},{"ruleId":"795","severity":1,"message":"838","line":1088,"column":27,"nodeType":"803","messageId":"804","endLine":1088,"endColumn":37},{"ruleId":"795","severity":1,"message":"796","line":1152,"column":8,"nodeType":"837","messageId":"798","endLine":1152,"endColumn":36},{"ruleId":"795","severity":1,"message":"838","line":1152,"column":25,"nodeType":"803","messageId":"804","endLine":1152,"endColumn":35},{"ruleId":"795","severity":1,"message":"796","line":1208,"column":8,"nodeType":"837","messageId":"798","endLine":1208,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":1208,"column":26,"nodeType":"803","messageId":"804","endLine":1208,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":1274,"column":8,"nodeType":"837","messageId":"798","endLine":1274,"endColumn":38},{"ruleId":"795","severity":1,"message":"838","line":1274,"column":27,"nodeType":"803","messageId":"804","endLine":1274,"endColumn":37},{"ruleId":"795","severity":1,"message":"796","line":1282,"column":8,"nodeType":"837","messageId":"798","endLine":1282,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":1282,"column":26,"nodeType":"803","messageId":"804","endLine":1282,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":1290,"column":8,"nodeType":"837","messageId":"798","endLine":1290,"endColumn":40},{"ruleId":"795","severity":1,"message":"838","line":1290,"column":29,"nodeType":"803","messageId":"804","endLine":1290,"endColumn":39},{"ruleId":"795","severity":1,"message":"796","line":1338,"column":8,"nodeType":"837","messageId":"798","endLine":1338,"endColumn":42},{"ruleId":"795","severity":1,"message":"838","line":1338,"column":31,"nodeType":"803","messageId":"804","endLine":1338,"endColumn":41},{"ruleId":"795","severity":1,"message":"796","line":1408,"column":8,"nodeType":"837","messageId":"798","endLine":1408,"endColumn":38},{"ruleId":"795","severity":1,"message":"838","line":1408,"column":27,"nodeType":"803","messageId":"804","endLine":1408,"endColumn":37},{"ruleId":"795","severity":1,"message":"796","line":1416,"column":8,"nodeType":"837","messageId":"798","endLine":1416,"endColumn":42},{"ruleId":"795","severity":1,"message":"838","line":1416,"column":31,"nodeType":"803","messageId":"804","endLine":1416,"endColumn":41},{"ruleId":"795","severity":1,"message":"796","line":1463,"column":8,"nodeType":"837","messageId":"798","endLine":1463,"endColumn":41},{"ruleId":"795","severity":1,"message":"838","line":1463,"column":30,"nodeType":"803","messageId":"804","endLine":1463,"endColumn":40},{"ruleId":"795","severity":1,"message":"796","line":1471,"column":8,"nodeType":"837","messageId":"798","endLine":1471,"endColumn":43},{"ruleId":"795","severity":1,"message":"838","line":1471,"column":32,"nodeType":"803","messageId":"804","endLine":1471,"endColumn":42},{"ruleId":"795","severity":1,"message":"796","line":1483,"column":8,"nodeType":"837","messageId":"798","endLine":1483,"endColumn":44},{"ruleId":"795","severity":1,"message":"838","line":1483,"column":33,"nodeType":"803","messageId":"804","endLine":1483,"endColumn":43},{"ruleId":"795","severity":1,"message":"796","line":1491,"column":8,"nodeType":"837","messageId":"798","endLine":1491,"endColumn":44},{"ruleId":"795","severity":1,"message":"838","line":1491,"column":33,"nodeType":"803","messageId":"804","endLine":1491,"endColumn":43},{"ruleId":"795","severity":1,"message":"796","line":1501,"column":8,"nodeType":"837","messageId":"798","endLine":1501,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":1501,"column":26,"nodeType":"803","messageId":"804","endLine":1501,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":1590,"column":8,"nodeType":"837","messageId":"798","endLine":1590,"endColumn":43},{"ruleId":"795","severity":1,"message":"838","line":1590,"column":32,"nodeType":"803","messageId":"804","endLine":1590,"endColumn":42},{"ruleId":"795","severity":1,"message":"796","line":1655,"column":8,"nodeType":"837","messageId":"798","endLine":1655,"endColumn":39},{"ruleId":"795","severity":1,"message":"838","line":1655,"column":28,"nodeType":"803","messageId":"804","endLine":1655,"endColumn":38},{"ruleId":"795","severity":1,"message":"796","line":1663,"column":8,"nodeType":"837","messageId":"798","endLine":1663,"endColumn":36},{"ruleId":"795","severity":1,"message":"838","line":1663,"column":25,"nodeType":"803","messageId":"804","endLine":1663,"endColumn":35},{"ruleId":"795","severity":1,"message":"796","line":1730,"column":8,"nodeType":"837","messageId":"798","endLine":1730,"endColumn":37},{"ruleId":"795","severity":1,"message":"838","line":1730,"column":26,"nodeType":"803","messageId":"804","endLine":1730,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":1795,"column":8,"nodeType":"837","messageId":"798","endLine":1795,"endColumn":41},{"ruleId":"795","severity":1,"message":"838","line":1795,"column":30,"nodeType":"803","messageId":"804","endLine":1795,"endColumn":40},{"ruleId":"795","severity":1,"message":"796","line":1,"column":8,"nodeType":"837","messageId":"798","endLine":1,"endColumn":46},{"ruleId":"795","severity":1,"message":"839","line":1,"column":32,"nodeType":"803","messageId":"804","endLine":1,"endColumn":45},{"ruleId":"795","severity":1,"message":"796","line":4,"column":8,"nodeType":"837","messageId":"798","endLine":4,"endColumn":48},{"ruleId":"795","severity":1,"message":"839","line":4,"column":34,"nodeType":"803","messageId":"804","endLine":4,"endColumn":47},{"ruleId":"795","severity":1,"message":"796","line":7,"column":8,"nodeType":"837","messageId":"798","endLine":7,"endColumn":49},{"ruleId":"795","severity":1,"message":"839","line":7,"column":35,"nodeType":"803","messageId":"804","endLine":7,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":3,"column":16,"nodeType":"837","messageId":"798","endLine":3,"endColumn":57},{"ruleId":"795","severity":1,"message":"840","line":3,"column":36,"nodeType":"803","messageId":"841","endLine":3,"endColumn":45},{"ruleId":"795","severity":1,"message":"842","line":3,"column":47,"nodeType":"803","messageId":"841","endLine":3,"endColumn":56},{"ruleId":"795","severity":1,"message":"796","line":29,"column":31,"nodeType":"797","messageId":"798","endLine":29,"endColumn":64},{"ruleId":"795","severity":1,"message":"796","line":53,"column":37,"nodeType":"797","messageId":"798","endLine":53,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":68,"column":36,"nodeType":"797","messageId":"798","endLine":68,"endColumn":61},{"ruleId":"791","severity":1,"message":"792","line":72,"column":17,"nodeType":"793","messageId":"794","endLine":72,"endColumn":37,"suggestions":"843"},{"ruleId":"795","severity":1,"message":"796","line":81,"column":39,"nodeType":"797","messageId":"798","endLine":81,"endColumn":67},{"ruleId":"791","severity":1,"message":"792","line":85,"column":17,"nodeType":"793","messageId":"794","endLine":85,"endColumn":37,"suggestions":"844"},{"ruleId":"795","severity":1,"message":"796","line":94,"column":33,"nodeType":"797","messageId":"798","endLine":94,"endColumn":55},{"ruleId":"795","severity":1,"message":"812","line":94,"column":40,"nodeType":"803","messageId":"804","endLine":94,"endColumn":51},{"ruleId":"791","severity":1,"message":"792","line":99,"column":21,"nodeType":"793","messageId":"794","endLine":99,"endColumn":41,"suggestions":"845"},{"ruleId":"791","severity":1,"message":"792","line":102,"column":21,"nodeType":"793","messageId":"794","endLine":102,"endColumn":41,"suggestions":"846"},{"ruleId":"795","severity":1,"message":"796","line":114,"column":29,"nodeType":"797","messageId":"798","endLine":114,"endColumn":56},{"ruleId":"791","severity":1,"message":"792","line":119,"column":21,"nodeType":"793","messageId":"794","endLine":119,"endColumn":41,"suggestions":"847"},{"ruleId":"791","severity":1,"message":"792","line":122,"column":21,"nodeType":"793","messageId":"794","endLine":122,"endColumn":41,"suggestions":"848"},{"ruleId":"791","severity":1,"message":"792","line":125,"column":21,"nodeType":"793","messageId":"794","endLine":125,"endColumn":41,"suggestions":"849"},{"ruleId":"791","severity":1,"message":"792","line":128,"column":21,"nodeType":"793","messageId":"794","endLine":128,"endColumn":41,"suggestions":"850"},{"ruleId":"795","severity":1,"message":"796","line":139,"column":36,"nodeType":"797","messageId":"798","endLine":139,"endColumn":74},{"ruleId":"795","severity":1,"message":"796","line":154,"column":32,"nodeType":"797","messageId":"798","endLine":154,"endColumn":65},{"ruleId":"791","severity":1,"message":"792","line":159,"column":17,"nodeType":"793","messageId":"794","endLine":159,"endColumn":23,"suggestions":"851"},{"ruleId":"795","severity":1,"message":"796","line":167,"column":34,"nodeType":"797","messageId":"798","endLine":167,"endColumn":67},{"ruleId":"791","severity":1,"message":"792","line":171,"column":16,"nodeType":"793","messageId":"794","endLine":171,"endColumn":39,"suggestions":"852"},{"ruleId":"791","severity":1,"message":"792","line":171,"column":47,"nodeType":"793","messageId":"794","endLine":171,"endColumn":70,"suggestions":"853"},{"ruleId":"795","severity":1,"message":"796","line":179,"column":42,"nodeType":"797","messageId":"798","endLine":179,"endColumn":53},{"ruleId":"791","severity":1,"message":"792","line":186,"column":17,"nodeType":"793","messageId":"794","endLine":186,"endColumn":47,"suggestions":"854"},{"ruleId":"795","severity":1,"message":"796","line":194,"column":38,"nodeType":"797","messageId":"798","endLine":194,"endColumn":49},{"ruleId":"791","severity":1,"message":"792","line":198,"column":17,"nodeType":"793","messageId":"794","endLine":198,"endColumn":40,"suggestions":"855"},{"ruleId":"791","severity":1,"message":"792","line":199,"column":17,"nodeType":"793","messageId":"794","endLine":199,"endColumn":47,"suggestions":"856"},{"ruleId":"795","severity":1,"message":"796","line":207,"column":28,"nodeType":"797","messageId":"798","endLine":207,"endColumn":53},{"ruleId":"795","severity":1,"message":"796","line":222,"column":30,"nodeType":"797","messageId":"798","endLine":222,"endColumn":52},{"ruleId":"795","severity":1,"message":"812","line":222,"column":37,"nodeType":"803","messageId":"804","endLine":222,"endColumn":48},{"ruleId":"791","severity":1,"message":"792","line":226,"column":17,"nodeType":"793","messageId":"794","endLine":226,"endColumn":37,"suggestions":"857"},{"ruleId":"791","severity":1,"message":"792","line":14,"column":9,"nodeType":"793","messageId":"794","endLine":14,"endColumn":48,"suggestions":"858"},{"ruleId":"791","severity":1,"message":"792","line":24,"column":34,"nodeType":"793","messageId":"794","endLine":24,"endColumn":79},{"ruleId":"791","severity":1,"message":"792","line":109,"column":46,"nodeType":"793","messageId":"794","endLine":109,"endColumn":53,"suggestions":"859"},{"ruleId":"795","severity":1,"message":"796","line":12,"column":24,"nodeType":"797","messageId":"798","endLine":12,"endColumn":51},{"ruleId":"795","severity":1,"message":"796","line":6,"column":8,"nodeType":"837","messageId":"798","endLine":6,"endColumn":41},{"ruleId":"795","severity":1,"message":"860","line":6,"column":29,"nodeType":"803","messageId":"804","endLine":6,"endColumn":40},{"ruleId":"791","severity":1,"message":"792","line":61,"column":48,"nodeType":"793","messageId":"794","endLine":61,"endColumn":66},{"ruleId":"791","severity":1,"message":"792","line":61,"column":193,"nodeType":"793","messageId":"794","endLine":61,"endColumn":214},{"ruleId":"791","severity":1,"message":"792","line":61,"column":230,"nodeType":"793","messageId":"794","endLine":61,"endColumn":255},{"ruleId":"791","severity":1,"message":"792","line":113,"column":67,"nodeType":"793","messageId":"794","endLine":113,"endColumn":88},{"ruleId":"791","severity":1,"message":"792","line":191,"column":117,"nodeType":"793","messageId":"794","endLine":191,"endColumn":142},{"ruleId":"791","severity":1,"message":"792","line":194,"column":26,"nodeType":"793","messageId":"794","endLine":194,"endColumn":51},{"ruleId":"795","severity":1,"message":"812","line":109,"column":22,"nodeType":"803","messageId":"804","endLine":109,"endColumn":33},{"ruleId":"795","severity":1,"message":"812","line":157,"column":21,"nodeType":"803","messageId":"804","endLine":157,"endColumn":32},{"ruleId":"795","severity":1,"message":"812","line":177,"column":22,"nodeType":"803","messageId":"804","endLine":177,"endColumn":33},{"ruleId":"795","severity":1,"message":"796","line":199,"column":17,"nodeType":"797","messageId":"798","endLine":199,"endColumn":65},{"ruleId":"795","severity":1,"message":"812","line":199,"column":50,"nodeType":"803","messageId":"804","endLine":199,"endColumn":61},{"ruleId":"795","severity":1,"message":"812","line":205,"column":58,"nodeType":"803","messageId":"804","endLine":205,"endColumn":69},{"ruleId":"795","severity":1,"message":"812","line":221,"column":17,"nodeType":"803","messageId":"804","endLine":221,"endColumn":28},{"ruleId":"795","severity":1,"message":"796","line":34,"column":26,"nodeType":"797","messageId":"798","endLine":34,"endColumn":37},{"ruleId":"795","severity":1,"message":"796","line":49,"column":35,"nodeType":"797","messageId":"798","endLine":49,"endColumn":287},{"ruleId":"795","severity":1,"message":"796","line":60,"column":27,"nodeType":"797","messageId":"798","endLine":60,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":78,"column":25,"nodeType":"797","messageId":"798","endLine":78,"endColumn":50},{"ruleId":"795","severity":1,"message":"796","line":103,"column":27,"nodeType":"797","messageId":"798","endLine":103,"endColumn":52},{"ruleId":"795","severity":1,"message":"796","line":133,"column":26,"nodeType":"797","messageId":"798","endLine":133,"endColumn":61},{"ruleId":"795","severity":1,"message":"796","line":143,"column":26,"nodeType":"797","messageId":"798","endLine":143,"endColumn":51},{"ruleId":"791","severity":1,"message":"792","line":153,"column":69,"nodeType":"793","messageId":"794","endLine":153,"endColumn":116,"suggestions":"861"},{"ruleId":"791","severity":1,"message":"792","line":144,"column":60,"nodeType":"793","messageId":"794","endLine":144,"endColumn":65,"suggestions":"862"},{"ruleId":"791","severity":1,"message":"792","line":148,"column":105,"nodeType":"793","messageId":"794","endLine":148,"endColumn":110,"suggestions":"863"},{"ruleId":"791","severity":1,"message":"792","line":155,"column":100,"nodeType":"793","messageId":"794","endLine":155,"endColumn":105,"suggestions":"864"},{"ruleId":"791","severity":1,"message":"792","line":168,"column":105,"nodeType":"793","messageId":"794","endLine":168,"endColumn":110,"suggestions":"865"},{"ruleId":"795","severity":1,"message":"796","line":7,"column":18,"nodeType":"797","messageId":"798","endLine":7,"endColumn":23},{"ruleId":"795","severity":1,"message":"796","line":10,"column":18,"nodeType":"797","messageId":"798","endLine":10,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":4,"column":38,"nodeType":"797","messageId":"798","endLine":4,"endColumn":43},{"ruleId":"791","severity":1,"message":"792","line":19,"column":62,"nodeType":"793","messageId":"794","endLine":19,"endColumn":67,"suggestions":"866"},{"ruleId":"791","severity":1,"message":"792","line":22,"column":22,"nodeType":"793","messageId":"794","endLine":22,"endColumn":27,"suggestions":"867"},{"ruleId":"791","severity":1,"message":"792","line":23,"column":42,"nodeType":"793","messageId":"794","endLine":23,"endColumn":47,"suggestions":"868"},{"ruleId":"791","severity":1,"message":"792","line":27,"column":75,"nodeType":"793","messageId":"794","endLine":27,"endColumn":80,"suggestions":"869"},{"ruleId":"791","severity":1,"message":"792","line":27,"column":156,"nodeType":"793","messageId":"794","endLine":27,"endColumn":161,"suggestions":"870"},{"ruleId":"795","severity":1,"message":"796","line":10,"column":20,"nodeType":"797","messageId":"798","endLine":10,"endColumn":25},{"ruleId":"795","severity":1,"message":"796","line":6,"column":18,"nodeType":"797","messageId":"798","endLine":6,"endColumn":23},{"ruleId":"795","severity":1,"message":"796","line":4,"column":16,"nodeType":"837","messageId":"798","endLine":4,"endColumn":33},{"ruleId":"795","severity":1,"message":"796","line":3,"column":25,"nodeType":"797","messageId":"798","endLine":3,"endColumn":57},{"ruleId":"791","severity":1,"message":"792","line":18,"column":22,"nodeType":"793","messageId":"794","endLine":18,"endColumn":48},{"ruleId":"791","severity":1,"message":"792","line":18,"column":50,"nodeType":"793","messageId":"794","endLine":18,"endColumn":74},"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["871"],["872"],["873"],"Argument 'files' should be typed with a non-any type.","Identifier","anyTypedArg",["874"],["875"],["876"],["877"],["878"],["879"],["880"],"Argument 'values' should be typed with a non-any type.",["881"],["882"],["883"],["884"],["885"],["886"],["887"],["888"],["889"],["890"],["891"],["892"],["893"],"FunctionExpression",["894"],["895"],["896"],["897"],["898"],["899"],["900"],["901"],["902"],["903"],"FunctionDeclaration","Argument 'props' should be typed with a non-any type.","Argument 'enumType' should be typed with a non-any type.","Argument 'sourceDoc' should be typed.","missingArgType","Argument 'targetDoc' should be typed.",["904"],["905"],["906"],["907"],["908"],["909"],["910"],["911"],["912"],["913"],["914"],["915"],["916"],["917"],["918"],["919"],["920"],"Argument 'errors' should be typed with a non-any type.",["921"],["922"],["923"],["924"],["925"],["926"],["927"],["928"],["929"],["930"],{"messageId":"931","fix":"932","desc":"933"},{"messageId":"931","fix":"934","desc":"933"},{"messageId":"931","fix":"935","desc":"933"},{"messageId":"931","fix":"936","desc":"933"},{"messageId":"931","fix":"937","desc":"933"},{"messageId":"931","fix":"938","desc":"933"},{"messageId":"931","fix":"939","desc":"933"},{"messageId":"931","fix":"940","desc":"933"},{"messageId":"931","fix":"941","desc":"933"},{"messageId":"931","fix":"942","desc":"933"},{"messageId":"931","fix":"943","desc":"933"},{"messageId":"931","fix":"944","desc":"933"},{"messageId":"931","fix":"945","desc":"933"},{"messageId":"931","fix":"946","desc":"933"},{"messageId":"931","fix":"947","desc":"933"},{"messageId":"931","fix":"948","desc":"933"},{"messageId":"931","fix":"949","desc":"933"},{"messageId":"931","fix":"950","desc":"933"},{"messageId":"931","fix":"951","desc":"933"},{"messageId":"931","fix":"952","desc":"933"},{"messageId":"931","fix":"953","desc":"933"},{"messageId":"931","fix":"954","desc":"933"},{"messageId":"931","fix":"955","desc":"933"},{"messageId":"931","fix":"956","desc":"933"},{"messageId":"931","fix":"957","desc":"933"},{"messageId":"931","fix":"958","desc":"933"},{"messageId":"931","fix":"959","desc":"933"},{"messageId":"931","fix":"960","desc":"933"},{"messageId":"931","fix":"961","desc":"933"},{"messageId":"931","fix":"962","desc":"933"},{"messageId":"931","fix":"963","desc":"933"},{"messageId":"931","fix":"964","desc":"933"},{"messageId":"931","fix":"965","desc":"933"},{"messageId":"931","fix":"966","desc":"933"},{"messageId":"931","fix":"967","desc":"933"},{"messageId":"931","fix":"968","desc":"933"},{"messageId":"931","fix":"969","desc":"933"},{"messageId":"931","fix":"970","desc":"933"},{"messageId":"931","fix":"971","desc":"933"},{"messageId":"931","fix":"972","desc":"933"},{"messageId":"931","fix":"973","desc":"933"},{"messageId":"931","fix":"974","desc":"933"},{"messageId":"931","fix":"975","desc":"933"},{"messageId":"931","fix":"976","desc":"933"},{"messageId":"931","fix":"977","desc":"933"},{"messageId":"931","fix":"978","desc":"933"},{"messageId":"931","fix":"979","desc":"933"},{"messageId":"931","fix":"980","desc":"933"},{"messageId":"931","fix":"981","desc":"933"},{"messageId":"931","fix":"982","desc":"933"},{"messageId":"931","fix":"983","desc":"933"},{"messageId":"931","fix":"984","desc":"933"},{"messageId":"931","fix":"985","desc":"933"},{"messageId":"931","fix":"986","desc":"933"},{"messageId":"931","fix":"987","desc":"933"},{"messageId":"931","fix":"988","desc":"933"},{"messageId":"931","fix":"989","desc":"933"},{"messageId":"931","fix":"990","desc":"933"},{"messageId":"931","fix":"991","desc":"933"},{"messageId":"931","fix":"992","desc":"933"},"suggestOptionalChain",{"range":"993","text":"994"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"995","text":"994"},{"range":"996","text":"994"},{"range":"997","text":"994"},{"range":"998","text":"994"},{"range":"999","text":"994"},{"range":"1000","text":"994"},{"range":"1001","text":"994"},{"range":"1002","text":"994"},{"range":"1003","text":"994"},{"range":"1004","text":"994"},{"range":"1005","text":"994"},{"range":"1006","text":"994"},{"range":"1007","text":"994"},{"range":"1008","text":"994"},{"range":"1009","text":"994"},{"range":"1010","text":"994"},{"range":"1011","text":"994"},{"range":"1012","text":"994"},{"range":"1013","text":"994"},{"range":"1014","text":"994"},{"range":"1015","text":"994"},{"range":"1016","text":"994"},{"range":"1017","text":"994"},{"range":"1018","text":"994"},{"range":"1019","text":"994"},{"range":"1020","text":"994"},{"range":"1021","text":"994"},{"range":"1022","text":"994"},{"range":"1023","text":"994"},{"range":"1024","text":"994"},{"range":"1025","text":"994"},{"range":"1026","text":"994"},{"range":"1027","text":"994"},{"range":"1028","text":"994"},{"range":"1029","text":"994"},{"range":"1030","text":"994"},{"range":"1031","text":"994"},{"range":"1032","text":"994"},{"range":"1033","text":"994"},{"range":"1034","text":"994"},{"range":"1035","text":"994"},{"range":"1036","text":"994"},{"range":"1037","text":"994"},{"range":"1038","text":"994"},{"range":"1039","text":"994"},{"range":"1040","text":"994"},{"range":"1041","text":"994"},{"range":"1042","text":"994"},{"range":"1043","text":"994"},{"range":"1044","text":"994"},{"range":"1045","text":"994"},{"range":"1046","text":"994"},{"range":"1047","text":"994"},{"range":"1048","text":"994"},{"range":"1049","text":"994"},{"range":"1050","text":"994"},{"range":"1051","text":"994"},{"range":"1052","text":"994"},{"range":"1053","text":"994"},[1342,1343],"?",[1505,1506],[1895,1896],[1458,1459],[1625,1626],[1860,1861],[1953,1954],[2184,2185],[2220,2221],[2268,2269],[2519,2520],[2562,2563],[2578,2579],[2601,2602],[2643,2644],[2727,2728],[4386,4387],[4789,4790],[5299,5300],[5463,5464],[1744,1745],[3762,3763],[3915,3916],[3195,3196],[3751,3752],[3810,3811],[4299,4300],[4807,4808],[5308,5309],[5369,5370],[5989,5990],[6169,6170],[6550,6551],[2899,2900],[3397,3398],[3930,3931],[4054,4055],[4619,4620],[4753,4754],[4890,4891],[5026,5027],[6170,6171],[6558,6559],[6589,6590],[7136,7137],[7495,7496],[7554,7555],[8388,8389],[484,485],[5957,5958],[6418,6419],[8333,8334],[8953,8954],[9547,9548],[10417,10418],[642,643],[806,807],[976,977],[1213,1214],[1294,1295]]