[{"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx":"1","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx":"2","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidModalDetails.tsx":"3","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SocialsForm.tsx":"4","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\DescriptionForm.tsx":"5","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\ProfileSettingsPage.tsx":"6","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityTab.tsx":"7","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityForm.tsx":"8","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts":"9","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx":"10","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts":"11","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts":"12","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\MyProfile.tsx":"13","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\notification.ts":"14","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx":"15","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\AccountBio.tsx":"16","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\taskStatus.ts":"17","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\account\\AccountForm.tsx":"18","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\PublicProfileStore.tsx":"19","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx":"20","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx":"21","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTop.tsx":"22","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx":"23","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts":"24","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormUploadedImagesPreview.tsx":"25","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\copyStyle.ts":"26","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx":"27","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\ActiveTasks.tsx":"28","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\LanguageForm.tsx":"29","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Review.tsx":"30","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\PublicProfilePage.tsx":"31","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTopPlaceholder.tsx":"32","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx":"33","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx":"34","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotificationAlert.tsx":"35","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidPageForm.tsx":"36","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx":"37","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ReviewSummary.tsx":"38","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\reviews\\TaskrReviews.tsx":"39","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SkillsForm.tsx":"40","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottom.tsx":"41","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileBox.tsx":"42","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx":"43","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx":"44","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx":"45","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx":"46","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\skill.tsx":"47","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPlaceholder.tsx":"48","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottomPlaceholder.tsx":"49","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskSection.tsx":"50","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCard.tsx":"51","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCardSlider.tsx":"52","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\profileStore.tsx":"53","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\ProfilePage.tsx":"54","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx":"55","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx":"56","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\deliveryTypes.ts":"57","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx":"58","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx":"59","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx":"60","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx":"61","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTable.tsx":"62","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx":"63","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskPlaceholder.tsx":"64","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\ProfileReviews\\ProfileReviews.tsx":"65","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\SEO.tsx":"66","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\LocationFinder.tsx":"67","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx":"68","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx":"69","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx":"70","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\account\\AccountTab.tsx":"71","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx":"72","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\chatStore.tsx":"73","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx":"74","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskBidItem.tsx":"75","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTab.tsx":"76","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileReviews.tsx":"77","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx":"78","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\TaskrChatTab.tsx":"79","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\InboxPage.tsx":"80","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\RunnerChatTab.tsx":"81","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatsPlaceholder.tsx":"82","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx":"83","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx":"84","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx":"85","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getErrors.tsx":"86","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx":"87","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatBox.tsx":"88","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatContainer.tsx":"89","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePage.tsx":"90","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageBox.tsx":"91","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageTopBox.tsx":"92","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\MessageBodyContainer.tsx":"93","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\TextMessage.tsx":"94","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx":"95","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx":"96","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx":"97","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx":"98","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx":"99","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPage.tsx":"100","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageInput.tsx":"101","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\enumFunctions.tsx":"102","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\bid.tsx":"103","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx":"104","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Preview.tsx":"105","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\ReceiverProfile.tsx":"106","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx":"107","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx":"108","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Rater.tsx":"109","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BillingInformation.tsx":"110","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx":"111","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\TagLine.tsx":"112","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\TaglineForm.tsx":"113","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePagePlaceholder.tsx":"114"},{"size":248,"mtime":1609352810131,"results":"115","hashOfConfig":"116"},{"size":647,"mtime":1609418891029,"results":"117","hashOfConfig":"116"},{"size":4745,"mtime":1612513693851,"results":"118","hashOfConfig":"116"},{"size":6730,"mtime":1611859822550,"results":"119","hashOfConfig":"116"},{"size":1691,"mtime":1611859825856,"results":"120","hashOfConfig":"116"},{"size":2278,"mtime":1612943743947,"results":"121","hashOfConfig":"116"},{"size":1432,"mtime":1612971374189,"results":"122","hashOfConfig":"116"},{"size":5151,"mtime":1612970242407,"results":"123","hashOfConfig":"116"},{"size":6019,"mtime":1613861806829,"results":"124","hashOfConfig":"116"},{"size":3332,"mtime":1612969136210,"results":"125","hashOfConfig":"116"},{"size":425,"mtime":1607677411935,"results":"126","hashOfConfig":"116"},{"size":1121,"mtime":1613502391644,"results":"127","hashOfConfig":"116"},{"size":1848,"mtime":1612646562080,"results":"128","hashOfConfig":"116"},{"size":152,"mtime":1612000681944,"results":"129","hashOfConfig":"116"},{"size":2363,"mtime":1612511548568,"results":"130","hashOfConfig":"116"},{"size":7329,"mtime":1611859840620,"results":"131","hashOfConfig":"116"},{"size":87,"mtime":1611321195156,"results":"132","hashOfConfig":"116"},{"size":23297,"mtime":1612896117857,"results":"133","hashOfConfig":"116"},{"size":1991,"mtime":1613208372451,"results":"134","hashOfConfig":"116"},{"size":3325,"mtime":1613597582061,"results":"135","hashOfConfig":"116"},{"size":3275,"mtime":1613815435896,"results":"136","hashOfConfig":"116"},{"size":4182,"mtime":1613202306047,"results":"137","hashOfConfig":"116"},{"size":85427,"mtime":1613852829246,"results":"138","hashOfConfig":"116"},{"size":655,"mtime":1612250232817,"results":"139","hashOfConfig":"116"},{"size":1471,"mtime":1610721239863,"results":"140","hashOfConfig":"116"},{"size":318,"mtime":1611077557281,"results":"141","hashOfConfig":"116"},{"size":1038,"mtime":1609509530471,"results":"142","hashOfConfig":"116"},{"size":4695,"mtime":1613519497759,"results":"143","hashOfConfig":"116"},{"size":3231,"mtime":1611859768658,"results":"144","hashOfConfig":"116"},{"size":1398,"mtime":1611871615943,"results":"145","hashOfConfig":"116"},{"size":2506,"mtime":1613326747878,"results":"146","hashOfConfig":"116"},{"size":574,"mtime":1613116335194,"results":"147","hashOfConfig":"116"},{"size":1517,"mtime":1610351220877,"results":"148","hashOfConfig":"116"},{"size":347,"mtime":1610565679053,"results":"149","hashOfConfig":"116"},{"size":2254,"mtime":1613928410312,"results":"150","hashOfConfig":"116"},{"size":3196,"mtime":1610305391187,"results":"151","hashOfConfig":"116"},{"size":2720,"mtime":1609262456322,"results":"152","hashOfConfig":"116"},{"size":1381,"mtime":1611684354728,"results":"153","hashOfConfig":"116"},{"size":950,"mtime":1611873870810,"results":"154","hashOfConfig":"116"},{"size":3081,"mtime":1611859788799,"results":"155","hashOfConfig":"116"},{"size":1986,"mtime":1613121278494,"results":"156","hashOfConfig":"116"},{"size":2085,"mtime":1613118852401,"results":"157","hashOfConfig":"116"},{"size":873,"mtime":1612638913198,"results":"158","hashOfConfig":"116"},{"size":588,"mtime":1610965734551,"results":"159","hashOfConfig":"116"},{"size":1144,"mtime":1610306281019,"results":"160","hashOfConfig":"116"},{"size":16610,"mtime":1613323962618,"results":"161","hashOfConfig":"116"},{"size":80,"mtime":1611524207827,"results":"162","hashOfConfig":"116"},{"size":2052,"mtime":1613927637138,"results":"163","hashOfConfig":"116"},{"size":1666,"mtime":1613203032804,"results":"164","hashOfConfig":"116"},{"size":1126,"mtime":1613325377750,"results":"165","hashOfConfig":"116"},{"size":2669,"mtime":1613328649705,"results":"166","hashOfConfig":"116"},{"size":1779,"mtime":1613215523315,"results":"167","hashOfConfig":"116"},{"size":8196,"mtime":1613226925656,"results":"168","hashOfConfig":"116"},{"size":3561,"mtime":1612878908163,"results":"169","hashOfConfig":"116"},{"size":5373,"mtime":1612690390344,"results":"170","hashOfConfig":"116"},{"size":2420,"mtime":1611872571052,"results":"171","hashOfConfig":"116"},{"size":57,"mtime":1611149087400,"results":"172","hashOfConfig":"116"},{"size":2902,"mtime":1613858003828,"results":"173","hashOfConfig":"116"},{"size":5343,"mtime":1611166930733,"results":"174","hashOfConfig":"116"},{"size":4466,"mtime":1610532359295,"results":"175","hashOfConfig":"116"},{"size":234,"mtime":1609429211018,"results":"176","hashOfConfig":"116"},{"size":4933,"mtime":1611482453899,"results":"177","hashOfConfig":"116"},{"size":3257,"mtime":1613328738998,"results":"178","hashOfConfig":"116"},{"size":4097,"mtime":1613326355252,"results":"179","hashOfConfig":"116"},{"size":1436,"mtime":1613327151252,"results":"180","hashOfConfig":"116"},{"size":1946,"mtime":1610571843042,"results":"181","hashOfConfig":"116"},{"size":3904,"mtime":1611054324932,"results":"182","hashOfConfig":"116"},{"size":2236,"mtime":1613832001162,"results":"183","hashOfConfig":"116"},{"size":1010,"mtime":1610444548705,"results":"184","hashOfConfig":"116"},{"size":2809,"mtime":1610014121445,"results":"185","hashOfConfig":"116"},{"size":2430,"mtime":1612895732709,"results":"186","hashOfConfig":"116"},{"size":964,"mtime":1609411308644,"results":"187","hashOfConfig":"116"},{"size":4448,"mtime":1613917364467,"results":"188","hashOfConfig":"116"},{"size":4622,"mtime":1613513375176,"results":"189","hashOfConfig":"116"},{"size":2418,"mtime":1612728486968,"results":"190","hashOfConfig":"116"},{"size":1261,"mtime":1612646507065,"results":"191","hashOfConfig":"116"},{"size":1114,"mtime":1611871715394,"results":"192","hashOfConfig":"116"},{"size":1895,"mtime":1612882184524,"results":"193","hashOfConfig":"116"},{"size":1463,"mtime":1613597120540,"results":"194","hashOfConfig":"116"},{"size":1217,"mtime":1613910425530,"results":"195","hashOfConfig":"116"},{"size":1510,"mtime":1613831547278,"results":"196","hashOfConfig":"116"},{"size":5700,"mtime":1613519383901,"results":"197","hashOfConfig":"116"},{"size":2386,"mtime":1613857862507,"results":"198","hashOfConfig":"116"},{"size":4664,"mtime":1611171323680,"results":"199","hashOfConfig":"116"},{"size":3929,"mtime":1610816256671,"results":"200","hashOfConfig":"116"},{"size":468,"mtime":1610361256727,"results":"201","hashOfConfig":"116"},{"size":738,"mtime":1610275409302,"results":"202","hashOfConfig":"116"},{"size":2380,"mtime":1613597737089,"results":"203","hashOfConfig":"116"},{"size":1136,"mtime":1613641459235,"results":"204","hashOfConfig":"116"},{"size":1963,"mtime":1613910493828,"results":"205","hashOfConfig":"116"},{"size":944,"mtime":1613689650142,"results":"206","hashOfConfig":"116"},{"size":951,"mtime":1613853246435,"results":"207","hashOfConfig":"116"},{"size":1025,"mtime":1613828307361,"results":"208","hashOfConfig":"116"},{"size":1475,"mtime":1613664673210,"results":"209","hashOfConfig":"116"},{"size":6925,"mtime":1611149664872,"results":"210","hashOfConfig":"116"},{"size":2258,"mtime":1611786214717,"results":"211","hashOfConfig":"116"},{"size":271,"mtime":1609353715022,"results":"212","hashOfConfig":"116"},{"size":2485,"mtime":1609666422717,"results":"213","hashOfConfig":"116"},{"size":2302,"mtime":1611485298934,"results":"214","hashOfConfig":"116"},{"size":5361,"mtime":1613928562168,"results":"215","hashOfConfig":"116"},{"size":2118,"mtime":1613719217234,"results":"216","hashOfConfig":"116"},{"size":380,"mtime":1611148501315,"results":"217","hashOfConfig":"116"},{"size":69,"mtime":1612475780015,"results":"218","hashOfConfig":"116"},{"size":4188,"mtime":1613917675818,"results":"219","hashOfConfig":"116"},{"size":956,"mtime":1611077701988,"results":"220","hashOfConfig":"116"},{"size":1602,"mtime":1613853723712,"results":"221","hashOfConfig":"116"},{"size":3416,"mtime":1613912306228,"results":"222","hashOfConfig":"116"},{"size":1860,"mtime":1610307610747,"results":"223","hashOfConfig":"116"},{"size":691,"mtime":1611682176899,"results":"224","hashOfConfig":"116"},{"size":943,"mtime":1612897079824,"results":"225","hashOfConfig":"116"},{"size":2777,"mtime":1612599809177,"results":"226","hashOfConfig":"116"},{"size":1111,"mtime":1611859887411,"results":"227","hashOfConfig":"116"},{"size":1621,"mtime":1611859810799,"results":"228","hashOfConfig":"116"},{"size":2423,"mtime":1613910108980,"results":"229","hashOfConfig":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"233"},"1bnsgpt",{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"236"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"244"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":88,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"299"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"236"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"261"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"244"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"236"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"239"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"244"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"236"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"309"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"393"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"253"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"264"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"302"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"236"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"472"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"472"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\FullPageSpinner.tsx",["495"],"﻿import { Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Loader(){\r\n    return (\r\n        <div className=\"middle_position\">\r\n            <Spinner size=\"xl\" color=\"brand.100\"  />\r\n        </div>\r\n    )\r\n}",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\reminders\\SignUpReminder.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidModalDetails.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SocialsForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\DescriptionForm.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\ProfileSettingsPage.tsx",["496","497","498"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport { Box, SimpleGrid, Tabs, TabList, TabPanels, TabPanel, Tab } from \"@chakra-ui/react\";\r\nimport AccountTab from \"./account/AccountTab\";\r\nimport rootStoreContext from \"../../../application/stores/rootstore\";\r\nimport Loader from \"../../../application/appLayout/FullPageSpinner\";\r\nimport BillingInformation from \"./billing/BillingInformation\";\r\nimport SecurityTab from \"./security/SecurityTab\";\r\n\r\nconst ProfileSettingsPage = () => {\r\n    const {user} = useContext(rootStoreContext).authStore;\r\n    const {privateProfile, getPrivateProfile, loadingInitial} = useContext(rootStoreContext).profileStore;\r\n    useEffect(() => {\r\n        if(privateProfile === null){\r\n            getPrivateProfile();\r\n        }\r\n    }, [getPrivateProfile, privateProfile])\r\n    if(loadingInitial || privateProfile === null) return <Loader />\r\n    return (\r\n        <Box className=\"settings__container\">\r\n            <Box className=\"main\">\r\n                <Tabs isLazy>\r\n                <SimpleGrid templateColumns={{xl: \"0.5fr 2fr\", lg: \"0.5fr 2fr\", md: \"0.8fr 2fr\", sm: \"1fr\"}} spacing=\"2em\">\r\n             <Box>\r\n                 <TabList className=\"settings__tab__list\">\r\n                     <Tab>Account</Tab>\r\n                     <Tab>Billing Information</Tab>\r\n                     <Tab>Security</Tab>\r\n                     <Tab>Other</Tab>\r\n                 </TabList>\r\n             </Box>\r\n                    <Box>\r\n                      <TabPanels>\r\n                          <TabPanel className=\"settings__tab__panel\"><AccountTab user={user!} privateProfile={privateProfile} /></TabPanel>\r\n                          <TabPanel className=\"settings__tab__panel\"><BillingInformation user={user!} privateProfile={privateProfile} /></TabPanel>\r\n                          <TabPanel className=\"settings__tab__panel\"><SecurityTab user={user!} privateProfile={privateProfile} /></TabPanel>\r\n                          <TabPanel className=\"settings__tab__panel\">apple</TabPanel>\r\n                      </TabPanels>  \r\n                    </Box>\r\n                </SimpleGrid>\r\n                </Tabs>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default observer(ProfileSettingsPage);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityTab.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\security\\SecurityForm.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\api\\agent.ts",["499","500","501","502"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\authStore.tsx",["503","504","505","506","507","508"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\reportWebVitals.ts",["509"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\rootstore.ts",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\MyProfile.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\notification.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidTable.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\AccountBio.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\taskStatus.ts",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\account\\AccountForm.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\PublicProfileStore.tsx",["510","511"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {IPublicProfile} from \"../../infrastructure/models/profile\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\nimport {PublicProfileRequest} from \"../api/agent\";\r\nimport {ITask} from \"../../infrastructure/models/task\";\r\n\r\nexport class PublicProfileStore {\r\n    rootStore: RootStore\r\n\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable loadingProfileDetails  = false;\r\n    @observable publicProfileDetails : IPublicProfile | null = null;\r\n    @observable publicProfileTasks : ITask[] | null = null;\r\n    @observable loadingProfileTasks = false;\r\n    \r\n    @action getPublicProfileDetails = async (userId: string) => {\r\n        this.loadingProfileDetails = true;\r\n        try{\r\n            const details = await PublicProfileRequest.getPublicProfileDetails(userId);\r\n            runInAction(() => {\r\n                this.publicProfileDetails = details;\r\n                if(this.rootStore.authStore.user?.id === this.publicProfileDetails.id){\r\n                    this.publicProfileDetails.isUser = true;\r\n                }\r\n                this.loadingProfileDetails = false;\r\n            })\r\n        }catch (e) {\r\n           runInAction(() => this.loadingProfileDetails = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n    @action getPublicProfileTasks = async (userId: string) => {\r\n        this.loadingProfileTasks = true;\r\n        try{\r\n            const tasks = await PublicProfileRequest.getPublicProfileTasks(userId);\r\n            runInAction(() => {\r\n                this.publicProfileTasks = tasks;\r\n                this.loadingProfileTasks = false;\r\n            })\r\n        }catch (e) {\r\n           runInAction(() => this.loadingProfileTasks = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\app\\App.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\TaskItem.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\icons\\Icons.tsx",["512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\assets\\css\\chakra-ui-theme.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormUploadedImagesPreview.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\copyStyle.ts",["600","601","602"],"﻿// function to copy style into an external window\r\n// @ts-ignore\r\nexport default function copyStyles(sourceDoc, targetDoc) {\r\n    Array.from(\r\n        sourceDoc.querySelectorAll('link[rel=\"stylesheet\"], style')\r\n    ).forEach((link: any) => {\r\n        targetDoc.head.appendChild(link.cloneNode(true));\r\n    });\r\n}\r\n",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Alert.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\ActiveTasks.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\LanguageForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Review.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\PublicProfilePage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsTopPlaceholder.tsx",["603"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryPage.tsx",["604"],"﻿import React, {useContext, useEffect} from \"react\";\r\nimport QueryActions from \"./QueryActions\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport QueryBody from \"./QueryBody\";\r\nimport {StringParam, useQueryParams} from \"use-query-params\";\r\n\r\nconst QueryPage = () => {\r\n    const {loadingInitial, tasks, getAllJobs, taskQueryValues, setTasksQueryParams} = useContext(rootStoreContext).taskStore;\r\n    const [queryParams] = useQueryParams({\r\n        title: StringParam,\r\n        city: StringParam\r\n    }) \r\n    \r\n    setTasksQueryParams(queryParams.title!);\r\n    useEffect(() => {\r\n        getAllJobs();\r\n    }, [getAllJobs, taskQueryValues, queryParams])\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main\">\r\n                <div>\r\n                <h1 className=\"text__lg\">Results for {`\"${queryParams.title}\"`}</h1>\r\n                    <div className=\"query__body\">\r\n                    <QueryActions />\r\n                        {loadingInitial || tasks === null ? <InlineLoader /> : (\r\n                            <div>\r\n                                <QueryBody tasks={tasks} taskQueryValues={taskQueryValues}/>\r\n                            </div>\r\n                        )}                   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(QueryPage);",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\SoftAlert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\NotificationAlert.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidPageForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\PriceQueryForm.tsx",["605"],"﻿import {FormControl, FormLabel, HStack, InputLeftElement, InputGroup, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, MenuDivider, Flex, Spacer } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst PriceQueryForm = () => {\r\n    return (\r\n        <form>\r\n            <div style={{padding: \"1em\"}}>\r\n            <HStack spacing=\"24px\">\r\n                <FormControl id=\"min\">\r\n                    <FormLabel className=\"query__price__label\">Min</FormLabel>\r\n                    <InputGroup>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            fontSize=\"1.2em\"\r\n                            className=\"query__price__placeholder\"\r\n                        >\r\n                            $\r\n                        </InputLeftElement>\r\n                        <NumberInput size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                                <NumberInputField className=\"query__price__input\" />\r\n                            <NumberInputStepper>\r\n                                <NumberIncrementStepper />\r\n                                <NumberDecrementStepper />\r\n                            </NumberInputStepper>\r\n                        </NumberInput>\r\n                    </InputGroup>\r\n                </FormControl>\r\n                <FormControl id=\"max\">\r\n                    <FormLabel className=\"query__price__label\">Max</FormLabel>\r\n                    <InputGroup>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            fontSize=\"1.2em\"\r\n                            className=\"query__price__placeholder\"\r\n                        >\r\n                            $\r\n                        </InputLeftElement>\r\n                        <NumberInput size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                            <NumberInputField className=\"query__price__input\" />\r\n                            <NumberInputStepper>\r\n                                <NumberIncrementStepper />\r\n                                <NumberDecrementStepper />\r\n                            </NumberInputStepper>\r\n                        </NumberInput>\r\n                    </InputGroup>\r\n                </FormControl> \r\n            </HStack>\r\n            </div>\r\n            <MenuDivider />\r\n            <Flex alignItems=\"center\" style={{padding: \"0 1em\"}}>\r\n                <button className=\"btn btn__none\">Clear All</button>\r\n                <Spacer />\r\n                <button className=\"btn btn__primary btn__sm\">Apply</button>\r\n            </Flex>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PriceQueryForm;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ReviewSummary.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\reviews\\TaskrReviews.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\SkillsForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottom.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\index.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\Navbar.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\home\\HomePage.tsx",["606"],"﻿import { Box} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport {useMediaQuery} from \"@chakra-ui/react\";\r\nimport {RightArrowIcon} from \"../../infrastructure/icons/Icons\";\r\n\r\nconst HomePage = () => {\r\n    const [isMobile] = useMediaQuery(\"(max-width: 400px)\");\r\n    return (\r\n        <div>\r\n            <Box className=\"home__banner\">\r\n                <div className=\"container\">\r\n                    <div className=\"home__banner__container\">\r\n               <h1 className=\"home__banner__text\">The {isMobile ? \"No 1\": \"number one\"} online marketplace for delegating <i style={{fontWeight: \"initial\"}}>tasks</i></h1>\r\n                        <div className={isMobile ? \"\" : \"flexer\"}>\r\n                            <button className={isMobile ? \"btn btn__accent btn__shadow btn__bg btn__full-width\" : \"btn btn__primary btn__shadow btn__bg \"}>Become a runner</button>\r\n                            <p className=\"home__banner__learn\">Learn more <RightArrowIcon boxSize={8} /></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskDetailsForm.tsx",["607","608","609","610","611","612"],"﻿import {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    Input, InputGroup,\r\n    InputLeftElement,\r\n    NumberInput, NumberInputField,\r\n    SimpleGrid,\r\n    Stack,\r\n    Textarea\r\n} from \"@chakra-ui/react\";\r\nimport { Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, {lazy, Suspense, useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {StringParam, useQueryParams, NumberParam} from \"use-query-params\";\r\nimport SEO from \"../../application/appLayout/SEO\";\r\nimport {InfoIcon} from \"../../infrastructure/icons/Icons\";\r\nimport TaskFormImageUploader from \"./TaskFormImageUploader\";\r\nimport TaskFormUploadedImagesPreview from \"./TaskFormUploadedImagesPreview\";\r\nimport {DeliveryTypes} from \"../../infrastructure/enums/deliveryTypes\";\r\nimport InlineLoader from \"../../application/appLayout/InlineLoader\";\r\nimport {ITaskSubmission} from \"../../infrastructure/models/task\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport rootStoreContext from \"../../application/stores/rootstore\";\r\nimport {history} from \"../../index\";\r\nimport {Category} from \"../../infrastructure/enums/category\";\r\n\r\nconst Preview = lazy(() => import(\"./Preview\"));\r\nconst LocationComponent = lazy(() => import(\"./LocationFinder\"));\r\n\r\nconst TaskDetailsForm = () => {\r\n    const [taskDetails] = useQueryParams({\r\n        title: StringParam,\r\n        category: NumberParam,\r\n        deliveryType: NumberParam\r\n    })\r\n\r\n    const [isPreviewOpen, setIsPreviewOpen] = useState(false);\r\n\r\n    const togglePreviewWindow = useCallback(() => {\r\n        setIsPreviewOpen(!isPreviewOpen)\r\n    }, [isPreviewOpen])\r\n    const closePreviewWindow = useCallback(() => {\r\n        setIsPreviewOpen(false)\r\n    }, [isPreviewOpen]);\r\n\r\n    useEffect(() =>\r\n        window.addEventListener('beforeunload', () => closePreviewWindow())\r\n    );\r\n\r\n   const {createTask} = useContext(rootStoreContext).taskStore;\r\n   \r\n    return (\r\n        <div className=\"container\">\r\n            <SEO title={`${taskDetails.title} for ${taskDetails.category}`} />\r\n            <div className=\"main\">\r\n                <div style={{margin: \"1em 0\"}}>\r\n                    <h1 className=\"text__darker text__bigger__md\">Post your task it&apos;s <span className=\"text__primary\">Fast</span> & <span className=\"text__primary\">Easy</span></h1>\r\n                </div>\r\n                \r\n                <Formik initialValues={{title: taskDetails.title!, id: uuid(), description: \"\", urgent: false, imageFiles: [], address: \"\", postCode: \"\", price: 0, deliveryDate: \"\", category: taskDetails.category!, deliveryType: taskDetails.deliveryType!}} onSubmit={(values: ITaskSubmission, action) => {\r\n                    const taskSubmissionData = new FormData();\r\n                    taskSubmissionData.append(\"id\", values.id);\r\n                    taskSubmissionData.append(\"title\", values.title);\r\n                    taskSubmissionData.append(\"description\", values.description);\r\n                    values.imageFiles.forEach((image) => {\r\n                        taskSubmissionData.append(\"imageFiles\", image);\r\n                    })\r\n                    taskSubmissionData.append(\"address\", values.address);\r\n                    taskSubmissionData.append(\"postCode\", values.postCode);\r\n                    taskSubmissionData.append(\"initialPrice\", values.price.toString());\r\n                    taskSubmissionData.append(\"deliveryDate\", new Date(values.deliveryDate).toUTCString());\r\n                    taskSubmissionData.append(\"category\", values.category.toString());\r\n                    \r\n                    createTask(taskSubmissionData).then(() => history.push(`/task/${values.id}`)).catch(() => action.setSubmitting(false));\r\n                }}>\r\n                    {({\r\n                       handleChange,\r\n                       handleBlur, \r\n                       handleSubmit,\r\n                       values,\r\n                       errors,\r\n                       touched,\r\n                        setFieldValue,\r\n                        setFieldError,\r\n                        isSubmitting\r\n                    }) => (\r\n                        \r\n                    \r\n                <form onSubmit={handleSubmit}>\r\n                    \r\n                <div className=\"form__box\">\r\n                  <div className=\"form__box__description\">\r\n                      <div className=\"numbered__box\">1</div>\r\n                      Task Details\r\n                  </div>\r\n                  <Divider mt={4} mb={4} />  \r\n                  <div className=\"form__field form__task\">\r\n                      <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"15px\", sm: \"8px\"}}>\r\n                          <p className=\"form__detail\">Task title:</p>\r\n                          <div style={{width: \"100%\"}}>\r\n                          <Textarea name=\"title\" className=\"form__textarea form__textarea__no__label\" id=\"title\" rows={3} onChange={handleChange} onBlur={handleBlur} value={values.title} />\r\n                          {errors.title && touched.title && (\r\n                              <small className=\"form__error\">{errors.title}</small>\r\n                          )}\r\n                          </div>\r\n                      </Stack>\r\n                  </div>\r\n                    <div className=\"form__field form__task\">\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Selected Category:</p>\r\n                            <div style={{width: \"100%\"}}>\r\n                            <p className=\"text__darker\">{Category[taskDetails.category!]}</p>\r\n                            <span className=\"text__blue\">change</span>\r\n                            </div>\r\n                        </Stack>\r\n                    </div>\r\n\r\n                    <div className=\"form__field form__task\">\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Description:</p>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <Textarea name=\"description\" className=\"form__textarea form__textarea__no__label\" id=\"title\" rows={7} onChange={handleChange} onBlur={handleBlur} value={values.description} />\r\n                                {errors.description && touched.description ? (\r\n                                    <small className=\"form__error\">{errors.description}</small>\r\n                                ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Be as specific as you can about what needs doing</small>}\r\n                            </div>\r\n                        </Stack>\r\n                    </div>  \r\n\r\n                    <div className=\"form__field form__task\" style={{margin: \"2em 0\"}}>\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Urgency:<span style={{display: \"block\"}}>(Optional)</span></p>\r\n                                \r\n                            <div style={{width: \"100%\"}}>\r\n                                <Checkbox className=\"form__checkbox__bg\" size=\"lg\" colorScheme=\"green\" iconSize=\"2em\" spacing=\"1em\"><div className=\"urgent__label\">URGENT</div>\r\n                                </Checkbox>\r\n                                <div>\r\n                                <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Add an urgent label to let taskers know that you are looking for quick responses</small>\r\n                                </div>\r\n                                 </div>\r\n                        </Stack>\r\n                    </div>\r\n\r\n                    <div className=\"form__field form__task\" >\r\n                        <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                            <p className=\"form__detail\">Tags:<span style={{display: \"block\"}}>(Optional)</span></p>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <small className=\"text__dark__grey\">Increase your exposure. Enter up to 4 keywords taskers can use to search yout task.</small>\r\n                                \r\n                                <Stack style={{marginTop: \"1em\"}} direction=\"row\" spacing=\"20px\">\r\n                                    <Input style={{width: \"300px\"}} placeholder=\"Add a tag\" className=\"form__input\" />\r\n                                    <Button type=\"button\" style={{fontWeight: 500}} className=\"btn btn__sm btn__primary\">Add tag</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </Stack>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">2</div>\r\n                            Task Media (Optional)\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n                        \r\n                        <h1 className=\"title\">Add photos to imporve the interest on your task</h1>\r\n                        \r\n                        <p className=\"text__silent text__sm text__small__cut\">Add pictures that explain your task or pictures of what you want to be done. You can upload a maximum of 3 photos. The photos are stored in a cloudinary bucket and resize the image to the recommended 618px by 427px ratio. Drag an drop your photos into the given area below.</p>\r\n                        \r\n                        <SimpleGrid style={{margin: \"2em 0\", width: \"100%\"}} templateColumns={{xl: \"1fr 1fr\", lg: \"1fr 1fr\", md: \"1fr\", sm: \"1fr\"}}   spacing=\"20px\">\r\n                            <div>\r\n                        <TaskFormImageUploader setFieldValue={setFieldValue} />\r\n                            </div>\r\n                            <div>\r\n                        <TaskFormUploadedImagesPreview />\r\n                            </div>\r\n                        </SimpleGrid>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">3</div>\r\n                            Task Location\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n                        \r\n                        <div style={{marginBottom: \"1em\"}}>\r\n                            <p className=\"bold__label\">Delivery Type: <span className=\"text__darker\">{DeliveryTypes[taskDetails.deliveryType!]}</span></p>\r\n                            <p className=\"text__blue\">Change</p>\r\n                        </div>\r\n                        {taskDetails.deliveryType! === DeliveryTypes.InPerson ? (\r\n                            <Suspense fallback={<InlineLoader />}>\r\n                                <p className=\"text__darker\">Search and select your address</p>\r\n                                <LocationComponent addressErrors={errors.address} setFieldError={setFieldError} setFieldValue={setFieldValue} values={values} />\r\n                                <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>If you cannot see your address please select online as the delivery type then convey your real address to the runner on messages</small>\r\n                               \r\n                            </Suspense>\r\n                        ) : (\r\n                            <p className=\"text__darker\">This task will be delivered online</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form__box\">\r\n                        <div className=\"form__box__description\">\r\n                            <div className=\"numbered__box\">4</div>\r\n                            Budget & Dates\r\n                        </div>\r\n                        <Divider mt={4} mb={4} />\r\n\r\n                        <div className=\"form__field form__task\">\r\n                            <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                                <p className=\"form__detail\">Budget:</p>\r\n                                <div style={{width: \"100%\"}}>\r\n                                    <InputGroup>\r\n                                        <InputLeftElement\r\n                                            pointerEvents=\"none\"\r\n                                            fontSize=\"1.2em\"\r\n                                            className=\"query__price__placeholder__green\"\r\n                                        >\r\n                                            $\r\n                                        </InputLeftElement>\r\n                                        <NumberInput  clampValueOnBlur={false}  size=\"md\" defaultValue={0} precision={2} min={0}>\r\n                                            <NumberInputField name=\"price\" error={!!errors.price && touched.price} value={values.price} onChange={handleChange} onBlur={handleBlur}  className=\"task__price__input\" />\r\n                                        </NumberInput>\r\n                                    </InputGroup> \r\n                                    {errors.price && touched.price ? (\r\n                                        <small className=\"form__error\">{errors.price}</small>\r\n                                    ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Your budget signifies the max amount you can pay, runners will start bidding from that price.</small>}\r\n                                </div>\r\n                            </Stack>\r\n                        </div>\r\n\r\n                        <div className=\"form__field form__task\">\r\n                            <Stack direction={[\"column\", \"row\"]} spacing={{xl: \"15px\", lg: \"15px\", md: \"5px\", sm: \"8px\"}}>\r\n                                <p className=\"form__detail\">Delivery Date:</p>\r\n                                <div style={{width: \"100%\"}}>\r\n                                    <Input className=\"form__input\" type=\"date\" value={values.deliveryDate} onChange={handleChange} onBlur={handleBlur} name=\"deliveryDate\" min={new Date().toISOString().split(\"T\")[0]} />\r\n                                    {errors.deliveryDate && touched.deliveryDate ? (\r\n                                        <small className=\"form__error\">{errors.deliveryDate}</small>\r\n                                    ) : <small className=\"text__darker\"><span style={{marginRight: \"0.5em\"}}><InfoIcon boxSize={6} color=\"#3182CE\" /></span>Your task ends on the given date and you will have to re-activate it and set a new date</small>}\r\n                                </div>\r\n                            </Stack>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div style={{margin: \"1em 0\", lineHeight: \"12px\"}}>\r\n                        <small className=\"text__darker text__small__cut\">By listing your task on taskr, you are agreeing to our <span className=\"text__blue\">terms of use, privacy policy</span> and <span className=\"text__blue\">site policies</span>.</small>\r\n                        <small className=\"text__darker text__small__cut\" style={{display: \"block\"}}>Please do not post duplicate tasks.</small>\r\n                    </div>\r\n\r\n                    <Stack direction=\"row\" spacing=\"20px\">\r\n                    <Button isLoading={isSubmitting} className=\"btn btn__primary btn__nm btn__bg btn__shadow \" type=\"submit\">List your task</Button>\r\n                        <Button type=\"button\" className=\"btn btn__white btn__nm btn__bg \" onClick={togglePreviewWindow}>Preview</Button>\r\n                    </Stack>\r\n                </form>\r\n                    )}\r\n                </Formik>\r\n                \r\n            </div>\r\n            {isPreviewOpen && (\r\n                <Suspense fallback={<InlineLoader />}>\r\n                <Preview closeWindow={closePreviewWindow}>\r\n                    apple\r\n                </Preview>\r\n                </Suspense>\r\n            )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(TaskDetailsForm);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\skill.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPlaceholder.tsx",["613"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileDetails\\ProfileDetailsBottomPlaceholder.tsx",["614"],"﻿import {Box, Divider, Skeleton} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst ProfileDetailsBottomPlaceholder = () => {\r\n    return (\r\n        <Box className=\"task__bid__form__card\">\r\n            <Box>\r\n                <Skeleton width=\"100px\" height=\"20px\" />\r\n                \r\n                <Box mt={5}>\r\n                <Skeleton mt={5} height=\"20px\" />\r\n                <Skeleton mt={5} height=\"20px\" />\r\n                <Skeleton mt={5} height=\"20px\" />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Divider mt={6} mb={6} />\r\n            \r\n            <Box>\r\n                <Skeleton width=\"100px\" height=\"20px\" />\r\n\r\n                <Box mt={5}>\r\n                    <Skeleton mt={5} height=\"20px\" />\r\n                    <Skeleton mt={5} height=\"20px\" />\r\n                    <Skeleton mt={5} height=\"20px\" />\r\n                </Box> \r\n            </Box>\r\n\r\n            <Divider mt={6} mb={6} />\r\n            \r\n            <Box>\r\n                <ul className=\"profile__skill__list\">\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                    <li className=\"profile__skill__label\"><Skeleton width=\"70px\" height=\"15px\" /></li>\r\n                </ul>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProfileDetailsBottomPlaceholder;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskSection.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCard.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\TaskCardSlider.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\profileStore.tsx",["615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {ITask} from \"../../infrastructure/models/task\";\r\nimport {profileRequest} from \"../api/agent\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\nimport {TaskStatus} from \"../../infrastructure/enums/taskStatus\";\r\nimport {ILanguage, IPrivateProfile, ISkill, ISocials,} from \"../../infrastructure/models/profile\";\r\nimport {toast} from \"react-toastify\";\r\nimport {CheckmarkIcon} from \"../../infrastructure/icons/Icons\";\r\nimport Alert from \"../common/Alert\";\r\nimport React from \"react\";\r\nimport {IPaginatedNotificationsResponse} from \"../../infrastructure/models/notification\";\r\nimport {NotificationStatus} from \"../../infrastructure/enums/notification\";\r\n\r\nexport class ProfileStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeObservable(this);\r\n    }\r\n    \r\n    @observable profileActiveTasks : ITask[] | null = null;\r\n    @observable profileInactiveTasks : ITask[] | null = null; \r\n    @observable loadingInitial = false;\r\n    @observable privateProfile : IPrivateProfile | null = null;\r\n    @observable userNotifications : IPaginatedNotificationsResponse | null = null;\r\n    @observable loadingNotifications = false;\r\n    @observable watchList : ITask[] | null = null;\r\n    @action getProfileTasks = async (taskStatus: TaskStatus) => {\r\n        this.loadingInitial = true;\r\n        try{\r\n            const tasks = await profileRequest.getAllTasks(taskStatus);\r\n            runInAction(() => {\r\n                switch (taskStatus) {\r\n                    case TaskStatus.Active:\r\n                        this.profileActiveTasks = tasks;\r\n                        break;\r\n                    case TaskStatus.InActive:\r\n                        this.profileInactiveTasks = tasks;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.loadingInitial = false;\r\n            })\r\n        }catch (errors) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @observable getPrivateProfile = async () => {\r\n        this.loadingInitial = true;\r\n        try{\r\n           const profile = await profileRequest.getProfile();\r\n           runInAction(() => {\r\n               this.privateProfile = profile;\r\n               this.loadingInitial = false;\r\n           })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @observable addProfileSkills = async (values: ISkill) => {\r\n        try{\r\n            await profileRequest.addProfileSkills(values);\r\n            runInAction(() => {\r\n                this.privateProfile!.skillSet.unshift(values);\r\n                toast.success(<Alert type=\"success\" subject=\"Skills Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch (e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    @observable addProfileLanguages = async (values: ILanguage) => {\r\n        try{\r\n            await profileRequest.addProfileLanguages(values);\r\n            runInAction(() => {\r\n                this.privateProfile!.languages.unshift(values);\r\n                toast.success(<Alert type=\"success\" subject=\"Languages Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch (e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @observable updateProfile = async (values: any) => {\r\n        try{\r\n            await profileRequest.updateProfile(values);\r\n            runInAction(() => {\r\n                if(values.description){\r\n                    this.privateProfile!.bio = values.description;\r\n                }\r\n                if(values.tagline){\r\n                    this.privateProfile!.tagline = values.tagline;\r\n                }\r\n                \r\n\r\n                toast.success(<Alert type=\"success\" subject=\"Profile Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch(e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action updateSocials = async (values: ISocials) => {\r\n        try{\r\n            await profileRequest.updateSocials(values);\r\n            runInAction(() => {\r\n                if(values.twitter){\r\n                    this.privateProfile!.socials.twitter = values.twitter;\r\n                }\r\n                if(values.instagram){\r\n                    this.privateProfile!.socials.instagram = values.instagram;\r\n                }\r\n                if(values.facebook){\r\n                    this.privateProfile!.socials.facebook = values.facebook;\r\n                }\r\n                if(values.pinterest){\r\n                    this.privateProfile!.socials.pinterest = values.pinterest;\r\n                }\r\n\r\n                toast.success(<Alert type=\"success\" subject=\"Socials Updated\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"\" />)\r\n            })\r\n        }catch(e){\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action getUserNotifications = async (status?: NotificationStatus) => {\r\n        this.loadingNotifications = true;\r\n        try{\r\n           const notifs = await profileRequest.getNotifications(status);\r\n           runInAction(() => {\r\n               this.userNotifications = notifs;\r\n               this.loadingNotifications = false;\r\n           })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingNotifications = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action readNotification = async (notificationId: string) => {\r\n        try{\r\n            await profileRequest.markNotificationAsRead(notificationId);\r\n            runInAction(() => {\r\n                const notif = this.userNotifications?.data.find(x => x.id == notificationId);\r\n                notif!.status = NotificationStatus.Read;\r\n            })\r\n        }catch (errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action deleteNotification = async (notificationId: string) => {\r\n        try{\r\n            await profileRequest.deleteNotification(notificationId);\r\n            runInAction(() => {\r\n               this.userNotifications!.data = this.userNotifications!.data.filter(x => x.id !== notificationId); \r\n            })\r\n        }catch (errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        } \r\n    }\r\n    \r\n    @action markAllNotificationsAsRead = async () => {\r\n        try{\r\n            await profileRequest.markAllNotificationsAsRead();\r\n            runInAction(() => {\r\n               this.userNotifications?.data.forEach((notification) => {\r\n                   notification.status = NotificationStatus.Read;\r\n               }) \r\n                this.rootStore.authStore.user!.hasUnReadNotifications = false;\r\n            })\r\n        }catch (errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action deleteAllNotifications = async () => {\r\n        try{\r\n            await profileRequest.deleteAllNotifications();\r\n            runInAction(() => {\r\n                this.userNotifications!.data = [];\r\n                this.rootStore.authStore.user!.hasUnReadNotifications = false;\r\n            })\r\n        }catch(errors){\r\n            alertErrors(errors);\r\n            throw errors;\r\n        }\r\n    }\r\n    \r\n    @action getWatchlist = async (sortBy: string) => {\r\n        this.loadingInitial = true;\r\n        try{\r\n            const watchlist = await profileRequest.getWatchlist(sortBy);\r\n            runInAction(() => {\r\n                this.watchList = watchlist;\r\n                this.loadingInitial = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingInitial = false);\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n    \r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\ProfilePage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\taskStore.tsx",["642","643","644","645","646","647"],"﻿import {RootStore} from \"./rootstore\";\r\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {ITaskQueryValues, IPaginatedTaskResponse, ITask} from \"../../infrastructure/models/task\";\r\nimport {JobRequest} from \"../api/agent\";\r\nimport {toast} from \"react-toastify\";\r\nimport Alert from \"../common/Alert\";\r\nimport {CheckmarkIcon, CloseIcon} from \"../../infrastructure/icons/Icons\";\r\nimport React from \"react\";\r\nimport {alertErrors} from \"../../infrastructure/utils/getErrors\";\r\n\r\n//---------------------------------------------------------\r\n// Store for all Job related actions\r\n//---------------------------------------------------------\r\n\r\nexport class TaskStore{\r\n    rootStore: RootStore\r\n    constructor(rootStore: RootStore) {\r\n        makeObservable(this);\r\n        this.rootStore = rootStore;\r\n    }\r\n    \r\n    @observable tasks: IPaginatedTaskResponse | null = null;\r\n    @observable loadingInitial = false;\r\n    @observable taskQueryValues: ITaskQueryValues = {title: \"\", pageNumber: 1, pageSize: 20, maxPrice: 0, minPrice: 0};\r\n    @observable task: ITask | null = null;\r\n    @observable watching = false;\r\n    \r\n    // ------------------------\r\n    // Actions\r\n    // ------------------------\r\n    \r\n    @action getAllJobs = async () => {\r\n        this.loadingInitial = true;\r\n        try{\r\n            const paginatedJobResponse = await JobRequest.getAllTasks(this.taskQueryValues);\r\n            runInAction(() => {\r\n                this.tasks = paginatedJobResponse;\r\n                this.loadingInitial = false;\r\n            })\r\n        }catch (e) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Problem loading tasks\" />)\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    @action setTasksQueryParams = (title?: string, maxPrice?: number, minPrice?: number, pageNumber?: number, pageSize?: number) => {\r\n        this.taskQueryValues.title = title ? title : \"\";\r\n        this.taskQueryValues.maxPrice = maxPrice ? maxPrice : 0;\r\n        this.taskQueryValues.minPrice = minPrice ? minPrice : 0 ; \r\n        this.taskQueryValues.pageNumber = pageNumber ? pageNumber : 1;\r\n        this.taskQueryValues.pageSize = pageSize ? pageSize : 20;\r\n    }\r\n    \r\n    @action getTaskById = async (id: string) => {\r\n        this.loadingInitial = true;\r\n        try{\r\n          const taskResponse = await JobRequest.getTaskById(id);\r\n          runInAction(() => {\r\n              this.task = taskResponse;\r\n              if(this.rootStore.authStore.user?.id === this.task.creator.id){\r\n                  this.task.isOwner = true;\r\n              }\r\n              this.loadingInitial = false;\r\n          })\r\n        } catch (error) {\r\n            runInAction(() => this.loadingInitial = false);\r\n            toast.error(<Alert type=\"error\" subject=\"Error occurred\" icon={<CloseIcon boxSize={8} color=\"#73000c\"/>} message=\"Problem loading task\" />)\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    @action watchTask = async (taskId: string) => {\r\n        this.watching = true;\r\n        try{\r\n            await JobRequest.watchTask(taskId);\r\n            await runInAction(async () => {\r\n                if(this.tasks){\r\n                    const watchedTask = await this.tasks.data.find((task) => task.id === taskId);\r\n                    if(watchedTask !== undefined){\r\n                        watchedTask.isWatching = true;\r\n                    }\r\n                }\r\n                if(this.task){\r\n                    this.task.isWatching = true;\r\n                    this.task.watchCount++;\r\n                }\r\n                \r\n                this.watching = false;\r\n            })\r\n        } catch(e){\r\n            runInAction(() => this.watching = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    @action unWatchTask = async (taskId: string) => {\r\n        this.watching = true;\r\n        try{\r\n            await JobRequest.unwatchTask(taskId);\r\n            await runInAction(async () => {\r\n                if(this.tasks){\r\n                    const watchedTask = await this.tasks.data.find((task) => task.id === taskId);\r\n                    if(watchedTask !== undefined){\r\n                        watchedTask.isWatching = false;\r\n                    }\r\n                }\r\n                if(this.task){\r\n                    this.task.isWatching = false;\r\n                    this.task.watchCount--;\r\n                }\r\n                \r\n                if(this.rootStore.profileStore.watchList){\r\n                    this.rootStore.profileStore.watchList = this.rootStore.profileStore.watchList.filter(x => x.id !== taskId);\r\n                }\r\n\r\n                this.watching = false;\r\n            })\r\n        } catch(e){\r\n            runInAction(() => this.watching = false);\r\n            alertErrors(e);\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n    \r\n    @action createTask = async (taskSubmission: FormData) => {\r\n        try{\r\n            await JobRequest.createTask(taskSubmission);\r\n            toast.success(<Alert type=\"success\" subject=\"Task created\" icon={<CheckmarkIcon boxSize={8} color=\"#224a23\" />} message=\"Your task has been created & activated\" />)\r\n        }catch (e) {\r\n           alertErrors(e);\r\n           throw e;\r\n        }\r\n    }\r\n}","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\deliveryTypes.ts",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\BidForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Separator.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTable.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskTop.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\profileTasks\\ProfileTaskPlaceholder.tsx",["648"],"import React from \"react\";\nimport {Box, Divider, Grid, HStack, Skeleton, SkeletonCircle} from \"@chakra-ui/react\";\n\nconst ProfileTaskPlaceholder = () => {\n    return (\n        <Box>\n            <Skeleton mb={5} width=\"150px\" height=\"20px\" />\n            <Grid templateColumns={{xl: \"repeat(3, 1fr)\", lg: \"repeat(3, 1fr)\", md: \"repeat(2, 1fr)\", sm:\"1fr\"}} gap={7}>\n                <Box className=\"task__bid__form__card\" style={{marginBottom: \"0\", padding: \"0\", borderRadius: \"0\", position: \"relative\"}}>\n                   <Skeleton height=\"158px\" />\n                    <Box style={{padding: \"10px 15px\"}}>\n                        <HStack spacing=\"10px\">\n                            <SkeletonCircle width=\"30px\" height=\"30px\" />\n                            <Skeleton width=\"80%\" height=\"20px\" />\n                        </HStack>\n                        <Box mt={4}>\n                            <Skeleton height=\"20px\" />\n                        </Box>\n\n                        <Box mt={4}>\n                            <Skeleton mb={3} height=\"10px\" width=\"100px\" />\n                            <Skeleton height=\"10px\" width=\"100px\" />\n                        </Box>\n                    </Box>\n                    <Divider mt={2} mb={1} />\n                    <Box style={{padding: \"5px 15px\"}}>\n                        <HStack justifyContent=\"space-between\">\n                            <Skeleton height=\"20px\" width=\"100px\" />\n                            <Skeleton height=\"20px\" width=\"100px\" />\n                        </HStack>\n                    </Box>\n                </Box>\n                <Box className=\"task__bid__form__card\" style={{marginBottom: \"0\", padding: \"0\", borderRadius: \"0\", position: \"relative\"}}>\n                    <Skeleton height=\"158px\" />\n                    <Box style={{padding: \"10px 15px\"}}>\n                        <HStack spacing=\"10px\">\n                            <SkeletonCircle width=\"30px\" height=\"30px\" />\n                            <Skeleton width=\"80%\" height=\"20px\" />\n                        </HStack>\n                        <Box mt={4}>\n                            <Skeleton height=\"20px\" />\n                        </Box>\n\n                        <Box mt={4}>\n                            <Skeleton mb={3} height=\"10px\" width=\"100px\" />\n                            <Skeleton height=\"10px\" width=\"100px\" />\n                        </Box>\n                    </Box>\n                    <Divider mt={2} mb={1} />\n                    <Box style={{padding: \"5px 15px\"}}>\n                        <HStack justifyContent=\"space-between\">\n                            <Skeleton height=\"20px\" width=\"100px\" />\n                            <Skeleton height=\"20px\" width=\"100px\" />\n                        </HStack>\n                    </Box>\n                </Box>\n                <Box className=\"task__bid__form__card\" style={{marginBottom: \"0\", padding: \"0\", borderRadius: \"0\", position: \"relative\"}}>\n                    <Skeleton height=\"158px\" />\n                    <Box style={{padding: \"10px 15px\"}}>\n                        <HStack spacing=\"10px\">\n                            <SkeletonCircle width=\"30px\" height=\"30px\" />\n                            <Skeleton width=\"80%\" height=\"20px\" />\n                        </HStack>\n                        <Box mt={4}>\n                            <Skeleton height=\"20px\" />\n                        </Box>\n\n                        <Box mt={4}>\n                            <Skeleton mb={3} height=\"10px\" width=\"100px\" />\n                            <Skeleton height=\"10px\" width=\"100px\" />\n                        </Box>\n                    </Box>\n                    <Divider mt={2} mb={1} />\n                    <Box style={{padding: \"5px 15px\"}}>\n                        <HStack justifyContent=\"space-between\">\n                            <Skeleton height=\"20px\" width=\"100px\" />\n                            <Skeleton height=\"20px\" width=\"100px\" />\n                        </HStack>\n                    </Box>\n                </Box>\n            </Grid>\n        </Box>\n)\n}\n\nexport default ProfileTaskPlaceholder;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\publicProfile\\ProfileReviews\\ProfileReviews.tsx",["649"],"﻿import {Box, HStack, Tab, TabList, TabPanel, TabPanels, Tabs, useMediaQuery} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport TaskrReviews from \"../../profile/myProfile/reviews/TaskrReviews\";\nimport Rater from \"../../../application/common/Rater\";\n\nconst ProfileReviews = () => {\n    const [isMobile] = useMediaQuery(\"(max-width: 600px)\");\n    return (\n        <Box style={{marginTop: \"2em\"}}>\n            <HStack style={{marginTop: \"0.5em\"}} alignItems=\"center\" spacing=\"10px\">\n                <h1 className=\"text__heading text__darker\">Reviews</h1>\n                <Rater justifyContent=\"flex-start\" rating={4} boxSize={8} />\n                <h1 className=\"text__heading text__darker\">4.8</h1>\n                <p className=\"text__light__grey text__heading\">(2,860)</p>\n            </HStack>\n            <Tabs isFitted={isMobile} isLazy>\n                <TabList style={isMobile ? {width: \"100px\"} : {margin: \"0 auto\"}} className=\"profile__inner__tabs profile__review__tabs\">\n                    <Tab>As a Taskr</Tab>\n                    <Tab>As a Runner</Tab>\n                </TabList>\n\n                <TabPanels>\n                    <TabPanel>\n                        <Box className=\"task__bid__form__card\">\n                            <TaskrReviews />\n                        </Box>\n                    </TabPanel>\n                </TabPanels>\n            </Tabs>\n        </Box>\n    )\n}\n\nexport default ProfileReviews;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\SEO.tsx",["650"],"﻿import React from \"react\"\r\nimport { Helmet } from \"react-helmet\";\r\n\r\ninterface IProps{\r\n    description?: string;\r\n    keywords?: string[];\r\n    url?: string;\r\n    image?: string;\r\n    title?: string;\r\n    lang?: string;\r\n}\r\n\r\nfunction SEO({ description, lang, title, keywords}: IProps) {\r\n\r\n    const metaKeywords = keywords ? keywords : [\"site\", \"portfolio\", \"full-stack developer\", \"developer\", \"developer\", \"software engineer\", \"website\"]\r\n\r\n    return (\r\n        <Helmet\r\n            htmlAttributes={{\r\n                lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | Taskr`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: description \r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: title\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: description\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: \"Hundeyin Oluwadamilola\"\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: title\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: description\r\n                },\r\n            ].concat(metaKeywords && metaKeywords.length > 0 ? {\r\n                name: `keywords`,\r\n                content: metaKeywords.join(\",\")\r\n            } : [])}\r\n        />\r\n    )\r\n}\r\n\r\nSEO.defaultProps = {\r\n    lang: `en`,\r\n    meta: [],\r\n    description: ``,\r\n}\r\n\r\n\r\n\r\nexport default SEO\r\n",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\LocationFinder.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\appStore.tsx",["651","652","653","654","655","656","657","658","659","660"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskDescription.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskImages.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\account\\AccountTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\paging\\Pagination.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\stores\\chatStore.tsx",["661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\AuthNavItems.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskBidItem.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myTasks\\TaskTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\ProfileReviews.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\navAuth\\ProfileMenu.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\TaskrChatTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\InboxPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\RunnerChatTab.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatsPlaceholder.tsx",["684"],"﻿import {Box, StackDivider, HStack, Skeleton, SkeletonCircle, SimpleGrid, VStack, useMediaQuery} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst ChatsPlaceholder = () => {\r\n    const [isMobile] = useMediaQuery(\"(max-width: 600px)\");\r\n    return (\r\n        <Box className=\"container\">\r\n        <Box className=\"task__bid__form__card\">\r\n            <VStack\r\n                divider={<StackDivider borderColor=\"gray.200\" />}\r\n                spacing={9}\r\n                align=\"stretch\"\r\n            >\r\n                <Box>\r\n                <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                    {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                    <Box width=\"100%\">\r\n                        <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                            <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                            <Box width=\"100%\">\r\n                                <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                <Skeleton width=\"30%\" height=\"15px\" />\r\n                            </Box>\r\n                        </SimpleGrid>\r\n                    </Box>\r\n                    <Box height=\"inherit\">\r\n                        <Skeleton width=\"40px\" height=\"15px\" />\r\n                    </Box>\r\n                </HStack>\r\n                </Box>\r\n                <Box>\r\n                    <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                        {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                        <Box width=\"100%\">\r\n                            <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                                <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                                <Box width=\"100%\">\r\n                                    <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                    <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                    <Skeleton width=\"30%\" height=\"15px\" />\r\n                                </Box>\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                        <Box height=\"inherit\">\r\n                            <Skeleton width=\"40px\" height=\"15px\" />\r\n                        </Box>\r\n                    </HStack>\r\n                </Box>\r\n                <Box>\r\n                    <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                        {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                        <Box width=\"100%\">\r\n                            <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                                <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                                <Box width=\"100%\">\r\n                                    <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                    <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                    <Skeleton width=\"30%\" height=\"15px\" />\r\n                                </Box>\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                        <Box height=\"inherit\">\r\n                            <Skeleton width=\"40px\" height=\"15px\" />\r\n                        </Box>\r\n                    </HStack>\r\n                </Box>\r\n                <Box>\r\n                    <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                        {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                        <Box width=\"100%\">\r\n                            <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                                <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                                <Box width=\"100%\">\r\n                                    <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                    <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                    <Skeleton width=\"30%\" height=\"15px\" />\r\n                                </Box>\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                        <Box height=\"inherit\">\r\n                            <Skeleton width=\"40px\" height=\"15px\" />\r\n                        </Box>\r\n                    </HStack>\r\n                </Box>\r\n                <Box>\r\n                    <HStack alignItems=\"center\" spacing=\"30px\" width=\"100%\">\r\n                        {!isMobile && <Skeleton width=\"20px\" height=\"20px\" />}\r\n                        <Box width=\"100%\">\r\n                            <SimpleGrid templateColumns=\"0.1fr 2fr\" spacing=\"15px\" width=\"100%\">\r\n                                <SkeletonCircle width=\"80px\" height=\"80px\" />\r\n                                <Box width=\"100%\">\r\n                                    <Skeleton mb={\"17.5px\"} width=\"50%\" height=\"15px\" />\r\n                                    <Skeleton mb={\"17.5px\"} width=\"100%\" height=\"15px\" />\r\n                                    <Skeleton width=\"30%\" height=\"15px\" />\r\n                                </Box>\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                        <Box height=\"inherit\">\r\n                            <Skeleton width=\"40px\" height=\"15px\" />\r\n                        </Box>\r\n                    </HStack>\r\n                </Box>\r\n            </VStack>\r\n        </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatsPlaceholder;","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidHistoryPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryActions.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\TaskFormImageUploader.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\utils\\getErrors.tsx",["685","686"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\TaskTimer.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\ChatContainer.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePage.tsx",["687","688"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageTopBox.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\MessageBodyContainer.tsx",["689"],"﻿import React, {useEffect} from \"react\";\r\nimport {IChat} from \"../../../../infrastructure/models/chat\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport TextMessage from \"./TextMessage\";\r\n\r\ninterface IProps{\r\n    chat: IChat;\r\n}\r\n\r\nconst MessageBodyContainer : React.FC<IProps> = ({chat}) => {\r\n    // const messagesEnd = useRef<HTMLDivElement | null>(null);\r\n    const scrollToBottom = () => {\r\n        document.getElementById(\"messagesEnd\")!.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [chat.messages])\r\n    \r\n    return (\r\n        <Box className=\"message__body\">\r\n            {chat.messages.map((message) => (\r\n                <Box key={message.id}>\r\n                    <TextMessage message={message} />\r\n                </Box>\r\n            ))}\r\n            <div style={{ float:\"left\", clear: \"both\" }} id=\"messagesEnd\">\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default observer(MessageBodyContainer);","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\body\\TextMessage.tsx",["690","691","692","693","694"],"﻿import React, {useContext} from \"react\";\r\nimport {IMessage} from \"../../../../infrastructure/models/chat\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport { Box, HStack, Image } from \"@chakra-ui/react\";\r\nimport rootStoreContext from \"../../../../application/stores/rootstore\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\n\r\ninterface IProps{\r\n    message: IMessage\r\n}\r\n\r\nconst TextMessage : React.FC<IProps> = ({message}) => {\r\n    const {user} = useContext(rootStoreContext).authStore;\r\n    return (\r\n        <HStack style={{marginTop: \"1.5em\"}} justifyContent={user!.id === message.sender.id ? \"flex-end\" : \"flex-start\"}>\r\n            <Box>\r\n                <HStack spacing=\"8px\" alignItems=\"flex-end\">\r\n                    {user!.id !== message.sender.id && <Image src={message.sender.avatar} alt=\"sender-avatar\" className=\"avatar avatar__message\" />}\r\n        <Box className={`message__text ${user!.id === message.sender.id ? \"message__text__outgoing\" : \"message__text__incoming\"}`}>\r\n            {message.text}\r\n        </Box>\r\n                </HStack>\r\n                <small className=\"text__nt text__bold\" style={{textAlign: user!.id === message.sender.id ? \"right\" : \"left\", display: \"block\", marginLeft: user!.id !== message.sender.id ? \"38px\" : \"auto\" }}>{dayjs(message.sentAt).fromNow()}</small>\r\n            </Box>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default observer(TextMessage)","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Title-category.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\auth\\signin\\SignInPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\appLayout\\InlineLoader.tsx",["695"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavBottom.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\nav\\NavSearchInput.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\notifications\\NotificationsPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessageInput.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\enumFunctions.tsx",["696","697","698","699","700","701"],"﻿export function getAllEnumKeys(enumType: any){\r\n    return Object.keys(enumType).filter(key => isNaN(Number(key)))\r\n}\r\nexport function getAllEnumValues(enumType: any) {\r\n    return getAllEnumKeys(enumType).map((key: any) => enumType[key])\r\n}\r\nexport function getAllEnumEntries(enumType: any) {\r\n    return getAllEnumKeys(enumType).map((key : any) => [key, enumType[key]])\r\n}   ","C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\infrastructure\\enums\\bid.tsx",[],[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskCreatorDetails.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\createTask\\Preview.tsx",["702","703"],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\ReceiverProfile.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\task\\TaskPage.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\search\\QueryBody.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\application\\common\\Rater.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\settings\\billing\\BillingInformation.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\bid\\bidHistory\\BidAccordian.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\TagLine.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\profile\\myProfile\\forms\\TaglineForm.tsx",[],"C:\\Users\\Asus\\Desktop\\c#\\taskr-frontend\\src\\features\\Chat\\messages\\MessagePagePlaceholder.tsx",["704"],{"ruleId":"705","severity":1,"message":"706","line":4,"column":16,"nodeType":"707","messageId":"708","endLine":4,"endColumn":33},{"ruleId":"709","severity":1,"message":"710","line":34,"column":88,"nodeType":"711","messageId":"712","endLine":34,"endColumn":93},{"ruleId":"709","severity":1,"message":"710","line":35,"column":96,"nodeType":"711","messageId":"712","endLine":35,"endColumn":101},{"ruleId":"709","severity":1,"message":"710","line":36,"column":89,"nodeType":"711","messageId":"712","endLine":36,"endColumn":94},{"ruleId":"705","severity":1,"message":"713","line":64,"column":22,"nodeType":"714","messageId":"715","endLine":64,"endColumn":33},{"ruleId":"705","severity":1,"message":"713","line":85,"column":21,"nodeType":"714","messageId":"715","endLine":85,"endColumn":32},{"ruleId":"705","severity":1,"message":"706","line":107,"column":17,"nodeType":"716","messageId":"708","endLine":107,"endColumn":65},{"ruleId":"705","severity":1,"message":"713","line":107,"column":50,"nodeType":"714","messageId":"715","endLine":107,"endColumn":61},{"ruleId":"705","severity":1,"message":"706","line":35,"column":5,"nodeType":"717","messageId":"708","endLine":35,"endColumn":31},{"ruleId":"705","severity":1,"message":"706","line":45,"column":26,"nodeType":"716","messageId":"708","endLine":45,"endColumn":72},{"ruleId":"705","severity":1,"message":"706","line":59,"column":30,"nodeType":"716","messageId":"708","endLine":59,"endColumn":41},{"ruleId":"705","severity":1,"message":"706","line":73,"column":30,"nodeType":"716","messageId":"708","endLine":73,"endColumn":52},{"ruleId":"705","severity":1,"message":"713","line":73,"column":37,"nodeType":"714","messageId":"715","endLine":73,"endColumn":48},{"ruleId":"705","severity":1,"message":"706","line":87,"column":26,"nodeType":"716","messageId":"708","endLine":87,"endColumn":31},{"ruleId":"705","severity":1,"message":"706","line":3,"column":25,"nodeType":"716","messageId":"708","endLine":3,"endColumn":57},{"ruleId":"705","severity":1,"message":"706","line":21,"column":39,"nodeType":"716","messageId":"708","endLine":21,"endColumn":64},{"ruleId":"705","severity":1,"message":"706","line":39,"column":37,"nodeType":"716","messageId":"708","endLine":39,"endColumn":62},{"ruleId":"705","severity":1,"message":"706","line":4,"column":8,"nodeType":"707","messageId":"708","endLine":4,"endColumn":37},{"ruleId":"705","severity":1,"message":"718","line":4,"column":26,"nodeType":"714","messageId":"715","endLine":4,"endColumn":36},{"ruleId":"705","severity":1,"message":"706","line":12,"column":8,"nodeType":"707","messageId":"708","endLine":12,"endColumn":41},{"ruleId":"705","severity":1,"message":"718","line":12,"column":30,"nodeType":"714","messageId":"715","endLine":12,"endColumn":40},{"ruleId":"705","severity":1,"message":"706","line":64,"column":8,"nodeType":"707","messageId":"708","endLine":64,"endColumn":39},{"ruleId":"705","severity":1,"message":"718","line":64,"column":28,"nodeType":"714","messageId":"715","endLine":64,"endColumn":38},{"ruleId":"705","severity":1,"message":"706","line":111,"column":8,"nodeType":"707","messageId":"708","endLine":111,"endColumn":38},{"ruleId":"705","severity":1,"message":"718","line":111,"column":27,"nodeType":"714","messageId":"715","endLine":111,"endColumn":37},{"ruleId":"705","severity":1,"message":"706","line":160,"column":8,"nodeType":"707","messageId":"708","endLine":160,"endColumn":43},{"ruleId":"705","severity":1,"message":"718","line":160,"column":32,"nodeType":"714","messageId":"715","endLine":160,"endColumn":42},{"ruleId":"705","severity":1,"message":"706","line":208,"column":8,"nodeType":"707","messageId":"708","endLine":208,"endColumn":44},{"ruleId":"705","severity":1,"message":"718","line":208,"column":33,"nodeType":"714","messageId":"715","endLine":208,"endColumn":43},{"ruleId":"705","severity":1,"message":"706","line":220,"column":8,"nodeType":"707","messageId":"708","endLine":220,"endColumn":43},{"ruleId":"705","severity":1,"message":"718","line":220,"column":32,"nodeType":"714","messageId":"715","endLine":220,"endColumn":42},{"ruleId":"705","severity":1,"message":"706","line":228,"column":8,"nodeType":"707","messageId":"708","endLine":228,"endColumn":36},{"ruleId":"705","severity":1,"message":"718","line":228,"column":25,"nodeType":"714","messageId":"715","endLine":228,"endColumn":35},{"ruleId":"705","severity":1,"message":"706","line":325,"column":8,"nodeType":"707","messageId":"708","endLine":325,"endColumn":41},{"ruleId":"705","severity":1,"message":"718","line":325,"column":30,"nodeType":"714","messageId":"715","endLine":325,"endColumn":40},{"ruleId":"705","severity":1,"message":"706","line":334,"column":8,"nodeType":"707","messageId":"708","endLine":334,"endColumn":41},{"ruleId":"705","severity":1,"message":"718","line":334,"column":30,"nodeType":"714","messageId":"715","endLine":334,"endColumn":40},{"ruleId":"705","severity":1,"message":"706","line":342,"column":8,"nodeType":"707","messageId":"708","endLine":342,"endColumn":39},{"ruleId":"705","severity":1,"message":"718","line":342,"column":28,"nodeType":"714","messageId":"715","endLine":342,"endColumn":38},{"ruleId":"705","severity":1,"message":"706","line":391,"column":8,"nodeType":"707","messageId":"708","endLine":391,"endColumn":40},{"ruleId":"705","severity":1,"message":"718","line":391,"column":29,"nodeType":"714","messageId":"715","endLine":391,"endColumn":39},{"ruleId":"705","severity":1,"message":"706","line":399,"column":8,"nodeType":"707","messageId":"708","endLine":399,"endColumn":45},{"ruleId":"705","severity":1,"message":"718","line":399,"column":34,"nodeType":"714","messageId":"715","endLine":399,"endColumn":44},{"ruleId":"705","severity":1,"message":"706","line":407,"column":8,"nodeType":"707","messageId":"708","endLine":407,"endColumn":37},{"ruleId":"705","severity":1,"message":"718","line":407,"column":26,"nodeType":"714","messageId":"715","endLine":407,"endColumn":36},{"ruleId":"705","severity":1,"message":"706","line":463,"column":8,"nodeType":"707","messageId":"708","endLine":463,"endColumn":38},{"ruleId":"705","severity":1,"message":"718","line":463,"column":27,"nodeType":"714","messageId":"715","endLine":463,"endColumn":37},{"ruleId":"705","severity":1,"message":"706","line":471,"column":8,"nodeType":"707","messageId":"708","endLine":471,"endColumn":37},{"ruleId":"705","severity":1,"message":"718","line":471,"column":26,"nodeType":"714","messageId":"715","endLine":471,"endColumn":36},{"ruleId":"705","severity":1,"message":"706","line":522,"column":8,"nodeType":"707","messageId":"708","endLine":522,"endColumn":45},{"ruleId":"705","severity":1,"message":"718","line":522,"column":34,"nodeType":"714","messageId":"715","endLine":522,"endColumn":44},{"ruleId":"705","severity":1,"message":"706","line":561,"column":8,"nodeType":"707","messageId":"708","endLine":561,"endColumn":44},{"ruleId":"705","severity":1,"message":"718","line":561,"column":33,"nodeType":"714","messageId":"715","endLine":561,"endColumn":43},{"ruleId":"705","severity":1,"message":"706","line":600,"column":8,"nodeType":"707","messageId":"708","endLine":600,"endColumn":44},{"ruleId":"705","severity":1,"message":"718","line":600,"column":33,"nodeType":"714","messageId":"715","endLine":600,"endColumn":43},{"ruleId":"705","severity":1,"message":"706","line":649,"column":8,"nodeType":"707","messageId":"708","endLine":649,"endColumn":38},{"ruleId":"705","severity":1,"message":"718","line":649,"column":27,"nodeType":"714","messageId":"715","endLine":649,"endColumn":37},{"ruleId":"705","severity":1,"message":"706","line":657,"column":8,"nodeType":"707","messageId":"708","endLine":657,"endColumn":36},{"ruleId":"705","severity":1,"message":"718","line":657,"column":25,"nodeType":"714","messageId":"715","endLine":657,"endColumn":35},{"ruleId":"705","severity":1,"message":"706","line":701,"column":8,"nodeType":"707","messageId":"708","endLine":701,"endColumn":41},{"ruleId":"705","severity":1,"message":"718","line":701,"column":30,"nodeType":"714","messageId":"715","endLine":701,"endColumn":40},{"ruleId":"705","severity":1,"message":"706","line":761,"column":8,"nodeType":"707","messageId":"708","endLine":761,"endColumn":37},{"ruleId":"705","severity":1,"message":"718","line":761,"column":26,"nodeType":"714","messageId":"715","endLine":761,"endColumn":36},{"ruleId":"705","severity":1,"message":"706","line":808,"column":8,"nodeType":"707","messageId":"708","endLine":808,"endColumn":38},{"ruleId":"705","severity":1,"message":"718","line":808,"column":27,"nodeType":"714","messageId":"715","endLine":808,"endColumn":37},{"ruleId":"705","severity":1,"message":"706","line":816,"column":8,"nodeType":"707","messageId":"708","endLine":816,"endColumn":37},{"ruleId":"705","severity":1,"message":"718","line":816,"column":26,"nodeType":"714","messageId":"715","endLine":816,"endColumn":36},{"ruleId":"705","severity":1,"message":"706","line":824,"column":8,"nodeType":"707","messageId":"708","endLine":824,"endColumn":42},{"ruleId":"705","severity":1,"message":"718","line":824,"column":31,"nodeType":"714","messageId":"715","endLine":824,"endColumn":41},{"ruleId":"705","severity":1,"message":"706","line":868,"column":8,"nodeType":"707","messageId":"708","endLine":868,"endColumn":49},{"ruleId":"705","severity":1,"message":"718","line":868,"column":38,"nodeType":"714","messageId":"715","endLine":868,"endColumn":48},{"ruleId":"705","severity":1,"message":"706","line":922,"column":8,"nodeType":"707","messageId":"708","endLine":922,"endColumn":41},{"ruleId":"705","severity":1,"message":"718","line":922,"column":30,"nodeType":"714","messageId":"715","endLine":922,"endColumn":40},{"ruleId":"705","severity":1,"message":"706","line":930,"column":8,"nodeType":"707","messageId":"708","endLine":930,"endColumn":37},{"ruleId":"705","severity":1,"message":"718","line":930,"column":26,"nodeType":"714","messageId":"715","endLine":930,"endColumn":36},{"ruleId":"705","severity":1,"message":"706","line":1039,"column":8,"nodeType":"707","messageId":"708","endLine":1039,"endColumn":37},{"ruleId":"705","severity":1,"message":"718","line":1039,"column":26,"nodeType":"714","messageId":"715","endLine":1039,"endColumn":36},{"ruleId":"705","severity":1,"message":"706","line":1080,"column":16,"nodeType":"707","messageId":"708","endLine":1080,"endColumn":46},{"ruleId":"705","severity":1,"message":"718","line":1080,"column":35,"nodeType":"714","messageId":"715","endLine":1080,"endColumn":45},{"ruleId":"705","severity":1,"message":"706","line":1088,"column":8,"nodeType":"707","messageId":"708","endLine":1088,"endColumn":38},{"ruleId":"705","severity":1,"message":"718","line":1088,"column":27,"nodeType":"714","messageId":"715","endLine":1088,"endColumn":37},{"ruleId":"705","severity":1,"message":"706","line":1152,"column":8,"nodeType":"707","messageId":"708","endLine":1152,"endColumn":36},{"ruleId":"705","severity":1,"message":"718","line":1152,"column":25,"nodeType":"714","messageId":"715","endLine":1152,"endColumn":35},{"ruleId":"705","severity":1,"message":"706","line":1208,"column":8,"nodeType":"707","messageId":"708","endLine":1208,"endColumn":37},{"ruleId":"705","severity":1,"message":"718","line":1208,"column":26,"nodeType":"714","messageId":"715","endLine":1208,"endColumn":36},{"ruleId":"705","severity":1,"message":"706","line":1274,"column":8,"nodeType":"707","messageId":"708","endLine":1274,"endColumn":38},{"ruleId":"705","severity":1,"message":"718","line":1274,"column":27,"nodeType":"714","messageId":"715","endLine":1274,"endColumn":37},{"ruleId":"705","severity":1,"message":"706","line":1282,"column":8,"nodeType":"707","messageId":"708","endLine":1282,"endColumn":37},{"ruleId":"705","severity":1,"message":"718","line":1282,"column":26,"nodeType":"714","messageId":"715","endLine":1282,"endColumn":36},{"ruleId":"705","severity":1,"message":"706","line":1290,"column":8,"nodeType":"707","messageId":"708","endLine":1290,"endColumn":40},{"ruleId":"705","severity":1,"message":"718","line":1290,"column":29,"nodeType":"714","messageId":"715","endLine":1290,"endColumn":39},{"ruleId":"705","severity":1,"message":"706","line":1338,"column":8,"nodeType":"707","messageId":"708","endLine":1338,"endColumn":42},{"ruleId":"705","severity":1,"message":"718","line":1338,"column":31,"nodeType":"714","messageId":"715","endLine":1338,"endColumn":41},{"ruleId":"705","severity":1,"message":"706","line":1408,"column":8,"nodeType":"707","messageId":"708","endLine":1408,"endColumn":38},{"ruleId":"705","severity":1,"message":"718","line":1408,"column":27,"nodeType":"714","messageId":"715","endLine":1408,"endColumn":37},{"ruleId":"705","severity":1,"message":"706","line":1416,"column":8,"nodeType":"707","messageId":"708","endLine":1416,"endColumn":42},{"ruleId":"705","severity":1,"message":"718","line":1416,"column":31,"nodeType":"714","messageId":"715","endLine":1416,"endColumn":41},{"ruleId":"705","severity":1,"message":"706","line":1463,"column":8,"nodeType":"707","messageId":"708","endLine":1463,"endColumn":41},{"ruleId":"705","severity":1,"message":"718","line":1463,"column":30,"nodeType":"714","messageId":"715","endLine":1463,"endColumn":40},{"ruleId":"705","severity":1,"message":"706","line":1471,"column":8,"nodeType":"707","messageId":"708","endLine":1471,"endColumn":43},{"ruleId":"705","severity":1,"message":"718","line":1471,"column":32,"nodeType":"714","messageId":"715","endLine":1471,"endColumn":42},{"ruleId":"705","severity":1,"message":"706","line":1483,"column":8,"nodeType":"707","messageId":"708","endLine":1483,"endColumn":44},{"ruleId":"705","severity":1,"message":"718","line":1483,"column":33,"nodeType":"714","messageId":"715","endLine":1483,"endColumn":43},{"ruleId":"705","severity":1,"message":"706","line":1491,"column":8,"nodeType":"707","messageId":"708","endLine":1491,"endColumn":44},{"ruleId":"705","severity":1,"message":"718","line":1491,"column":33,"nodeType":"714","messageId":"715","endLine":1491,"endColumn":43},{"ruleId":"705","severity":1,"message":"706","line":3,"column":16,"nodeType":"707","messageId":"708","endLine":3,"endColumn":57},{"ruleId":"705","severity":1,"message":"719","line":3,"column":36,"nodeType":"714","messageId":"720","endLine":3,"endColumn":45},{"ruleId":"705","severity":1,"message":"721","line":3,"column":47,"nodeType":"714","messageId":"720","endLine":3,"endColumn":56},{"ruleId":"705","severity":1,"message":"706","line":4,"column":38,"nodeType":"716","messageId":"708","endLine":4,"endColumn":43},{"ruleId":"709","severity":1,"message":"710","line":16,"column":25,"nodeType":"711","messageId":"712","endLine":16,"endColumn":43},{"ruleId":"705","severity":1,"message":"706","line":4,"column":24,"nodeType":"716","messageId":"708","endLine":4,"endColumn":29},{"ruleId":"705","severity":1,"message":"706","line":6,"column":18,"nodeType":"716","messageId":"708","endLine":6,"endColumn":23},{"ruleId":"709","severity":1,"message":"710","line":61,"column":48,"nodeType":"711","messageId":"712","endLine":61,"endColumn":66},{"ruleId":"709","severity":1,"message":"710","line":61,"column":193,"nodeType":"711","messageId":"712","endLine":61,"endColumn":214},{"ruleId":"709","severity":1,"message":"710","line":61,"column":230,"nodeType":"711","messageId":"712","endLine":61,"endColumn":255},{"ruleId":"709","severity":1,"message":"710","line":113,"column":67,"nodeType":"711","messageId":"712","endLine":113,"endColumn":88},{"ruleId":"709","severity":1,"message":"710","line":191,"column":117,"nodeType":"711","messageId":"712","endLine":191,"endColumn":142},{"ruleId":"709","severity":1,"message":"710","line":194,"column":26,"nodeType":"711","messageId":"712","endLine":194,"endColumn":51},{"ruleId":"705","severity":1,"message":"706","line":4,"column":34,"nodeType":"716","messageId":"708","endLine":4,"endColumn":39},{"ruleId":"705","severity":1,"message":"706","line":4,"column":41,"nodeType":"716","messageId":"708","endLine":4,"endColumn":46},{"ruleId":"705","severity":1,"message":"706","line":29,"column":31,"nodeType":"716","messageId":"708","endLine":29,"endColumn":64},{"ruleId":"705","severity":1,"message":"706","line":53,"column":37,"nodeType":"716","messageId":"708","endLine":53,"endColumn":48},{"ruleId":"705","severity":1,"message":"706","line":68,"column":36,"nodeType":"716","messageId":"708","endLine":68,"endColumn":61},{"ruleId":"709","severity":1,"message":"710","line":72,"column":17,"nodeType":"711","messageId":"712","endLine":72,"endColumn":37,"suggestions":"722"},{"ruleId":"705","severity":1,"message":"706","line":81,"column":39,"nodeType":"716","messageId":"708","endLine":81,"endColumn":67},{"ruleId":"709","severity":1,"message":"710","line":85,"column":17,"nodeType":"711","messageId":"712","endLine":85,"endColumn":37,"suggestions":"723"},{"ruleId":"705","severity":1,"message":"706","line":94,"column":33,"nodeType":"716","messageId":"708","endLine":94,"endColumn":55},{"ruleId":"705","severity":1,"message":"713","line":94,"column":40,"nodeType":"714","messageId":"715","endLine":94,"endColumn":51},{"ruleId":"709","severity":1,"message":"710","line":99,"column":21,"nodeType":"711","messageId":"712","endLine":99,"endColumn":41,"suggestions":"724"},{"ruleId":"709","severity":1,"message":"710","line":102,"column":21,"nodeType":"711","messageId":"712","endLine":102,"endColumn":41,"suggestions":"725"},{"ruleId":"705","severity":1,"message":"706","line":114,"column":29,"nodeType":"716","messageId":"708","endLine":114,"endColumn":56},{"ruleId":"709","severity":1,"message":"710","line":119,"column":21,"nodeType":"711","messageId":"712","endLine":119,"endColumn":41,"suggestions":"726"},{"ruleId":"709","severity":1,"message":"710","line":122,"column":21,"nodeType":"711","messageId":"712","endLine":122,"endColumn":41,"suggestions":"727"},{"ruleId":"709","severity":1,"message":"710","line":125,"column":21,"nodeType":"711","messageId":"712","endLine":125,"endColumn":41,"suggestions":"728"},{"ruleId":"709","severity":1,"message":"710","line":128,"column":21,"nodeType":"711","messageId":"712","endLine":128,"endColumn":41,"suggestions":"729"},{"ruleId":"705","severity":1,"message":"706","line":139,"column":36,"nodeType":"716","messageId":"708","endLine":139,"endColumn":74},{"ruleId":"705","severity":1,"message":"706","line":154,"column":32,"nodeType":"716","messageId":"708","endLine":154,"endColumn":65},{"ruleId":"709","severity":1,"message":"710","line":159,"column":17,"nodeType":"711","messageId":"712","endLine":159,"endColumn":23,"suggestions":"730"},{"ruleId":"705","severity":1,"message":"706","line":167,"column":34,"nodeType":"716","messageId":"708","endLine":167,"endColumn":67},{"ruleId":"709","severity":1,"message":"710","line":171,"column":16,"nodeType":"711","messageId":"712","endLine":171,"endColumn":39,"suggestions":"731"},{"ruleId":"709","severity":1,"message":"710","line":171,"column":47,"nodeType":"711","messageId":"712","endLine":171,"endColumn":70,"suggestions":"732"},{"ruleId":"705","severity":1,"message":"706","line":179,"column":42,"nodeType":"716","messageId":"708","endLine":179,"endColumn":53},{"ruleId":"709","severity":1,"message":"710","line":186,"column":17,"nodeType":"711","messageId":"712","endLine":186,"endColumn":47,"suggestions":"733"},{"ruleId":"705","severity":1,"message":"706","line":194,"column":38,"nodeType":"716","messageId":"708","endLine":194,"endColumn":49},{"ruleId":"709","severity":1,"message":"710","line":198,"column":17,"nodeType":"711","messageId":"712","endLine":198,"endColumn":40,"suggestions":"734"},{"ruleId":"709","severity":1,"message":"710","line":199,"column":17,"nodeType":"711","messageId":"712","endLine":199,"endColumn":47,"suggestions":"735"},{"ruleId":"705","severity":1,"message":"706","line":207,"column":28,"nodeType":"716","messageId":"708","endLine":207,"endColumn":53},{"ruleId":"705","severity":1,"message":"706","line":32,"column":26,"nodeType":"716","messageId":"708","endLine":32,"endColumn":37},{"ruleId":"705","severity":1,"message":"706","line":47,"column":35,"nodeType":"716","messageId":"708","endLine":47,"endColumn":132},{"ruleId":"705","severity":1,"message":"706","line":55,"column":27,"nodeType":"716","messageId":"708","endLine":55,"endColumn":48},{"ruleId":"705","severity":1,"message":"706","line":73,"column":25,"nodeType":"716","messageId":"708","endLine":73,"endColumn":50},{"ruleId":"705","severity":1,"message":"706","line":98,"column":27,"nodeType":"716","messageId":"708","endLine":98,"endColumn":52},{"ruleId":"705","severity":1,"message":"706","line":128,"column":26,"nodeType":"716","messageId":"708","endLine":128,"endColumn":61},{"ruleId":"705","severity":1,"message":"706","line":4,"column":32,"nodeType":"716","messageId":"708","endLine":4,"endColumn":37},{"ruleId":"705","severity":1,"message":"706","line":6,"column":24,"nodeType":"716","messageId":"708","endLine":6,"endColumn":29},{"ruleId":"705","severity":1,"message":"706","line":13,"column":1,"nodeType":"707","messageId":"708","endLine":13,"endColumn":60},{"ruleId":"705","severity":1,"message":"706","line":25,"column":47,"nodeType":"716","messageId":"708","endLine":25,"endColumn":52},{"ruleId":"709","severity":1,"message":"710","line":27,"column":40,"nodeType":"711","messageId":"712","endLine":27,"endColumn":71},{"ruleId":"709","severity":1,"message":"710","line":31,"column":71,"nodeType":"711","messageId":"712","endLine":31,"endColumn":102,"suggestions":"736"},{"ruleId":"709","severity":1,"message":"710","line":34,"column":13,"nodeType":"711","messageId":"712","endLine":34,"endColumn":43,"suggestions":"737"},{"ruleId":"705","severity":1,"message":"706","line":47,"column":33,"nodeType":"716","messageId":"708","endLine":47,"endColumn":38},{"ruleId":"709","severity":1,"message":"710","line":48,"column":9,"nodeType":"711","messageId":"712","endLine":48,"endColumn":40,"suggestions":"738"},{"ruleId":"705","severity":1,"message":"706","line":51,"column":28,"nodeType":"716","messageId":"708","endLine":51,"endColumn":33},{"ruleId":"705","severity":1,"message":"706","line":55,"column":32,"nodeType":"716","messageId":"708","endLine":55,"endColumn":47},{"ruleId":"705","severity":1,"message":"739","line":55,"column":33,"nodeType":"714","messageId":"715","endLine":55,"endColumn":43},{"ruleId":"705","severity":1,"message":"706","line":59,"column":34,"nodeType":"716","messageId":"708","endLine":59,"endColumn":39},{"ruleId":"705","severity":1,"message":"706","line":24,"column":35,"nodeType":"716","messageId":"708","endLine":24,"endColumn":54},{"ruleId":"709","severity":1,"message":"710","line":27,"column":39,"nodeType":"711","messageId":"712","endLine":27,"endColumn":70},{"ruleId":"709","severity":1,"message":"710","line":31,"column":59,"nodeType":"711","messageId":"712","endLine":31,"endColumn":78,"suggestions":"740"},{"ruleId":"709","severity":1,"message":"710","line":34,"column":13,"nodeType":"711","messageId":"712","endLine":34,"endColumn":32,"suggestions":"741"},{"ruleId":"709","severity":1,"message":"710","line":39,"column":17,"nodeType":"711","messageId":"712","endLine":39,"endColumn":27,"suggestions":"742"},{"ruleId":"709","severity":1,"message":"710","line":41,"column":13,"nodeType":"711","messageId":"712","endLine":41,"endColumn":52,"suggestions":"743"},{"ruleId":"705","severity":1,"message":"706","line":49,"column":33,"nodeType":"716","messageId":"708","endLine":49,"endColumn":38},{"ruleId":"709","severity":1,"message":"710","line":50,"column":9,"nodeType":"711","messageId":"712","endLine":50,"endColumn":28,"suggestions":"744"},{"ruleId":"709","severity":1,"message":"710","line":50,"column":54,"nodeType":"711","messageId":"712","endLine":50,"endColumn":64,"suggestions":"745"},{"ruleId":"709","severity":1,"message":"710","line":51,"column":13,"nodeType":"711","messageId":"712","endLine":51,"endColumn":32,"suggestions":"746"},{"ruleId":"705","severity":1,"message":"706","line":54,"column":27,"nodeType":"716","messageId":"708","endLine":54,"endColumn":49},{"ruleId":"705","severity":1,"message":"713","line":54,"column":34,"nodeType":"714","messageId":"715","endLine":54,"endColumn":45},{"ruleId":"709","severity":1,"message":"710","line":57,"column":25,"nodeType":"711","messageId":"712","endLine":57,"endColumn":35,"suggestions":"747"},{"ruleId":"709","severity":1,"message":"710","line":57,"column":48,"nodeType":"711","messageId":"712","endLine":57,"endColumn":78,"suggestions":"748"},{"ruleId":"709","severity":1,"message":"710","line":57,"column":84,"nodeType":"711","messageId":"712","endLine":57,"endColumn":94,"suggestions":"749"},{"ruleId":"709","severity":1,"message":"710","line":57,"column":107,"nodeType":"711","messageId":"712","endLine":57,"endColumn":117,"suggestions":"750"},{"ruleId":"709","severity":1,"message":"710","line":58,"column":21,"nodeType":"711","messageId":"712","endLine":58,"endColumn":31,"suggestions":"751"},{"ruleId":"709","severity":1,"message":"710","line":61,"column":35,"nodeType":"711","messageId":"712","endLine":61,"endColumn":54,"suggestions":"752"},{"ruleId":"705","severity":1,"message":"706","line":68,"column":27,"nodeType":"716","messageId":"708","endLine":68,"endColumn":55},{"ruleId":"705","severity":1,"message":"706","line":92,"column":27,"nodeType":"716","messageId":"708","endLine":92,"endColumn":52},{"ruleId":"705","severity":1,"message":"706","line":108,"column":33,"nodeType":"716","messageId":"708","endLine":108,"endColumn":87},{"ruleId":"705","severity":1,"message":"713","line":108,"column":72,"nodeType":"714","messageId":"715","endLine":108,"endColumn":83},{"ruleId":"709","severity":1,"message":"710","line":112,"column":17,"nodeType":"711","messageId":"712","endLine":112,"endColumn":47,"suggestions":"753"},{"ruleId":"705","severity":1,"message":"706","line":4,"column":26,"nodeType":"716","messageId":"708","endLine":4,"endColumn":31},{"ruleId":"705","severity":1,"message":"706","line":6,"column":8,"nodeType":"707","messageId":"708","endLine":6,"endColumn":41},{"ruleId":"705","severity":1,"message":"754","line":6,"column":29,"nodeType":"714","messageId":"715","endLine":6,"endColumn":40},{"ruleId":"709","severity":1,"message":"710","line":18,"column":85,"nodeType":"711","messageId":"712","endLine":18,"endColumn":94,"suggestions":"755"},{"ruleId":"709","severity":1,"message":"710","line":31,"column":80,"nodeType":"711","messageId":"712","endLine":31,"endColumn":85,"suggestions":"756"},{"ruleId":"709","severity":1,"message":"710","line":14,"column":9,"nodeType":"711","messageId":"712","endLine":14,"endColumn":48,"suggestions":"757"},{"ruleId":"709","severity":1,"message":"710","line":19,"column":62,"nodeType":"711","messageId":"712","endLine":19,"endColumn":67,"suggestions":"758"},{"ruleId":"709","severity":1,"message":"710","line":22,"column":22,"nodeType":"711","messageId":"712","endLine":22,"endColumn":27,"suggestions":"759"},{"ruleId":"709","severity":1,"message":"710","line":23,"column":42,"nodeType":"711","messageId":"712","endLine":23,"endColumn":47,"suggestions":"760"},{"ruleId":"709","severity":1,"message":"710","line":27,"column":75,"nodeType":"711","messageId":"712","endLine":27,"endColumn":80,"suggestions":"761"},{"ruleId":"709","severity":1,"message":"710","line":27,"column":156,"nodeType":"711","messageId":"712","endLine":27,"endColumn":161,"suggestions":"762"},{"ruleId":"705","severity":1,"message":"706","line":4,"column":22,"nodeType":"716","messageId":"708","endLine":4,"endColumn":27},{"ruleId":"705","severity":1,"message":"706","line":1,"column":8,"nodeType":"707","messageId":"708","endLine":1,"endColumn":46},{"ruleId":"705","severity":1,"message":"763","line":1,"column":32,"nodeType":"714","messageId":"715","endLine":1,"endColumn":45},{"ruleId":"705","severity":1,"message":"706","line":4,"column":8,"nodeType":"707","messageId":"708","endLine":4,"endColumn":48},{"ruleId":"705","severity":1,"message":"763","line":4,"column":34,"nodeType":"714","messageId":"715","endLine":4,"endColumn":47},{"ruleId":"705","severity":1,"message":"706","line":7,"column":8,"nodeType":"707","messageId":"708","endLine":7,"endColumn":49},{"ruleId":"705","severity":1,"message":"763","line":7,"column":35,"nodeType":"714","messageId":"715","endLine":7,"endColumn":48},{"ruleId":"705","severity":1,"message":"706","line":5,"column":17,"nodeType":"716","messageId":"708","endLine":5,"endColumn":32},{"ruleId":"705","severity":1,"message":"718","line":5,"column":18,"nodeType":"714","messageId":"715","endLine":5,"endColumn":28},{"ruleId":"705","severity":1,"message":"706","line":4,"column":32,"nodeType":"716","messageId":"708","endLine":4,"endColumn":37},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","Argument 'values' should be typed with a non-any type.","Identifier","anyTypedArg","ArrowFunctionExpression","FunctionExpression","Argument 'props' should be typed with a non-any type.","Argument 'sourceDoc' should be typed.","missingArgType","Argument 'targetDoc' should be typed.",["764"],["765"],["766"],["767"],["768"],["769"],["770"],["771"],["772"],["773"],["774"],["775"],["776"],["777"],["778"],["779"],["780"],"Argument 'files' should be typed with a non-any type.",["781"],["782"],["783"],["784"],["785"],["786"],["787"],["788"],["789"],["790"],["791"],["792"],["793"],["794"],"Argument 'errors' should be typed with a non-any type.",["795"],["796"],["797"],["798"],["799"],["800"],["801"],["802"],"Argument 'enumType' should be typed with a non-any type.",{"messageId":"803","fix":"804","desc":"805"},{"messageId":"803","fix":"806","desc":"805"},{"messageId":"803","fix":"807","desc":"805"},{"messageId":"803","fix":"808","desc":"805"},{"messageId":"803","fix":"809","desc":"805"},{"messageId":"803","fix":"810","desc":"805"},{"messageId":"803","fix":"811","desc":"805"},{"messageId":"803","fix":"812","desc":"805"},{"messageId":"803","fix":"813","desc":"805"},{"messageId":"803","fix":"814","desc":"805"},{"messageId":"803","fix":"815","desc":"805"},{"messageId":"803","fix":"816","desc":"805"},{"messageId":"803","fix":"817","desc":"805"},{"messageId":"803","fix":"818","desc":"805"},{"messageId":"803","fix":"819","desc":"805"},{"messageId":"803","fix":"820","desc":"805"},{"messageId":"803","fix":"821","desc":"805"},{"messageId":"803","fix":"822","desc":"805"},{"messageId":"803","fix":"823","desc":"805"},{"messageId":"803","fix":"824","desc":"805"},{"messageId":"803","fix":"825","desc":"805"},{"messageId":"803","fix":"826","desc":"805"},{"messageId":"803","fix":"827","desc":"805"},{"messageId":"803","fix":"828","desc":"805"},{"messageId":"803","fix":"829","desc":"805"},{"messageId":"803","fix":"830","desc":"805"},{"messageId":"803","fix":"831","desc":"805"},{"messageId":"803","fix":"832","desc":"805"},{"messageId":"803","fix":"833","desc":"805"},{"messageId":"803","fix":"834","desc":"805"},{"messageId":"803","fix":"835","desc":"805"},{"messageId":"803","fix":"836","desc":"805"},{"messageId":"803","fix":"837","desc":"805"},{"messageId":"803","fix":"838","desc":"805"},{"messageId":"803","fix":"839","desc":"805"},{"messageId":"803","fix":"840","desc":"805"},{"messageId":"803","fix":"841","desc":"805"},{"messageId":"803","fix":"842","desc":"805"},{"messageId":"803","fix":"843","desc":"805"},"suggestOptionalChain",{"range":"844","text":"845"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"846","text":"845"},{"range":"847","text":"845"},{"range":"848","text":"845"},{"range":"849","text":"845"},{"range":"850","text":"845"},{"range":"851","text":"845"},{"range":"852","text":"845"},{"range":"853","text":"845"},{"range":"854","text":"845"},{"range":"855","text":"845"},{"range":"856","text":"845"},{"range":"857","text":"845"},{"range":"858","text":"845"},{"range":"859","text":"845"},{"range":"860","text":"845"},{"range":"861","text":"845"},{"range":"862","text":"845"},{"range":"863","text":"845"},{"range":"864","text":"845"},{"range":"865","text":"845"},{"range":"866","text":"845"},{"range":"867","text":"845"},{"range":"868","text":"845"},{"range":"869","text":"845"},{"range":"870","text":"845"},{"range":"871","text":"845"},{"range":"872","text":"845"},{"range":"873","text":"845"},{"range":"874","text":"845"},{"range":"875","text":"845"},{"range":"876","text":"845"},{"range":"877","text":"845"},{"range":"878","text":"845"},{"range":"879","text":"845"},{"range":"880","text":"845"},{"range":"881","text":"845"},{"range":"882","text":"845"},{"range":"883","text":"845"},[2899,2900],"?",[3397,3398],[3930,3931],[4054,4055],[4619,4620],[4753,4754],[4890,4891],[5026,5027],[6170,6171],[6558,6559],[6589,6590],[7136,7137],[7495,7496],[7554,7555],[1342,1343],[1505,1506],[1895,1896],[1385,1386],[1552,1553],[1787,1788],[1880,1881],[2111,2112],[2147,2148],[2195,2196],[2446,2447],[2489,2490],[2505,2506],[2528,2529],[2570,2571],[2654,2655],[4313,4314],[993,994],[1750,1751],[484,485],[642,643],[806,807],[976,977],[1213,1214],[1294,1295]]